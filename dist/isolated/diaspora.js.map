{"version":3,"sources":["../src/diaspora.js"],"names":["f","exports","module","define","amd","g","window","global","self","Diaspora","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","process","browser","_","cachedDiaspora","find","cache","path","endsWith","sep","isEmpty","get","console","log","undefined","getNum","fullMatch","sign","val","Infinity","parseInt","validations","type","int","key","isString","isInteger","isFinite","TypeError","rng","range","rangeMatch","match","lower","splice","upper","isInRangeLower","isInRangeUpper","RangeError","validateOption","config","iterateLimit","options","query","foundEntities","foundCount","origSkip","skip","loopFind","isNil","found","Promise","resolve","push","limit","then","remapIO","adapter","tableName","input","direction","filtered","mapValues","value","filter","isFunction","remapType","remaped","mapKeys","OPERATORS","$exists","entityVal","targetVal","isUndefined","$equal","$diff","$less","$lessEqual","$greater","$greaterEqual","CANONICAL_OPERATORS","QUERY_OPTIONS_TRANSFORMS","opts","page","hasOwnProperty","ReferenceError","SequentialEvent","DiasporaAdapter","classEntity","state","remaps","remapsInverted","filters","error","on","err","configureCollection","normal","inverted","invert","waitReady","reject","maybeCastEntity","data","maybeCastSet","datas","map","bind","remapInput","remapOutput","setIdHash","entity","propName","idHash","assign","name","matchEntity","matchResult","every","toPairs","desc","isObject","operation","normalizeOptions","cloneDeep","forEach","transform","optionName","defaults","normalizeQuery","originalQuery","id","normalizedQuery","attrSearch","Object","operator","obj","isNumber","isDate","JSON","stringify","toJSON","pick","insertOne","table","insertMany","first","entities","mapSeries","findOne","queryFind","findMany","updateOne","update","updateMany","deleteOne","deleteMany","count","DataStoreEntity","dataSource","defineProperties","enumerable","configurable","toObject","omit","Utils","components","Adapters","Adapter","InMemoryEntity","InMemoryDiasporaAdapter","store","ensureCollectionExists","items","storeTable","generateUUID","matches","partial","reducedMatches","applyOptionsToSet","applyUpdateEntity","foundIds","indexOf","item","entityToDelete","entitiesIds","entitiesToDelete","includes","WebApiEntity","queryObjectToString","queryObject","chain","omitBy","encodeURIComponent","arr","join","httpErrorFactories","xhr","response","message","status","defineXhrEvents","onload","inRange","onerror","httpRequest","method","endPoint","toLowerCase","json","qs","XMLHttpRequest","queryString","responseType","open","setRequestHeader","send","getQueryObject","where","maybeAddIdHashToEntities","unary","checkWebApiAdapterConfig","host","scheme","WebApiDiasporaAdapter","port","pluralApis","baseEndPoint","portString","schemeString","httpQuery","verb","getPluralEndpoint","WebStorageEntity","WebStorageDiasporaAdapter","session","source","sessionStorage","localStorage","index","getItem","setItem","parse","getItemName","tableIndex","findOneById","isEqual","keys","returnedItem","matched","each","itemId","pull","removeItem","pullAll","version","dependencies","logger","winston","createLogger","level","format","transports","env","NODE_ENV","add","Console","simple","adapters","dataSources","models","ensureAllEntities","filterResults","results","isArrayLike","remapArgs","args","optIndex","queryType","remapFunction","number","insertion","getRemapFunction","wrapDataSourceAction","callback","upd","ERRORS","NON_EMPTY_STR","template","requireName","classname","c","p","v","getDefault","identifier","parts","split","namedFunction","namedFunctions","Date","default","modelDesc","fieldDesc","field","defaultField","out","attributes","createDataSource","adapterLabel","baseAdapter","newDataSource","Proxy","target","slice","registerDataSource","merge","createNamedDataSource","sourceName","configHash","declareModel","model","Model","registerAdapter","label","Errors","ExtendableError","ValidationError","EntityValidationError","SetValidationError","EntityStateError","Entity","EntityFactory","Set","Validator","DEFAULT_OPTIONS","skipEvents","PRIVATE","Symbol","maybeEmit","eventsArgs","events","castArray","emit","maybeThrowInvalidEntityState","beforeState","lastDataSource","uidQuery","entityCtrSteps","castTypes","attrs","currentVal","attrName","attrDesc","loadSource","_entity","deserialize","bindLifecycleEvents","lifecycleEvents","eventFunctions","eventName","eventFunction","modelAttrsKeys","seal","_this","sourceDModel","difference","validate","constructor","validator","replaceAttributes","newContent","getDiff","dataStoreEntity","dataStoreObject","concat","uniq","values","diff","zipObject","serialize","persist","getDataSource","_maybeEmit","suffix","fetch","destroy","without","getId","SubEntity","methods","methodName","prototype","staticMethods","staticMethodName","staticMethod","errorArgs","stringifyValidationObject","validationErrors","identity","captureStackTrace","stack","replace","entityPrototypeProperties","findArgs","dataSourceName","ret","makeSet","newEntities","dataSourceEntities","entityFactory","dataSourceEntity","set","makeEntity","newEntity","doDelete","doFindUpdate","plural","queryComponents","compact","normalizeRemaps","sources","times","constant","remap","reservedPropIntersect","intersection","sourcesNormalized","sourceNames","modelSources","missingSources","defaultDataSource","spawn","spawnMany","insert","delete","allEmit","prefix","all","isArray","wrapEventsAction","action","_allEmit","setProxyProps","prop","nth","checkEntitiesFromModel","flatten","defined","defineEnumerableProperties","size","modelName","suffixes","validationResults","errors","newData","subject","handlers","remappedHandlers","handler","getPrototypeOf","writable","d","getTime","performance","now","uuid","Math","random","floor","toString","validateWrongType","tester","toValidatePath","validateArrayItems","propVal","ofArray","of","subErrors","subIndex","check","clone","pushValidationProp","pushEntityProp","getProps","toPlainObject","VALIDATIONS","TYPE","string","integer","float","date","boolean","isBoolean","object","deepTest","pv","pushProp","children","array","any","stubTrue","bool","str","text","VALIDATION_STEPS","checkCustoms","validationArgs","validateFcts","validateFct","checkTypeRequired","spec","required","checkEnum","enum","result","some","enumVal","RegExp","PathStack","segmentsEntity","segmentsValidation","toArray","checkResults","stepsArgs","validationStep","normalizeArray","allowAboveRoot","up","last","unshift","splitPathRe","splitPath","filename","exec","resolvedPath","resolvedAbsolute","arguments","cwd","charAt","normalize","isAbsolute","trailingSlash","substr","paths","Array","relative","from","to","trim","start","end","fromParts","toParts","min","samePartsLength","outputParts","delimiter","dirname","root","dir","basename","ext","extname","xs","res","len","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","run","nextTick","Item","apply","title","argv","versions","noop","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","chdir","umask","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","displayName","defineIteratorMethods","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","invoke","record","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","async","iter","next","done","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","reverse","pop","iterable","iteratorMethod","isNaN","skipTempReset","prev","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","Function"],"mappings":"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","file":"diaspora.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Diaspora = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (process){\n'use strict';\n\nif ( process.browser ) {\n\trequire( 'regenerator-runtime/runtime' );\n} else {\n\tconst _ = require( 'lodash' );\n\tconst cachedDiaspora = _.find( require.cache, ( module, path ) => {\n\t\treturn path.endsWith( `${ require( 'path' ).sep }diaspora.js` );\n\t});\n\tif ( !_.isEmpty( _.get( cachedDiaspora, 'exports' ))) {\n\t\tconsole.log( 'Retrieving loaded diaspora' );\n\t\treturn module.exports = cachedDiaspora.exports;\n\t}\n}\n\nconst Diaspora = require( './lib/diaspora' );\n\nmodule.exports = Diaspora;\n\n}).call(this,require('_process'))\n},{\"./lib/diaspora\":12,\"_process\":24,\"lodash\":undefined,\"path\":23,\"regenerator-runtime/runtime\":25}],2:[function(require,module,exports){\n'use strict';\n\nconst {_} = require( '../../dependencies' );\n\nconst getNum = ( fullMatch, sign, val ) => {\n\tif ( '∞' === val ) {\n\t\tif ( '-' === sign ) {\n\t\t\treturn -Infinity;\n\t\t} else {\n\t\t\treturn Infinity;\n\t\t}\n\t} else {\n\t\treturn parseInt( fullMatch );\n\t}\n};\n\nconst validations = {\n\ttype: {\n\t\tint( key, val ) {\n\t\t\tif ( _.isString( val )) {\n\t\t\t\tval = parseInt( val );\n\t\t\t}\n\t\t\tif ( !_.isInteger( val ) && isFinite( val )) {\n\t\t\t\tthrow new TypeError( `Expect \"${ key }\" to be an integer`\t );\n\t\t\t}\n\t\t\treturn val;\n\t\t},\n\t},\n\trng( key, val, range ) {\n\t\tconst rangeMatch = range.match( /^([[\\]])((-)?(\\d+|∞)),((-)?(\\d+|∞))([[\\]])$/ );\n\t\tif ( rangeMatch ) {\n\t\t\tconst lower = getNum( ...( rangeMatch.splice( 2, 3 )));\n\t\t\tconst upper = getNum( ...( rangeMatch.splice( 2, 3 )));\n\t\t\tconst isInRangeLower = '[' === rangeMatch[1] ? val >= lower : val > lower;\n\t\t\tconst isInRangeUpper = ']' === rangeMatch[2] ? val <= upper : val < upper;\n\t\t\tif ( !( isInRangeLower && isInRangeUpper )) {\n\t\t\t\tthrow new RangeError( `Expect \"${ key }\" to be within ${ range }, have \"${ val }\"` );\n\t\t\t}\n\t\t}\n\t\treturn val;\n\t},\n};\nconst validateOption = ( key, val, config ) => {\n\tif ( validations.type[config.type]) {\n\t\tval = validations.type[config.type]( key, val );\n\t}\n\tif ( config.rng ) {\n\t\tval = validations.rng( key, val, config.rng );\n\t}\n\treturn val;\n};\n\nconst iterateLimit = ( options, query ) => {\n\tconst foundEntities = [];\n\tlet foundCount = 0;\n\tlet origSkip = options.skip;\n\n\t// We are going to loop until we find enough items\n\tconst loopFind = found => {\n\t\t// If the search returned nothing, then just finish the findMany\n\t\tif ( _.isNil( found )) {\n\t\t\treturn Promise.resolve( foundEntities );\n\t\t\t// Else, if this is a value and not the initial `true`, add it to the list\n\t\t} else if ( found !== true ) {\n\t\t\tfoundEntities.push( found );\n\t\t}\n\t\t// If we found enough items, return them\n\t\tif ( foundCount === options.limit ) {\n\t\t\treturn Promise.resolve( foundEntities );\n\t\t}\n\t\toptions.skip = origSkip + foundCount;\n\t\t// Next time we'll skip 1 more item\n\t\tfoundCount++;\n\t\t// Do the query & loop\n\t\treturn query( options ).then( loopFind );\n\t};\n\treturn loopFind;\n};\n\n/**\n * TODO.\n *\n * @author gerkin\n * @see TODO remapping.\n * @param   {Adapters.DiasporaAdapter}  adapter   - Adapter doing the remap.\n * @param   {string}                    tableName - Name of the table for which we remap.\n * @param   {Object}                    query     - Hash representing the entity to remap.\n * @param   {boolean}                   input     - Set to `true` if handling input, `false`to output.\n * @returns {Object} Remapped object.\n */\nconst remapIO = ( adapter, tableName, query, input ) => {\n\tif ( _.isNil( query )) {\n\t\treturn query;\n\t}\n\tconst direction = true === input ? 'input' : 'output';\n\tconst filtered = _.mapValues( query, ( value, key ) => {\n\t\tconst filter = _.get( adapter, [ 'filters', tableName, direction, key ], undefined );\n\t\tif ( _.isFunction( filter )) {\n\t\t\treturn filter( value );\n\t\t}\n\t\treturn value;\n\t});\n\tconst remapType = true === input ? 'normal' : 'inverted';\n\tconst remaped = _.mapKeys( filtered, ( value, key ) => {\n\t\treturn _.get( adapter, [ 'remaps', tableName, remapType, key ], key );\n\t});\n\treturn remaped;\n};\n\nmodule.exports = {\n\tOPERATORS: {\n\t\t$exists:       ( entityVal, targetVal ) => targetVal === !_.isUndefined( entityVal ),\n\t\t$equal:        ( entityVal, targetVal ) => !_.isUndefined( entityVal ) && entityVal === targetVal,\n\t\t$diff:         ( entityVal, targetVal ) => !_.isUndefined( entityVal ) && entityVal !== targetVal,\n\t\t$less:         ( entityVal, targetVal ) => !_.isUndefined( entityVal ) && entityVal < targetVal,\n\t\t$lessEqual:    ( entityVal, targetVal ) => !_.isUndefined( entityVal ) && entityVal <= targetVal,\n\t\t$greater:      ( entityVal, targetVal ) => !_.isUndefined( entityVal ) && entityVal > targetVal,\n\t\t$greaterEqual: ( entityVal, targetVal ) => !_.isUndefined( entityVal ) && entityVal >= targetVal,\n\t},\n\tCANONICAL_OPERATORS: {\n\t\t'~':  '$exists',\n\t\t'==': '$equal',\n\t\t'!=': '$diff',\n\t\t'<':  '$less',\n\t\t'<=': '$lessEqual',\n\t\t'>':  '$greater',\n\t\t'>=': '$greaterEqual',\n\t},\n\tQUERY_OPTIONS_TRANSFORMS: {\n\t\tlimit( opts ) {\n\t\t\topts.limit = validateOption( 'limit', opts.limit, {\n\t\t\t\ttype: 'int',\n\t\t\t\trng:  '[0,∞]',\n\t\t\t});\n\t\t},\n\t\tskip( opts ) {\n\t\t\topts.skip = validateOption( 'skip', opts.skip, {\n\t\t\t\ttype: 'int',\n\t\t\t\trng:  '[0,∞[',\n\t\t\t});\n\t\t},\n\t\tpage( opts ) {\n\t\t\tif ( !opts.hasOwnProperty( 'limit' )) {\n\t\t\t\tthrow new ReferenceError( 'Usage of \"options.page\" requires \"options.limit\" to be defined.' );\n\t\t\t}\n\t\t\tif ( !isFinite( opts.limit )) {\n\t\t\t\tthrow new RangeError( 'Usage of \"options.page\" requires \"options.limit\" to not be infinite' );\n\t\t\t}\n\t\t\tif ( opts.hasOwnProperty( 'skip' )) {\n\t\t\t\tthrow new ReferenceError( 'Use either \"options.page\" or \"options.skip\"' );\n\t\t\t}\n\t\t\topts.skip = validateOption( 'page', opts.page, {\n\t\t\t\ttype: 'int',\n\t\t\t\trng:  '[0,∞[',\n\t\t\t}) * opts.limit;\n\t\t\tdelete opts.page;\n\t\t},\n\t},\n\t\n\titerateLimit,\n\tremapIO,\n};\n\n},{\"../../dependencies\":11}],3:[function(require,module,exports){\n'use strict';\n\nconst {\n\t_, Promise, SequentialEvent,\n} = require( '../../dependencies' );\n\n/**\n * @namespace ConstrainedTypes\n * @description Namespace for types with constraints, like <code>[0, Infinity]</code>, <code>]0, Infinity[</code>, etc etc\n */\n\n/**\n * @typedef {Integer} AbsInt0\n * @memberof ConstrainedTypes\n * @description Integer equal or above 0\n */\n\n/**\n * @typedef {Integer} AbsInt\n * @memberof ConstrainedTypes\n * @description Integer above 0\n */\n\n/**\n * @typedef {Integer} AbsIntInf\n * @memberof ConstrainedTypes\n * @description Integer above 0, may be integer\n */\n\n/**\n * @typedef {Integer} AbsIntInf0\n * @memberof ConstrainedTypes\n * @description Integer equal or above 0, may be integer\n */\n\n/**\n * @namespace QueryLanguage\n */\n\n/**\n * @typedef {Object} QueryOptions\n * @description All properties are optional\n * @memberof QueryLanguage\n * @public\n * @instance\n * @author gerkin\n * @property {ConstrainedTypes.AbsInt0} skip=0 Number of items to skip\n * @property {ConstrainedTypes.AbsIntInf0} limit=Infinity Number of items to get\n * @property {ConstrainedTypes.AbsInt0} page To use with {@link QueryOptions.limit `limit`} and without {@link QueryOptions.skip `skip`}. Skips `page` pages of `limit` elements\n * @property {Boolean} remapInput=true Flag indicating if adapter input should be remapped or not. TODO Remapping doc\n * @property {Boolean} remapOutput=true Flag indicating if adapter output should be remapped or not. TODO Remapping doc\n */\n\n/**\n * @typedef {Object} SelectQuery\n * @memberof QueryLanguage\n * @public\n * @instance\n * @author gerkin\n * @property {Any|SelectQueryCondition} * Fields to search. If not providing an object, find items with a property value that equals this value\n */\n\n/**\n * By default, all conditions in a single SelectQueryCondition are combined with an `AND` operator.\n *\n * @typedef {Object} QueryLanguage.SelectQueryCondition\n * @author gerkin\n * @property {Any}                                      $equals       - Match if item value is equal to this. Objects and array are compared deeply. **Alias: `==`**\n * @property {Any}                                      $diff         - Match if item value is different to this. Objects and array are compared deeply. **Alias: `!=`**\n * @property {boolean}                                  $exists       - If `true`, match items where this prop is defined. If `false`, match when prop is null or not set. **Alias: `~`**\n * @property {integer}                                  $less         - Match if item value is less than this. **Alias: `<`**\n * @property {integer}                                  $lessEqual    - Match if item value is less than this or equals to this. **Alias: `<=`**\n * @property {integer}                                  $greater      - Match if item value is greater than this. **Alias: `>`**\n * @property {integer}                                  $greaterEqual - Match if item value is greater than this or equals to this. **Alias: `>=`**\n * @property {QueryLanguage#SelectQueryOrCondition[]}   $or           - Match if *one of* the conditions in the array is true. **Alias: `||`** **NOT IMPLEMENTED YET**\n * @property {QueryLanguage#SelectQueryOrCondition[]}   $and          - Match if *all* the conditions in the array are true. Optional, because several conditions in a single SelectQueryCondition are combined with an `AND` operator. **Alias: `&&`** **NOT IMPLEMENTED YET**\n * @property {QueryLanguage#SelectQueryOrCondition[]}   $xor          - Match if *a single* of the conditions in the array is true. **Alias: `^^`** **NOT IMPLEMENTED YET**\n * @property {QueryLanguage#SelectQueryOrCondition}     $not          - Invert the condition **Alias: `!`** **NOT IMPLEMENTED YET**\n * @property {string}                                   $contains     - On *string*, it will check if query is included in item using GLOB. **NOT IMPLEMENTED YET**\n * @property {QueryLanguage#SelectQueryOrCondition|Any} $contains     - On *array*, it will check if item contains the query. **NOT IMPLEMENTED YET**\n * @property {Any[]}                                    $in           - Check if item value is contained (using deep comparaison) in query. **NOT IMPLEMENTED YET**\n */\n\n/**\n * @typedef {QueryLanguage#SelectQuery|QueryLanguage#SelectQueryCondition} SelectQueryOrCondition\n * @memberof QueryLanguage\n * @public\n * @instance\n * @author gerkin\n */\n\n/**\n * @namespace Adapters\n */\n\n/**\n * @typedef {undefined|null} Nil\n * @memberof Adapters\n * @public\n * @instance\n * @author gerkin\n */\n\n/**\n * @typedef {Adapters.Nil|Object} NilOrObject\n * @memberof Adapters\n * @public\n * @instance\n * @author gerkin\n */\n\nconst {\n\tOPERATORS, CANONICAL_OPERATORS, QUERY_OPTIONS_TRANSFORMS, iterateLimit, remapIO,\n} = require( './adapter-utils' );\n\n/**\n * DiasporaAdapter is the base class of adapters. Adapters are components that are in charge to interact with data sources (files, databases, etc etc) with standardized methods. You should not use this class directly: extend this class and re-implement some methods to build an adapter. See the (upcoming) tutorial section.\n * @extends SequentialEvent\n * @memberof Adapters\n * @author gerkin\n */\nclass DiasporaAdapter extends SequentialEvent {\n\n\t// -----\n\t// ### Initialization\n\n\t/**\n\t * Create a new instance of adapter. This base class should be used by all other adapters.\n\t *\n\t * @public\n\t * @author gerkin\n\t * @param {DataStoreEntities.DataStoreEntity} classEntity - Entity to spawn with this adapter.\n\t */\n\tconstructor( classEntity ) {\n\t\tsuper();\n\t\t/**\n\t\t * Describe current adapter status.\n\t\t *\n\t\t * @type {string}\n\t\t * @author Gerkin\n\t\t */\n\t\tthis.state = 'preparing';\n\t\t/**\n\t\t * Hash to transform entity fields to data store fields.\n\t\t *\n\t\t * @type {Object}\n\t\t * @property {string} * - Data store field associated with this entity field.\n\t\t * @author Gerkin\n\t\t */\n\t\tthis.remaps = {};\n\t\t/**\n\t\t * Hash to transform data store fields to entity fields.\n\t\t *\n\t\t * @type {Object}\n\t\t * @property {string} * - Entity field associated with this data store field.\n\t\t * @author Gerkin\n\t\t */\n\t\tthis.remapsInverted = {};\n\t\t/**\n\t\t * Hash of functions to cast data store values to JSON standard values in entity.\n\t\t *\n\t\t * @type {Object}\n\t\t * @property {Function} * - Filter to execute to get standard JSON value.\n\t\t * @author Gerkin\n\t\t */\n\t\tthis.filters = {};\n\t\t/**\n\t\t * Link to the constructor of the class generated by this adapter.\n\t\t *\n\t\t * @type {DataStoreEntities.DataStoreEntity}\n\t\t * @author Gerkin\n\t\t */\n\t\tthis.classEntity = classEntity;\n\t\t/**\n\t\t * Error triggered by adapter initialization.\n\t\t *\n\t\t * @type {Error}\n\t\t * @author Gerkin\n\t\t */\n\t\tthis.error = undefined;\n\n\t\t// Bind events\n\t\tthis.on( 'ready', () => {\n\t\t\tthis.state = 'ready';\n\t\t}).on( 'error', err => {\n\t\t\tthis.state = 'error';\n\t\t\tthis.error = err;\n\t\t});\n\t}\n\n\t/**\n\t * Saves the remapping table, the reversed remapping table and the filter table in the adapter. Those tables will be used later when manipulating models & entities.\n\t *\n\t * @author gerkin\n\t * @param   {string} tableName    - Name of the table (usually, model name).\n\t * @param   {Object} remaps       - Associative hash that links entity field names with data source field names.\n\t * @param   {Object} [filters={}] - Not used yet...\n\t * @returns {undefined} This function does not return anything.\n\t */\n\tconfigureCollection( tableName, remaps, filters = {}) {\n\t\tthis.remaps[tableName] = {\n\t\t\tnormal:   remaps,\n\t\t\tinverted: _.invert( remaps ),\n\t\t};\n\t\tthis.filters[tableName] = filters;\n\t}\n\n\t// -----\n\t// ### Events\n\n\t/**\n\t * Fired when the adapter is ready to use. You should not try to use the adapter before this event is emitted.\n\t *\n\t * @event Adapters.DiasporaAdapter#ready\n\t * @type {undefined}\n\t * @see {@link Adapters.DiasporaAdapter#waitReady waitReady} Convinience method to wait for state change.\n\t */\n\n\t/**\n\t * Fired if the adapter failed to initialize or changed to `error` state. Called with the triggering `error`.\n\t *\n\t * @event Adapters.DiasporaAdapter#error\n\t * @type {Error}\n\t * @see {@link Adapters.DiasporaAdapter#waitReady waitReady} Convinience method to wait for state change.\n\t */\n\n\t// -----\n\t// ### Utils\n\n\t/**\n\t * Returns a promise resolved once adapter state is ready.\n\t *\n\t * @author gerkin\n\t * @listens Adapters.DiasporaAdapter#error\n\t * @listens Adapters.DiasporaAdapter#ready\n\t * @returns {Promise} Promise resolved when adapter is ready, and rejected if an error occured.\n\t */\n\twaitReady() {\n\t\treturn new Promise(( resolve, reject ) => {\n\t\t\tif ( 'ready' === this.state ) {\n\t\t\t\treturn resolve( this );\n\t\t\t} else if ( 'error' === this.state ) {\n\t\t\t\treturn reject( this.error );\n\t\t\t}\n\t\t\tthis.on( 'ready', () => {\n\t\t\t\treturn resolve( this );\n\t\t\t}).on( 'error', err => {\n\t\t\t\treturn reject( err );\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Cast the provided data to an adapter entity if the data is not nil.\n\t * \n\t * @param   {Adapters.NilOrObject} data - Data to cast to a datastore entity.\n\t * @returns {DataStoreEntities.DataStoreEntity} A class entity, or undefined.\n\t */\n\tmaybeCastEntity( data ) {\n\t\treturn _.isNil( data ) ? undefined : new this.classEntity( data, this );\n\t}\n\n\t/**\n\t * Cast the provided array of datas to adapter entities if the data is not nil. Note that {@link Adapters.Nil nil values} aren't filtered out from the resulting array.\n\t * \n\t * @param   {Adapters.NilOrObject[]|Adapters.Nil} datas - Array of datas to cast to datastore entities.\n\t * @returns {DataStoreEntities.DataStoreEntity[]} An array of class entities, or undefined.\n\t */\n\tmaybeCastSet( datas ) {\n\t\treturn _.isNil( datas ) ? [] : _.map( datas, this.maybeCastEntity.bind( this ));\n\t}\n\n\t/**\n\t * TODO.\n\t *\n\t * @author gerkin\n\t * @see TODO remapping.\n\t * @see {@link Adapters.DiasporaAdapter#remapIO remapIO}\n\t * @param   {string} tableName - Name of the table for which we remap.\n\t * @param   {Object} query     - Hash representing the entity to remap.\n\t * @returns {Object} Remapped object.\n\t */\n\tremapInput( tableName, query ) {\n\t\treturn remapIO( this, tableName, query, true );\n\t}\n\n\t/**\n\t * TODO.\n\t *\n\t * @author gerkin\n\t * @see TODO remapping.\n\t * @see {@link Adapters.DiasporaAdapter#remapIO remapIO}\n\t * @param   {string} tableName - Name of the table for which we remap.\n\t * @param   {Object} query     - Hash representing the entity to remap.\n\t * @returns {Object} Remapped object.\n\t */\n\tremapOutput( tableName, query ) {\n\t\treturn remapIO( this, tableName, query, false );\n\t}\n\n\t/**\n\t * Refresh the `idHash` with current adapter's `id` injected.\n\t *\n\t * @author gerkin\n\t * @param   {Object} entity          - Object containing attributes of the entity.\n\t * @param   {string} [propName='id'] - Name of the `id` field.\n\t * @returns {Object} Modified entity (for chaining).\n\t */\n\tsetIdHash( entity, propName = 'id' ) {\n\t\tentity.idHash = _.assign({}, entity.idHash, {\n\t\t\t[this.name]: entity[propName],\n\t\t});\n\t\treturn entity;\n\t}\n\n\t/**\n\t * Check if provided `entity` is matched by the query. Query must be in its canonical form before using this function.\n\t *\n\t * @author gerkin\n\t * @param   {QueryLanguage#SelectQuery} query  - Query to match against.\n\t * @param   {Object}                    entity - Entity to test.\n\t * @returns {boolean} Returns `true` if query matches, `false` otherwise.\n\t */\n\tmatchEntity( query, entity ) {\n\t\tconst matchResult = _.every( _.toPairs( query ), ([ key, desc ]) => {\n\t\t\tif ( _.isObject( desc )) {\n\t\t\t\tconst entityVal = entity[key];\n\t\t\t\treturn _.every( desc, ( val, operation ) => {\n\t\t\t\t\tif ( OPERATORS.hasOwnProperty( operation )) {\n\t\t\t\t\t\treturn OPERATORS[operation]( entityVal, val );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t\treturn matchResult;\n\t}\n\n\t/**\n\t * Transform options to their canonical form. This function must be applied before calling adapters' methods.\n\t *\n\t * @author gerkin\n\t * @throws  {TypeError} Thrown if an option does not have an acceptable type.\n\t * @throws  {ReferenceError} Thrown if a required option is not present.\n\t * @throws  {Error} Thrown when there isn't more precise description of the error is available (eg. when conflicts occurs) .\n\t * @param   {Object} [opts={}] - Options to transform.\n\t * @returns {Object} Transformed options (also called `canonical options`).\n\t */\n\tnormalizeOptions( opts = {}) {\n\t\topts = _.cloneDeep( opts );\n\n\t\t_.forEach( QUERY_OPTIONS_TRANSFORMS, ( transform, optionName ) => {\n\t\t\tif ( opts.hasOwnProperty( optionName )) {\n\t\t\t\tQUERY_OPTIONS_TRANSFORMS[optionName]( opts );\n\t\t\t}\n\t\t});\n\n\t\t_.defaults( opts, {\n\t\t\tskip:        0,\n\t\t\tremapInput:  true,\n\t\t\tremapOutput: true,\n\t\t});\n\t\treturn opts;\n\t}\n\n\t/**\n\t * Transform a search query to its canonical form, replacing aliases or shorthands by full query.\n\t *\n\t * @author gerkin\n\t * @param   {QueryLanguage#SelectQueryOrCondition} originalQuery - Query to cast to its canonical form.\n\t * @param   {QueryLanguage#Options}                options       - Options for this query.\n\t * @returns {QueryLanguage#SelectQueryOrCondition} Query in its canonical form.\n\t */\n\tnormalizeQuery( originalQuery, options ) {\n\t\tif ( _.isString( originalQuery )) {\n\t\t\toriginalQuery = { id: originalQuery };\n\t\t}\n\t\tconst normalizedQuery = true === options.remapInput ? _( _.cloneDeep( originalQuery )).mapValues( attrSearch => {\n\t\t\tif ( _.isUndefined( attrSearch )) {\n\t\t\t\treturn { $exists: false };\n\t\t\t} else if ( !( attrSearch instanceof Object )) {\n\t\t\t\treturn { $equal: attrSearch };\n\t\t\t} else {\n\t\t\t\t// Replace operations alias by canonical expressions\n\t\t\t\tattrSearch = _.mapKeys( attrSearch, ( val, operator, obj ) => {\n\t\t\t\t\tif ( CANONICAL_OPERATORS.hasOwnProperty( operator )) {\n\t\t\t\t\t\t// ... check for conflict with canonical operation name...\n\t\t\t\t\t\tif ( obj.hasOwnProperty( CANONICAL_OPERATORS[operator])) {\n\t\t\t\t\t\t\tthrow new Error( `Search can't have both \"${ operator }\" and \"${ CANONICAL_OPERATORS[operator] }\" keys, as they are synonyms` );\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn CANONICAL_OPERATORS[operator];\n\t\t\t\t\t}\n\t\t\t\t\treturn operator;\n\t\t\t\t});\n\t\t\t\t// For arithmetic comparison, check if values are numeric (TODO later: support date)\n\t\t\t\t_.forEach([ '$less', '$lessEqual', '$greater', '$greaterEqual' ], operation => {\n\t\t\t\t\tif ( attrSearch.hasOwnProperty( operation ) && !( _.isNumber( attrSearch[operation]) || _.isDate( attrSearch[operation]))) {\n\t\t\t\t\t\tthrow new TypeError( `Expect \"${ operation }\" in ${ JSON.stringify( attrSearch ) } to be a numeric value` );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn attrSearch;\n\t\t\t}\n\t\t}).value() : _.cloneDeep( originalQuery );\n\t\treturn normalizedQuery;\n\t}\n\n\t/**\n\t * Returns a POJO representing the current adapter.\n\t * \n\t * @returns {Object} JSON representation of the adapter.\n\t */\n\ttoJSON() {\n\t\treturn _.pick( this, [ 'state', 'remaps', 'remapsInverted', 'classEntity', 'error' ]);\n\t}\n\n\t// -----\n\t// ### Insert\n\n\t/**\n\t * Insert a single entity in the data store. This function is a default polyfill if the inheriting adapter does not provide `insertOne` itself.\n\t *\n\t * @summary At least one of {@link insertOne} or {@link insertMany} must be reimplemented by adapter.\n\t * @author gerkin\n\t * @param   {string} table  - Name of the table to insert data in.\n\t * @param   {Object} entity - Hash representing the entity to insert.\n\t * @returns {Promise} Promise resolved once insertion is done. Called with (*{@link DataStoreEntity}* entity).\n\t */\n\tinsertOne( table, entity ) {\n\t\treturn this.insertMany( table, [ entity ]).then( entities => Promise.resolve( _.first( entities )));\n\t}\n\n\t/**\n\t * Insert several entities in the data store. This function is a default polyfill if the inheriting adapter does not provide `insertMany` itself.\n\t *\n\t * @summary At least one of {@link insertOne} or {@link insertMany} must be reimplemented by adapter.\n\t * @author gerkin\n\t * @param   {string}   table    - Name of the table to insert data in.\n\t * @param   {Object[]} entities - Array of hashs representing the entities to insert.\n\t * @returns {Promise} Promise resolved once insertion is done. Called with (*{@link DataStoreEntity}[]* entities).\n\t */\n\tinsertMany( table, entities ) {\n\t\treturn Promise.mapSeries( entities, entity => this.insertOne( table, entity || {}));\n\t}\n\n\t// -----\n\t// ### Find\n\n\t/**\n\t * Retrieve a single entity from the data store. This function is a default polyfill if the inheriting adapter does not provide `findOne` itself.\n\t *\n\t * @summary At least one of {@link findOne} or {@link findMany} must be reimplemented by adapter.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to retrieve data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing the entity to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link DataStoreEntity}* `entity`).\n\t */\n\tfindOne( table, queryFind, options = {}) {\n\t\toptions.limit = 1;\n\t\treturn this.findMany( table, queryFind, options ).then( entities => Promise.resolve( _.first( entities )));\n\t}\n\n\t/**\n\t * Retrieve several entities from the data store. This function is a default polyfill if the inheriting adapter does not provide `findMany` itself.\n\t *\n\t * @summary At least one of {@link findOne} or {@link findMany} must be reimplemented by adapter.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to retrieve data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing entities to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link DataStoreEntity}[]* `entities`).\n\t */\n\tfindMany( table, queryFind, options = {}) {\n\t\toptions = this.normalizeOptions( options );\n\t\treturn iterateLimit( options, this.findOne.bind( this, table, queryFind ))( true );\n\t}\n\n\t// -----\n\t// ### Update\n\n\t/**\n\t * Update a single entity from the data store. This function is a default polyfill if the inheriting adapter does not provide `updateOne` itself.\n\t *\n\t * @summary At least one of {@link updateOne} or {@link updateMany} must be reimplemented by adapter.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to retrieve data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing the entity to find.\n\t * @param   {Object}                               update       - Object properties to set.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link DataStoreEntity}* `entity`).\n\t */\n\tupdateOne( table, queryFind, update, options = {}) {\n\t\toptions = this.normalizeOptions( options );\n\t\toptions.limit = 1;\n\t\treturn this.updateMany( table, queryFind, update, options ).then( entities => Promise.resolve( _.first( entities )));\n\t}\n\n\t/**\n\t * Update several entities from the data store. This function is a default polyfill if the inheriting adapter does not provide `updateMany` itself.\n\t *\n\t * @summary At least one of {@link updateOne} or {@link updateMany} must be reimplemented by adapter.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to retrieve data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing entities to find.\n\t * @param   {Object}                               update       - Object properties to set.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link DataStoreEntity}[]* `entities`).\n\t */\n\tupdateMany( table, queryFind, update, options = {}) {\n\t\toptions = this.normalizeOptions( options );\n\t\treturn iterateLimit( options, this.updateOne.bind( this, table, queryFind, update ))( true );\n\t}\n\n\t// -----\n\t// ### Delete\n\n\t/**\n\t * Delete a single entity from the data store. This function is a default polyfill if the inheriting adapter does not provide `deleteOne` itself.\n\t *\n\t * @summary At least one of {@link deleteOne} or {@link deleteMany} must be reimplemented by adapter.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to delete data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing the entities to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link DataStoreEntity}* `entity`).\n\t */\n\tdeleteOne( table, queryFind, options = {}) {\n\t\toptions.limit = 1;\n\t\treturn this.deleteMany( table, queryFind, options );\n\t}\n\n\t/**\n\t * Delete several entities from the data store. This function is a default polyfill if the inheriting adapter does not provide `deleteMany` itself.\n\t *\n\t * @summary At least one of {@link deleteOne} or {@link deleteMany} must be reimplemented by adapter.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to delete data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing the entities to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link DataStoreEntity}[]* `entities`).\n\t */\n\tdeleteMany( table, queryFind, options = {}) {\n\t\tlet count = 0;\n\n\t\t// We are going to loop until we find enough items\n\t\tconst loopFind = () => {\n\t\t\t// First, search for the item.\n\t\t\treturn this.findOne( table, queryFind, options ).then( found => {\n\t\t\t\t// If the search returned nothing, then just finish the findMany\n\t\t\t\tif ( _.isNil( found )) {\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t// Else, if this is a value and not the initial `true`, add it to the list\n\t\t\t\t}\n\t\t\t\t// If we found enough items, return them\n\t\t\t\tif ( count === options.limit ) {\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t}\n\t\t\t\t// Increase our counter\n\t\t\t\tcount++;\n\t\t\t\t// Do the deletion & loop\n\t\t\t\treturn this.deleteOne( table, queryFind, options ).then( loopFind );\n\t\t\t});\n\t\t};\n\t\treturn loopFind( true );\n\t}\n}\n\nmodule.exports = DiasporaAdapter;\n\n},{\"../../dependencies\":11,\"./adapter-utils\":2}],4:[function(require,module,exports){\n'use strict';\n\nconst {\n\t_,\n} = require( '../../dependencies' );\n\n/**\n * @namespace DataStoreEntities\n */\n\n/**\n * DataStoreEntity is the sub-entity reflecting a single source content. Values may differ from the Entity itself.\n * @memberof DataStoreEntities\n */\nclass DataStoreEntity {\n\t/**\n\t * Construct a new data source entity with specified content & parent.\n\t * \n\t * @author gerkin\n\t * @param {Object}                   entity     - Object containing attributes to inject in this entity. The only **reserved key** is `dataSource`.\n\t * @param {Adapters.DiasporaAdapter} dataSource - Adapter that spawn this entity.\n\t */\n\tconstructor( entity, dataSource ) {\n\t\tif ( _.isNil( entity )) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif ( _.isNil( dataSource )) {\n\t\t\tthrow new TypeError( `Expect 2nd argument to be the parent of this entity, have \"${ dataSource }\"` );\n\t\t}\n\t\tObject.defineProperties( this, {\n\t\t\tdataSource: {\n\t\t\t\tvalue:        dataSource,\n\t\t\t\tenumerable:   false,\n\t\t\t\tconfigurable: false,\n\t\t\t},\n\t\t});\n\t\t_.assign( this, entity );\n\t}\n\t\n\t/**\n\t * Returns a plain object corresponding to this entity attributes.\n\t * \n\t * @author gerkin\n\t * @returns {Object} Plain object representing this entity.\n\t */\n\ttoObject() {\n\t\treturn _.omit( this, [ 'dataSource', 'id' ]);\n\t}\n}\n\nmodule.exports = DataStoreEntity;\n\n},{\"../../dependencies\":11}],5:[function(require,module,exports){\n'use strict';\n\nconst {\n\t_, Promise,\n} = require( '../../dependencies' );\nconst Utils = require( '../../utils' );\n\nconst Diaspora = require( '../../diaspora' );\nconst DiasporaAdapter = Diaspora.components.Adapters.Adapter;\nconst InMemoryEntity = require( './entity.js' );\n\n/**\n * This class is used to use the memory as a data store. Every data you insert are stored in an array contained by this class. This adapter can be used by both the browser & Node.JS.\n *\n * @extends Adapters.DiasporaAdapter\n * @memberof Adapters\n */\nclass InMemoryDiasporaAdapter extends DiasporaAdapter {\n\t/**\n\t * Create a new instance of in memory adapter.\n\t *\n\t * @author gerkin\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Link to the InMemoryEntity.\n\t\t *\n\t\t * @name classEntity\n\t\t * @type {DataStoreEntities.InMemoryEntity}\n\t\t * @memberof Adapters.InMemoryDiasporaAdapter\n\t\t * @instance\n\t\t * @author Gerkin\n\t\t */\n\t\tsuper( InMemoryEntity );\n\t\tthis.state = 'ready';\n\t\t/**\n\t\t * Plain old javascript object used as data store.\n\t\t *\n\t\t * @author Gerkin\n\t\t */\n\t\tthis.store = {};\n\t}\n\n\t/**\n\t * Create the data store and call {@link Adapters.DiasporaAdapter#configureCollection}.\n\t *\n\t * @author gerkin\n\t * @param   {string} tableName - Name of the table (usually, model name).\n\t * @param   {Object} remaps    - Associative hash that links entity field names with data source field names.\n\t * @returns {undefined} This function does not return anything.\n\t */\n\tconfigureCollection( tableName, remaps ) {\n\t\tsuper.configureCollection( tableName, remaps );\n\t\tthis.ensureCollectionExists( tableName );\n\t}\n\n\t// -----\n\t// ### Utils\n\n\t/**\n\t * Get or create the store hash.\n\t *\n\t * @author gerkin\n\t * @param   {string} table - Name of the table.\n\t * @returns {DataStoreTable} In memory table to use.\n\t */\n\tensureCollectionExists( table ) {\n\t\tif ( this.store.hasOwnProperty( table )) {\n\t\t\treturn this.store[table];\n\t\t} else {\n\t\t\treturn this.store[table] = {\n\t\t\t\titems: [],\n\t\t\t};\n\t\t}\n\t}\n\n\t// -----\n\t// ### Insert\n\n\t/**\n\t * Insert a single entity in the memory store.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#insertOne}, modified for in-memory interactions.\n\t * @author gerkin\n\t * @param   {string} table  - Name of the table to insert data in.\n\t * @param   {Object} entity - Hash representing the entity to insert.\n\t * @returns {Promise} Promise resolved once insertion is done. Called with (*{@link InMemoryEntity}* `entity`).\n\t */\n\tinsertOne( table, entity ) {\n\t\tentity = _.cloneDeep( entity );\n\t\tconst storeTable = this.ensureCollectionExists( table );\n\t\tentity.id = Utils.generateUUID();\n\t\tthis.setIdHash( entity );\n\t\tstoreTable.items.push( entity );\n\t\treturn Promise.resolve( new this.classEntity( entity, this ));\n\t}\n\n\t// -----\n\t// ### Find\n\n\t/**\n\t * Retrieve a single entity from the memory.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#findOne}, modified for in-memory interactions.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to retrieve data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing the entity to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link InMemoryEntity}* `entity`).\n\t */\n\tfindOne( table, queryFind, options = {}) {\n\t\tconst storeTable = this.ensureCollectionExists( table );\n\t\tconst matches = _.filter( storeTable.items, _.partial( this.matchEntity, queryFind ));\n\t\tconst reducedMatches = Utils.applyOptionsToSet( matches, options );\n\t\treturn Promise.resolve( this.maybeCastEntity( _.first( reducedMatches )));\n\t}\n\n\t/**\n\t * Retrieve several entities from the memory.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#findMany}, modified for in-memory interactions.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to retrieve data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing entities to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once items are found. Called with (*{@link InMemoryEntity}[]* `entities`).\n\t */\n\tfindMany( table, queryFind, options = {}) {\n\t\tconst storeTable = this.ensureCollectionExists( table );\n\t\tconst matches = _.filter( storeTable.items, _.partial( this.matchEntity, queryFind ));\n\t\tconst reducedMatches = Utils.applyOptionsToSet( matches, options );\n\t\treturn Promise.resolve( this.maybeCastSet( reducedMatches ));\n\t}\n\n\t// -----\n\t// ### Update\n\n\t/**\n\t * Update a single entity in the memory.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#updateOne}, modified for in-memory interactions.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to update data in.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing the entity to find.\n\t * @param   {Object}                               update       - Object properties to set.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once update is done. Called with (*{@link InMemoryEntity}* `entity`).\n\t */\n\tupdateOne( table, queryFind, update, options = {}) {\n\t\treturn this.findOne( table, queryFind, options ).then( found => {\n\t\t\tif ( !_.isNil( found )) {\n\t\t\t\tconst storeTable = this.ensureCollectionExists( table );\n\t\t\t\tconst match = _.find( storeTable.items, {\n\t\t\t\t\tid: found.id,\n\t\t\t\t});\n\t\t\t\tUtils.applyUpdateEntity( update, match );\n\t\t\t\treturn Promise.resolve( this.maybeCastEntity( match ));\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Update several entities in the memory.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#updateMany}, modified for in-memory interactions.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to update data in.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing entities to find.\n\t * @param   {Object}                               update       - Object properties to set.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once update is done. Called with (*{@link InMemoryEntity}[]* `entities`).\n\t */\n\tupdateMany( table, queryFind, update, options = {}) {\n\t\treturn this.findMany( table, queryFind, options ).then( found => {\n\t\t\tif ( !_.isNil( found ) && found.length > 0 ) {\n\t\t\t\tconst storeTable = this.ensureCollectionExists( table );\n\t\t\t\tconst foundIds = _.map( found, 'id' );\n\t\t\t\tconst matches = _.filter( storeTable.items, item => -1 !== foundIds.indexOf( item.id ));\n\t\t\t\treturn Promise.resolve( this.maybeCastSet( _.map( matches, item => {\n\t\t\t\t\tUtils.applyUpdateEntity( update, item );\n\t\t\t\t\treturn item;\n\t\t\t\t})));\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t});\n\t}\n\n\t// -----\n\t// ### Delete\n\n\t/**\n\t * Delete a single entity from the memory.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#deleteOne}, modified for in-memory interactions.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to delete data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing the entity to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*undefined*).\n\t */\n\tdeleteOne( table, queryFind, options = {}) {\n\t\tconst storeTable = this.ensureCollectionExists( table );\n\t\treturn this.findOne( table, queryFind, options ).then( entityToDelete => {\n\t\t\tif ( !_.isNil( entityToDelete )) {\n\t\t\t\tstoreTable.items = _.reject( storeTable.items, entity => entity.id === entityToDelete.idHash[this.name]);\n\t\t\t}\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n\n\t/**\n\t * Delete several entities from the memory.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#deleteMany}, modified for in-memory interactions.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to delete data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing entities to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once items are deleted. Called with (*undefined*).\n\t */\n\tdeleteMany( table, queryFind, options = {}) {\n\t\tconst storeTable = this.ensureCollectionExists( table );\n\t\treturn this.findMany( table, queryFind, options ).then( entitiesToDelete => {\n\t\t\tconst entitiesIds = _.map( entitiesToDelete, entity => _.get( entity, `idHash.${ this.name }` ));\n\t\t\tstoreTable.items = _.reject( storeTable.items, entity => {\n\t\t\t\treturn _.includes( entitiesIds, entity.id );\n\t\t\t});\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n}\n\nmodule.exports = InMemoryDiasporaAdapter;\n\n},{\"../../dependencies\":11,\"../../diaspora\":12,\"../../utils\":21,\"./entity.js\":6}],6:[function(require,module,exports){\n'use strict';\n\nconst DataStoreEntity = require( '../base/entity.js' );\n\n/**\n * Entity stored in {@link Adapters.InMemoryDiasporaAdapter the in-memory adapter}.\n * @extends DataStoreEntities.DataStoreEntity\n * @memberof DataStoreEntities\n */\nclass InMemoryEntity extends DataStoreEntity {\n\t/**\n\t * Construct a in memory entity with specified content & parent.\n\t * \n\t * @author gerkin\n\t * @param {Object}                   entity     - Object containing attributes to inject in this entity. The only **reserved key** is `dataSource`.\n\t * @param {Adapters.DiasporaAdapter} dataSource - Adapter that spawn this entity.\n\t */\n\tconstructor( entity, dataSource ) {\n\t\tsuper( entity, dataSource );\n\t}\n}\n\nmodule.exports = InMemoryEntity;\n\n},{\"../base/entity.js\":4}],7:[function(require,module,exports){\n(function (process){\n'use strict';\n\nconst {\n\t_, Promise,\n} = require( '../../dependencies' );\n\nconst Diaspora = require( '../../diaspora' );\nconst DiasporaAdapter = Diaspora.components.Adapters.Adapter;\nconst WebApiEntity = require( './entity.js' );\n\nconst queryObjectToString = queryObject => {\n\treturn _( queryObject ).chain( _.cloneDeep ).omitBy( val => _.isObject( val ) && _.isEmpty( val ))\n\t// { foo: 1, bar: { baz: 2 } }\n\t\t.mapValues( JSON.stringify )\n\t// { foo: '1', bar: '{\"baz\": \"2\"}' }\n\t\t.toPairs()\n\t// [ [ 'foo', '1' ], [ 'bar', '{\"baz\":2}' ] ]\n\t\t.map( _.partial( _.map, _, encodeURIComponent ))\n\t// [ [ 'foo', '1' ], [ 'bar', '%7B%22baz%22%3A2%7D' ] ]\n\t\t.map( arr => `${ arr[0]  }=${  arr[1] }` )\n\t// [ 'foo=1', 'bar=%7B%22baz%22%3A2%7D' ]\n\t\t.join( '&' ).value();\n};\n\nconst httpErrorFactories = {\n\t400: xhr => new Error( `Posted data through HTTP is invalid; message \"${ xhr.response.message }\"` ),\n\t_:   xhr => new Error( `Unhandled HTTP error with status code ${ xhr.status } & message \"${ xhr.response.message }\"` ),\n};\n\nconst defineXhrEvents = ( xhr, resolve, reject ) => {\n\txhr.onload = () => {\n\t\tif ( _.inRange( xhr.status, 200, 299 )) {\n\t\t\treturn resolve( xhr.response );\n\t\t} else {\n\t\t\treturn reject( _.get( httpErrorFactories, xhr.status, httpErrorFactories._ )( xhr ));\n\t\t}\n\t};\n\txhr.onerror = () => {\n\t\treturn reject( httpErrorFactories._( xhr ));\n\t};\n};\n\nconst httpRequest = async( method, endPoint, data, queryObject ) => {\n\tif ( !process.browser ) {\n\t\tif ( _.isNil( data )) {\n\t\t\tdata = true;\n\t\t}\n\t\treturn await require( 'request-promise' )[method.toLowerCase()]( endPoint, {\n\t\t\tjson: data,\n\t\t\tqs:   _.mapValues( queryObject, JSON.stringify ),\n\t\t});\n\t} else {\n\t\treturn new Promise(( resolve, reject ) => {\n\t\t\t/* globals XMLHttpRequest: false */\n\t\t\tconst xhr = new XMLHttpRequest();\n\t\t\tdefineXhrEvents( xhr, resolve, reject );\n\t\t\tconst queryString = queryObjectToString( queryObject );\n\t\t\txhr.responseType = 'json';\n\t\t\txhr.open( method, `${ endPoint }${ queryString ? `?${  queryString }` : '' }` );\n\t\t\txhr.setRequestHeader( 'Content-Type', 'application/json' );\n\t\t\txhr.send( _.isNil( data ) ? undefined : JSON.stringify( data ));\n\t\t});\n\t}\n};\n\nconst getQueryObject = ( queryFind, options ) => {\n\tif ( 0 === options.skip ) {\n\t\tdelete options.skip;\n\t}\n\n\treturn _.assign({}, _.omit( options, [ 'remapInput', 'remapOutput' ]), {where: queryFind});\n};\n\nconst maybeAddIdHashToEntities = ( entities, adapter ) => {\n\tif ( !_.isEmpty( entities )) {\n\t\tentities = _.map( entities, _.unary( adapter.setIdHash.bind( adapter )));\n\t}\n\treturn entities;\n};\n\nconst checkWebApiAdapterConfig = config => {\n\tif ( !process.browser && !_.isString( config.host )) {\n\t\tthrow new Error( `\"config.host\" is not defined, or is not a string: had \"${ config.host }\"` );\n\t}\n\tif ( !process.browser && !_.isString( config.scheme )) {\n\t\tthrow new Error( `\"config.scheme\" is not defined, or is not a string: had \"${ config.scheme }\"` );\n\t}\n};\n\n/**\n * Adapter for RESTful HTTP APIs.\n *\n * @see https://www.npmjs.com/package/diaspora-server Diaspora-Server: Package built on Diaspora & Express.js to easily configure HTTP APIs compatible with this adapter.\n * @extends Adapters.DiasporaAdapter\n * @memberof Adapters\n */\nclass WebApiDiasporaAdapter extends DiasporaAdapter {\n\t/**\n\t * Create a new instance of web api adapter.\n\t *\n\t * @param {Object}         [config]                 - Configuration of this adapter.\n\t * @param {string|false}   [config.scheme = false]  - Scheme to use. On server environment, this parameter is *required*. On browser environment, it defaults to a relative scheme (IE ``). Note that it will be suffixed with `//`.\n\t * @param {string|false}   [config.host = false]    - Hostname of the endpoint. On server environment, this parameter is *required*.\n\t * @param {number|false}   [config.port = false]    - Port of the endpoint.\n\t * @param {number|false}   [config.path = '']       - Path to the endpoint.\n\t * @param {Object<string>} [config.pluralApis = {}] - Hash with keys being the singular name of the endpoint, and values being the associated plural name of the same endpoint.\n\t * @author gerkin\n\t */\n\tconstructor( config = {}) {\n\t\t/**\n\t\t * Link to the WebApiEntity.\n\t\t *\n\t\t * @name classEntity\n\t\t * @type {DataStoreEntities.WebApiEntity}\n\t\t * @memberof Adapters.WebApiDiasporaAdapter\n\t\t * @instance\n\t\t * @author Gerkin\n\t\t */\n\t\tsuper( WebApiEntity );\n\n\t\t/**\n\t\t * Base URL to the REST API\n\t\t *\n\t\t * @name baseEndPoint\n\t\t * @type {string}\n\t\t * @author Gerkin\n\t\t */\n\t\t_.defaults( config, {\n\t\t\tscheme:     false,\n\t\t\thost:       false,\n\t\t\tport:       false,\n\t\t\tpath:       '',\n\t\t\tpluralApis: {},\n\t\t});\n\t\tcheckWebApiAdapterConfig( config );\n\t\tif ( process.browser && false === config.host ) {\n\t\t\t// Endpoint is an absolute url\n\t\t\tthis.baseEndPoint = config.path;\n\t\t} else {\n\t\t\tconst portString = config.port ? `:${ config.port }` : '';\n\t\t\tconst schemeString = config.scheme ? `${ config.scheme }:` : '';\n\t\t\tthis.baseEndPoint = `${ schemeString }//${ config.host }${ portString }${ config.path }`;\n\t\t}\n\t\tthis.state = 'ready';\n\n\t\t/**\n\t\t * Hash mapping singular API names to plural API names\n\t\t *\n\t\t * @name pluralApis\n\t\t * @type {Object<string>}\n\t\t * @author Gerkin\n\t\t */\n\t\tthis.pluralApis = config.pluralApis;\n\t}\n\n\t/**\n\t * Send an http query to the targeted `endPoint` using `method` as verb.\n\t * \n\t * @async\n\t * @param   {string} verb          - Valid HTTP verb. This adapter uses `GET`, `POST`, `PATCH` & `DELETE`.\n\t * @param   {string} endPoint      - Name of the endpoint to interact with. It will be prepended with {@link Adapters.WebApiDiasporaAdapter#baseEndPoint}.\n\t * @param   {Object} [data]        - Optionnal data to send within the body of the request.\n\t * @param   {Object} [queryObject] - Optionnal query object to send along with the request.\n\t * @returns {Promise<Object>} Promise resolved with the resulting data.\n\t */\n\thttpQuery( verb, endPoint, data, queryObject ) {\n\t\treturn httpRequest( verb, `${ this.baseEndPoint }/${  endPoint.toLowerCase() }`, data, queryObject );\n\t}\n\n\t/**\n\t * Get the plural name of an endpoint.\n\t * \n\t * @param   {string} endPoint - Name of the endpoint.\n\t * @returns {string} Plural version of the endpoint name.\n\t */\n\tgetPluralEndpoint( endPoint ) {\n\t\tif ( this.pluralApis.hasOwnProperty( endPoint )) {\n\t\t\treturn this.pluralApis[endPoint];\n\t\t} else {\n\t\t\treturn `${ endPoint  }s`;\n\t\t}\n\t}\n\n\t// -----\n\t// ### Insert\n\n\t/**\n\t * Insert a single entity through an HTTP API.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#insertOne}, modified for use of web api.\n\t * @author gerkin\n\t * @param   {string} table  - Name of the table to insert data in.\n\t * @param   {Object} entity - Hash representing the entity to insert.\n\t * @returns {Promise} Promise resolved once insertion is done. Called with (*{@link WebApiEntity}* `entity`).\n\t */\n\tasync insertOne( table, entity ) {\n\t\tentity = await this.httpQuery( 'POST', table, entity );\n\t\tif ( !_.isNil( entity )) {\n\t\t\tthis.setIdHash( entity );\n\t\t}\n\t\treturn this.maybeCastEntity( entity );\n\t}\n\n\t/**\n\t * Insert several entities through an HTTP API.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#insertMany}, modified for use of web api.\n\t * @author gerkin\n\t * @param   {string}   table    - Name of the table to insert data in.\n\t * @param   {Object[]} entities - Hash representing entities to insert.\n\t * @returns {Promise} Promise resolved once insertion is done. Called with (*{@link WebApiEntity[]}* `entities`).\n\t */\n\tasync insertMany( table, entities ) {\n\t\tentities = await this.httpQuery( 'POST', this.getPluralEndpoint( table ), entities );\n\t\tentities = maybeAddIdHashToEntities( entities, this );\n\t\treturn this.maybeCastSet( entities );\n\t}\n\n\t// -----\n\t// ### Find\n\n\t/**\n\t * \n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#findOne}, modified for use of web api.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to retrieve data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing the entity to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link InMemoryEntity}* `entity`).\n\t */\n\tasync findOne( table, queryFind, options = {}) {\n\t\tlet entity = await this.httpQuery( 'GET', table, null, getQueryObject( queryFind, options ));\n\t\tif ( !_.isNil( entity )) {\n\t\t\tthis.setIdHash( entity );\n\t\t}\n\t\treturn this.maybeCastEntity( entity );\n\t}\n\n\t/**\n\t * \n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#findMany}, modified for use of web api.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to retrieve data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing entities to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once items are found. Called with (*{@link InMemoryEntity}[]* `entities`).\n\t */\n\tasync findMany( table, queryFind, options = {}) {\n\t\tlet entities = await this.httpQuery( 'GET', this.getPluralEndpoint( table ), null, getQueryObject( queryFind, options ));\n\t\tentities = maybeAddIdHashToEntities( entities, this );\n\t\treturn this.maybeCastSet( entities );\n\t}\n\n\t// -----\n\t// ### Update\n\n\t/**\n\t * \n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#updateOne}, modified for use of web api.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to update data in.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing the entity to find.\n\t * @param   {Object}                               update       - Object properties to set.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once update is done. Called with (*{@link InMemoryEntity}* `entity`).\n\t */\n\tasync updateOne( table, queryFind, update, options = {}) {\n\t\tlet entity = await this.httpQuery( 'PATCH', table, update, getQueryObject( queryFind, options ));\n\t\tif ( !_.isNil( entity )) {\n\t\t\tentity.idHash = {\n\t\t\t\t[this.name]: entity.id,\n\t\t\t};\n\t\t}\n\t\treturn this.maybeCastEntity( entity );\n\t}\n\n\t/**\n\t * \n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#updateMany}, modified for use of web api.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to update data in.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing entities to find.\n\t * @param   {Object}                               update       - Object properties to set.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once update is done. Called with (*{@link InMemoryEntity}[]* `entities`).\n\t */\n\tasync updateMany( table, queryFind, update, options = {}) {\n\t\tlet entities = await this.httpQuery( 'PATCH', this.getPluralEndpoint( table ), update, getQueryObject( queryFind, options ));\n\t\tentities = maybeAddIdHashToEntities( entities, this );\n\t\treturn this.maybeCastSet( entities );\n\t}\n\n\t// -----\n\t// ### Delete\n\n\t/**\n\t * \n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#deleteOne}, modified for use of web api.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to delete data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing the entity to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*undefined*).\n\t */\n\tasync deleteOne( table, queryFind, options = {}) {\n\t\treturn await this.httpQuery( 'DELETE', table, null, getQueryObject( queryFind, options ));\n\t}\n\n\t/**\n\t * \n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#deleteMany}, modified for use of web api.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to delete data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing entities to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once items are deleted. Called with (*undefined*).\n\t */\n\tasync deleteMany( table, queryFind, options = {}) {\n\t\treturn await this.httpQuery( 'DELETE', this.getPluralEndpoint( table ), null, getQueryObject( queryFind, options ));\n\t}\n}\n\nmodule.exports = WebApiDiasporaAdapter;\n\n}).call(this,require('_process'))\n},{\"../../dependencies\":11,\"../../diaspora\":12,\"./entity.js\":8,\"_process\":24,\"request-promise\":undefined}],8:[function(require,module,exports){\n'use strict';\n\nconst DataStoreEntity = require( '../base/entity.js' );\n\n/**\n * Entity stored in {@link Adapters.WebApiDiasporaAdapter the web API adapter}.\n * @extends DataStoreEntities.DataStoreEntity\n * @memberof DataStoreEntities\n */\nclass WebApiEntity extends DataStoreEntity {\n\t/**\n\t * Construct a web api entity with specified content & parent.\n\t * \n\t * @author gerkin\n\t * @param {Object}                   entity     - Object containing attributes to inject in this entity. The only **reserved key** is `dataSource`.\n\t * @param {Adapters.DiasporaAdapter} dataSource - Adapter that spawn this entity.\n\t */\n\tconstructor( entity, dataSource ) {\n\t\tsuper( entity, dataSource );\n\t}\n}\n\nmodule.exports = WebApiEntity;\n\n},{\"../base/entity.js\":4}],9:[function(require,module,exports){\n(function (global){\n'use strict';\n\nconst {\n\t_, Promise,\n} = require( '../../dependencies' );\nconst Utils = require( '../../utils' );\n\nconst Diaspora = require( '../../diaspora' );\nconst DiasporaAdapter = Diaspora.components.Adapters.Adapter;\nconst WebStorageEntity = require( './entity' );\n\n/**\n * This class is used to use local storage or session storage as a data store. This adapter should be used only by the browser.\n *\n * @extends Adapters.DiasporaAdapter\n * @memberof Adapters\n */\nclass WebStorageDiasporaAdapter extends DiasporaAdapter {\n\t/**\n\t * Create a new instance of local storage adapter.\n\t *\n\t * @author gerkin\n\t * @param {Object}  config                 - Configuration object.\n\t * @param {boolean} [config.session=false] - Set to true to use sessionStorage instead of localStorage.\n\t */\n\tconstructor( config ) {\n\t\t/**\n\t\t * Link to the WebStorageEntity.\n\t\t *\n\t\t * @name classEntity\n\t\t * @type {DataStoreEntities.WebStorageEntity}\n\t\t * @memberof Adapters.WebStorageDiasporaAdapter\n\t\t * @instance\n\t\t * @author Gerkin\n\t\t */\n\t\tsuper( WebStorageEntity );\n\t\t_.defaults( config, {\n\t\t\tsession: false,\n\t\t});\n\t\tthis.state = 'ready';\n\t\t/**\n\t\t * {@link https://developer.mozilla.org/en-US/docs/Web/API/Storage Storage api} where to store data.\n\t\t *\n\t\t * @type {Storage}\n\t\t * @author Gerkin\n\t\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage localStorage} and {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage sessionStorage} on MDN web docs.\n\t\t * @see {@link Adapters.WebStorageDiasporaAdapter}:config.session parameter.\n\t\t */\n\t\tthis.source = ( true === config.session ? global.sessionStorage : global.localStorage );\n\t}\n\n\t/**\n\t * Create the collection index and call {@link Adapters.DiasporaAdapter#configureCollection}.\n\t *\n\t * @author gerkin\n\t * @param {string} tableName - Name of the table (usually, model name).\n\t * @param {Object} remaps    - Associative hash that links entity field names with data source field names.\n\t * @returns {undefined} This function does not return anything.\n\t */\n\tconfigureCollection( tableName, remaps ) {\n\t\tsuper.configureCollection( tableName, remaps );\n\t\tthis.ensureCollectionExists( tableName );\n\t}\n\n\t// -----\n\t// ### Utils\n\n\t/**\n\t * Create the table key if it does not exist.\n\t *\n\t * @author gerkin\n\t * @param   {string} table - Name of the table.\n\t * @returns {string[]} Index of the collection.\n\t */\n\tensureCollectionExists( table ) {\n\t\tlet index = this.source.getItem( table );\n\t\tif ( _.isNil( index )) {\n\t\t\tindex = [];\n\t\t\tthis.source.setItem( table, JSON.stringify( index ));\n\t\t} else {\n\t\t\tindex = JSON.parse( index );\n\t\t}\n\t\treturn index;\n\t}\n\n\t/**\n\t * Deduce the item name from table name and item ID.\n\t *\n\t * @author gerkin\n\t * @param   {string} table - Name of the table to construct name for.\n\t * @param   {string} id    - Id of the item to find.\n\t * @returns {string} Name of the item.\n\t */\n\tgetItemName( table, id ) {\n\t\treturn `${ table }.id=${ id }`;\n\t}\n\n\t// -----\n\t// ### Insert\n\n\t/**\n\t * Insert a single entity in the local storage.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#insertOne}, modified for local storage or session storage interactions.\n\t * @author gerkin\n\t * @param   {string} table  - Name of the table to insert data in.\n\t * @param   {Object} entity - Hash representing the entity to insert.\n\t * @returns {Promise} Promise resolved once insertion is done. Called with (*{@link DataStoreEntities.WebStorageEntity}* `entity`).\n\t */\n\tinsertOne( table, entity ) {\n\t\tentity = _.cloneDeep( entity || {});\n\t\tentity.id = Utils.generateUUID();\n\t\tthis.setIdHash( entity );\n\t\ttry {\n\t\t\tconst tableIndex = this.ensureCollectionExists( table );\n\t\t\ttableIndex.push( entity.id );\n\t\t\tthis.source.setItem( table, JSON.stringify( tableIndex ));\n\t\t\tthis.source.setItem( this.getItemName( table, entity.id ), JSON.stringify( entity ));\n\t\t} catch ( error ) {\n\t\t\treturn Promise.reject( error );\n\t\t}\n\t\treturn Promise.resolve( this.maybeCastEntity( entity ));\n\t}\n\n\t/**\n\t * Insert several entities in the local storage.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#insertMany}, modified for local storage or session storage interactions.\n\t * @author gerkin\n\t * @param   {string}   table    - Name of the table to insert data in.\n\t * @param   {Object[]} entities - Array of hashes representing entities to insert.\n\t * @returns {Promise} Promise resolved once insertion is done. Called with (*{@link DataStoreEntities.WebStorageEntity}[]* `entities`).\n\t */\n\tinsertMany( table, entities ) {\n\t\tentities = _.cloneDeep( entities );\n\t\ttry {\n\t\t\tconst tableIndex = this.ensureCollectionExists( table );\n\t\t\tentities = entities.map(( entity = {}) => {\n\t\t\t\tentity.id = Utils.generateUUID();\n\t\t\t\tthis.setIdHash( entity );\n\t\t\t\ttableIndex.push( entity.id );\n\t\t\t\tthis.source.setItem( this.getItemName( table, entity.id ), JSON.stringify( entity ));\n\t\t\t\treturn new this.classEntity( entity, this );\n\t\t\t});\n\t\t\tthis.source.setItem( table, JSON.stringify( tableIndex ));\n\t\t} catch ( error ) {\n\t\t\treturn Promise.reject( error );\n\t\t}\n\t\treturn Promise.resolve( this.maybeCastSet( entities ));\n\t}\n\n\t// -----\n\t// ### Find\n\n\t/**\n\t * Find a single local storage entity using its id.\n\t *\n\t * @author gerkin\n\t * @param   {string} table - Name of the collection to search entity in.\n\t * @param   {string} id    - Id of the entity to search.\n\t * @returns {DataStoreEntities.WebStorageEntity|undefined} Found entity, or undefined if not found.\n\t */\n\tfindOneById( table, id ) {\n\t\tlet item = this.source.getItem( this.getItemName( table, id ));\n\t\tif ( !_.isNil( item )) {\n\t\t\titem = JSON.parse( item );\n\t\t}\n\t\treturn Promise.resolve( this.maybeCastEntity( item ));\n\t}\n\n\t/**\n\t * Retrieve a single entity from the local storage.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#findOne}, modified for local storage or session storage interactions.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the model to retrieve data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing the entity to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link DataStoreEntities.WebStorageEntity}* `entity`).\n\t */\n\tfindOne( table, queryFind, options = {}) {\n\t\t_.defaults( options, {\n\t\t\tskip: 0,\n\t\t});\n\t\tif ( !_.isObject( queryFind )) {\n\t\t\treturn this.findOneById( table, queryFind );\n\t\t} else if ( _.isEqual( _.keys( queryFind ), [ 'id' ]) && _.isEqual( _.keys( queryFind.id ), [ '$equal' ])) {\n\t\t\treturn this.findOneById( table, queryFind.id.$equal );\n\t\t}\n\t\tconst items = this.ensureCollectionExists( table );\n\t\tlet returnedItem;\n\t\tlet matched = 0;\n\t\t_.each( items, itemId => {\n\t\t\tconst item = JSON.parse( this.source.getItem( this.getItemName( table, itemId )));\n\t\t\tif ( this.matchEntity( queryFind, item )) {\n\t\t\t\tmatched++;\n\t\t\t\t// If we matched enough items\n\t\t\t\tif ( matched > options.skip ) {\n\t\t\t\t\treturnedItem = item;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn Promise.resolve( this.maybeCastEntity( returnedItem ));\n\t}\n\n\t// -----\n\t// ### Update\n\n\t/**\n\t * Update a single entity in the memory.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#updateOne}, modified for local storage or session storage interactions.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to update data in.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing the entity to find.\n\t * @param   {Object}                               update       - Object properties to set.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once update is done. Called with (*{@link DataStoreEntities.WebStorageEntity}* `entity`).\n\t */\n\tupdateOne( table, queryFind, update, options ) {\n\t\t_.defaults( options, {\n\t\t\tskip: 0,\n\t\t});\n\t\treturn this.findOne( table, queryFind, options ).then( entity => {\n\t\t\tif ( _.isNil( entity )) {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t\tUtils.applyUpdateEntity( update, entity );\n\t\t\ttry {\n\t\t\t\tthis.source.setItem( this.getItemName( table, entity.id ), JSON.stringify( entity ));\n\t\t\t\treturn Promise.resolve( entity );\n\t\t\t} catch ( error ) {\n\t\t\t\treturn Promise.reject( error );\n\t\t\t}\n\t\t});\n\t}\n\n\t// -----\n\t// ### Delete\n\n\t/**\n\t * Delete a single entity from the local storage.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#deleteOne}, modified for local storage or session storage interactions.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to delete data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing the entity to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once item is deleted. Called with (*undefined*).\n\t */\n\tdeleteOne( table, queryFind, options = {}) {\n\t\treturn this.findOne( table, queryFind, options ).then( entityToDelete => {\n\t\t\ttry {\n\t\t\t\tconst tableIndex = this.ensureCollectionExists( table );\n\t\t\t\t_.pull( tableIndex, entityToDelete.id );\n\t\t\t\tthis.source.setItem( table, JSON.stringify( tableIndex ));\n\t\t\t\tthis.source.removeItem( this.getItemName( table, entityToDelete.id ));\n\t\t\t} catch ( error ) {\n\t\t\t\treturn Promise.reject( error );\n\t\t\t}\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n\n\t/**\n\t * Delete several entities from the local storage.\n\t *\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#deleteMany}, modified for local storage or session storage interactions.\n\t * @author gerkin\n\t * @param   {string}                               table        - Name of the table to delete data from.\n\t * @param   {QueryLanguage#SelectQueryOrCondition} queryFind    - Hash representing entities to find.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}] - Hash of options.\n\t * @returns {Promise} Promise resolved once items are deleted. Called with (*undefined*).\n\t */\n\tdeleteMany( table, queryFind, options = {}) {\n\t\ttry {\n\t\t\treturn this.findMany( table, queryFind, options ).then( entitiesToDelete => {\n\t\t\t\tconst tableIndex = this.ensureCollectionExists( table );\n\t\t\t\t_.pullAll( tableIndex, _.map( entitiesToDelete, 'id' ));\n\t\t\t\tthis.source.setItem( table, JSON.stringify( tableIndex ));\n\t\t\t\t_.forEach( entitiesToDelete, entityToDelete => {\n\t\t\t\t\tthis.source.removeItem( this.getItemName( table, entityToDelete.id ));\n\t\t\t\t});\n\t\t\t\treturn Promise.resolve();\n\t\t\t});\n\t\t} catch ( error ) {\n\t\t\treturn Promise.reject( error );\n\t\t}\n\t}\n}\n\nmodule.exports = WebStorageDiasporaAdapter;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../dependencies\":11,\"../../diaspora\":12,\"../../utils\":21,\"./entity\":10}],10:[function(require,module,exports){\n'use strict';\n\nconst DataStoreEntity = require( '../base/entity.js' );\n\n/**\n * Entity stored in {@link Adapters.WebStorageDiasporaAdapter the local storage adapter}.\n * \n * @extends DataStoreEntities.DataStoreEntity\n * @memberof DataStoreEntities\n */\nclass WebStorageEntity extends DataStoreEntity {\n\t/**\n\t * Construct a local storage entity with specified content & parent.\n\t * \n\t * @author gerkin\n\t * @param {Object}                   entity     - Object containing attributes to inject in this entity. The only **reserved key** is `dataSource`.\n\t * @param {Adapters.DiasporaAdapter} dataSource - Adapter that spawn this entity.\n\t */\n\tconstructor( entity, dataSource ) {\n\t\tsuper( entity, dataSource );\n\t}\n}\n\nmodule.exports = WebStorageEntity;\n\n},{\"../base/entity.js\":4}],11:[function(require,module,exports){\n(function (global){\n'use strict';\n\nmodule.exports = {\n\t_: (() => { \n\t\treturn global._ || require( 'lodash' );\n\t})(),\n\tSequentialEvent: (() => { \n\t\treturn global.SequentialEvent || require( 'sequential-event' );\n\t})(),\n\tPromise: (() => { \n\t\treturn global.Promise && global.Promise.version ? global.Promise : require( 'bluebird' );\n\t})(),\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"bluebird\":undefined,\"lodash\":undefined,\"sequential-event\":undefined}],12:[function(require,module,exports){\n(function (process){\n'use strict';\n\nconst dependencies = require( './dependencies' );\nconst {\n\t_, Promise,\n} = dependencies;\n\n/**\n * Event emitter that can execute async handlers in sequence\n *\n * @typedef {Object} SequentialEvent\n * @author Gerkin\n * @see {@link https://gerkindev.github.io/SequentialEvent.js/SequentialEvent.html Sequential Event documentation}.\n */\n\n/**\n * @module Diaspora\n */\n\nconst logger = (() => {\n\tif ( !process.browser ) {\n\t\tconst winston = require( 'winston' );\n\t\tconst log = winston.createLogger({\n\t\t\tlevel:      'silly',\n\t\t\tformat:     winston.format.json(),\n\t\t\ttransports: [\n\t\t\t\t//\n\t\t\t\t// - Write to all logs with level `info` and below to `combined.log`\n\t\t\t\t// - Write all logs error (and below) to `error.log`.\n\t\t\t\t//\n\t\t\t],\n\t\t});\n\n\t\t//\n\t\t// If we're not in production then log to the `console` with the format:\n\t\t// `${info.level}: ${info.message} JSON.stringify({ ...rest }) `\n\t\t//\n\t\tif ( process.env.NODE_ENV !== 'production' ) {\n\t\t\tlog.add( new winston.transports.Console({\n\t\t\t\tformat: winston.format.simple(),\n\t\t\t}));\n\t\t}\n\t\treturn log;\n\t} else {\n\t\treturn console;\n\t}\n})();\n\nconst adapters = {};\nconst dataSources = {};\nconst models = {};\n\nconst ensureAllEntities = ( adapter, table ) => {\n\t// Filter our results\n\tconst filterResults = entity => {\n\t\t// Remap fields\n\t\tentity = adapter.remapOutput( table, entity );\n\t\t// Force results to be class instances\n\t\tif ( !( entity instanceof adapter.classEntity ) && !_.isNil( entity )) {\n\t\t\treturn new adapter.classEntity( entity, adapter );\n\t\t}\n\t\treturn entity;\n\t};\n\n\treturn results => {\n\t\tif ( _.isNil( results )) {\n\t\t\treturn Promise.resolve();\n\t\t} else if ( _.isArrayLike( results )) {\n\t\t\treturn Promise.resolve( _.map( results, filterResults ));\n\t\t} else {\n\t\t\treturn Promise.resolve( filterResults( results ));\n\t\t}\n\t};\n};\n\nconst remapArgs = ( args, optIndex, update, queryType, remapFunction ) => {\n\tif ( false !== optIndex ) {\n\t\t// Remap input objects\n\t\tif ( true === args[optIndex].remapInput ) {\n\t\t\targs[0] = remapFunction( args[0]);\n\n\t\t\tif ( true === update ) {\n\t\t\t\targs[1] = remapFunction( args[1]);\n\t\t\t}\n\t\t}\n\t\targs[optIndex].remapInput = false;\n\t} else if ( 'insert' === queryType.query ) {\n\t\t// If inserting, then, we'll need to know if we are inserting *several* entities or a *single* one.\n\t\tif ( 'many' === queryType.number ) {\n\t\t\t// If inserting *several* entities, map the array to remap each entity objects...\n\t\t\targs[0] = _.map( args[0], insertion => remapFunction( insertion ));\n\t\t} else {\n\t\t\t// ... or we are inserting a *single* one. We still need to remap entity.\n\t\t\targs[0] = remapFunction( args[0]);\n\t\t}\n\t}\n};\n\nconst getRemapFunction = ( adapter, table ) => {\n\treturn query => {\n\t\treturn adapter.remapInput( table, query );\n\t};\n};\n\nconst wrapDataSourceAction = ( callback, queryType, adapter ) => {\n\treturn ( table, ...args ) => {\n\n\t\t// Transform arguments for find, update & delete\n\t\tlet optIndex = false;\n\t\tlet upd = false;\n\t\tif ([ 'find', 'delete' ].indexOf( queryType.query ) >= 0 ) {\n\t\t\t// For find & delete, options are 3rd argument (so 2nd item in `args`)\n\t\t\toptIndex = 1;\n\t\t} else if ( 'update' === queryType.query ) {\n\t\t\t// For update, options are 4th argument (so 3nd item in `args`), and `upd` flag is toggled on.\n\t\t\toptIndex = 2;\n\t\t\tupd = true;\n\t\t}\n\t\ttry {\n\t\t\tif ( false !== optIndex ) {\n\t\t\t\t// Options to canonical\n\t\t\t\targs[optIndex] = adapter.normalizeOptions( args[optIndex]);\n\t\t\t\t// Query search to cannonical\n\t\t\t\targs[0] = adapter.normalizeQuery( args[0], args[optIndex]);\n\t\t\t}\n\t\t\tremapArgs( args, optIndex, upd, queryType, getRemapFunction( adapter, table ));\n\t\t} catch ( err ) {\n\t\t\treturn Promise.reject( err );\n\t\t}\n\n\t\t// Hook after promise resolution\n\t\treturn callback.call( adapter, table, ...args ).then( ensureAllEntities( adapter, table ));\n\t};\n};\n\nconst ERRORS = {\n\tNON_EMPTY_STR: _.template( '<%= c %> <%= p %> must be a non empty string, had \"<%= v %>\"' ),\n};\n\nconst requireName = ( classname, value ) => {\n\tif ( !_.isString( value ) && value.length > 0 ) {\n\t\tthrow new Error( ERRORS.NON_EMPTY_STR({\n\t\t\tc: classname,\n\t\t\tp: 'name',\n\t\t\tv: value,\n\t\t}));\n\t}\n};\n\nconst getDefault = identifier => {\n\tif ( _.isString( identifier )) {\n\t\tconst match = identifier.match( /^(.+?)(?:::(.+?))+$/ );\n\t\tif ( match ) {\n\t\t\tconst parts = identifier.split( '::' );\n\t\t\tconst namedFunction = _.get( Diaspora.namedFunctions, parts );\n\t\t\tif ( _.isFunction( namedFunction )) {\n\t\t\t\treturn namedFunction();\n\t\t\t}\n\t\t}\n\t}\n\treturn identifier;\n};\n\n/**\n * Diaspora main namespace\n * @namespace Diaspora\n * @public\n * @author gerkin\n */\nconst Diaspora = {\n\tnamedFunctions: {\n\t\tDiaspora: {\n\t\t\t'Date.now()': () => new Date(),\n\t\t},\n\t},\n\n\t/**\n\t * Set default values if required.\n\t *\n\t * @author gerkin\n\t * @param   {Object}         entity    - Entity to set defaults in.\n\t * @param   {ModelPrototype} modelDesc - Model description.\n\t * @returns {Object} Entity merged with default values.\n\t */\n\tdefault( entity, modelDesc ) {\n\t\t// Apply method `defaultField` on each field described\n\t\treturn _.defaults(\n\t\t\tentity,\n\t\t\t_.mapValues(\n\t\t\t\tmodelDesc,\n\t\t\t\t( fieldDesc, field ) => this.defaultField(\n\t\t\t\t\tentity[field],\n\t\t\t\t\tfieldDesc\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t},\n\n\t/**\n\t * Set the default on a single field according to its description.\n\t *\n\t * @author gerkin\n\t * @param   {Any}             value     - Value to default.\n\t * @param   {FieldDescriptor} fieldDesc - Description of the field to default.\n\t * @returns {Any} Defaulted value.\n\t */\n\tdefaultField( value, fieldDesc ) {\n\t\tlet out;\n\t\tif ( !_.isUndefined( value )) {\n\t\t\tout = value;\n\t\t} else {\n\t\t\tout = _.isFunction( fieldDesc.default ) ? fieldDesc.default() : getDefault( fieldDesc.default );\n\t\t}\n\t\tif ( 'object' === fieldDesc.type && _.isObject( fieldDesc.attributes ) && _.keys( fieldDesc.attributes ).length > 0 && !_.isNil( out )) {\n\t\t\treturn this.default( out, fieldDesc.attributes );\n\t\t} else {\n\t\t\treturn out;\n\t\t}\n\t},\n\n\t/**\n\t * Create a data source (usually, a database connection) that may be used by models.\n\t *\n\t * @author gerkin\n\t * @throws  {Error} Thrown if provided `adapter` label does not correspond to any adapter registered.\n\t * @param   {string} adapterLabel - Label of the adapter used to create the data source.\n\t * @param   {Object} config       - Configuration hash. This configuration hash depends on the adapter we want to use.\n\t * @returns {Adapters.DiasporaAdapter} New adapter spawned.\n\t */\n\tcreateDataSource( adapterLabel, config ) {\n\t\tif ( !adapters.hasOwnProperty( adapterLabel )) {\n\t\t\ttry {\n\t\t\t\trequire( `diaspora-${  adapterLabel }` );\n\t\t\t} catch ( e ) {\n\t\t\t\tthrow new Error( `Unknown adapter \"${ adapterLabel }\". Available currently are ${ Object.keys( adapters ).join( ', ' ) }. Additionnaly, an error was thrown: ${ e }` );\n\t\t\t}\n\t\t}\n\t\tconst baseAdapter = new adapters[adapterLabel]( config );\n\t\tconst newDataSource = new Proxy( baseAdapter, {\n\t\t\tget( target, key ) {\n\t\t\t\t// If this is an adapter action method, wrap it with filters. Our method keys are only string, not tags\n\t\t\t\tif ( _.isString( key )) {\n\t\t\t\t\tlet method = key.match( /^(find|update|insert|delete)(Many|One)$/ );\n\t\t\t\t\tif ( null !== method ) {\n\t\t\t\t\t\tmethod[2] = method[2].toLowerCase();\n\t\t\t\t\t\t// Cast regex match to object like this: {full: 'findMany', query: 'find', number: 'many'}\n\t\t\t\t\t\tmethod = _.mapKeys( method.slice( 0, 3 ), ( val, key ) => {\n\t\t\t\t\t\t\treturn [ 'full', 'query', 'number' ][key];\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn wrapDataSourceAction( target[key], method, target );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn target[key];\n\t\t\t},\n\t\t});\n\t\treturn newDataSource;\n\t},\n\n\t/**\n\t * Stores the data source with provided label.\n\t *\n\t * @author gerkin\n\t * @throws  {Error} Error is thrown if parameters are incorrect or the name is already used or `dataSource` is not an adapter.\n\t * @param   {string}          name       - Name associated with this datasource.\n\t * @param   {DiasporaAdapter} dataSource - Datasource itself.\n\t * @returns {undefined} This function does not return anything.\n\t */\n\tregisterDataSource( name, dataSource ) {\n\t\trequireName( 'DataSource', name );\n\t\tif ( dataSources.hasOwnProperty( name )) {\n\t\t\tthrow new Error( `DataSource name already used, had \"${ name }\"` );\n\t\t}\n\t\t/*\t\tif ( !( dataSource instanceof Diaspora.components.Adapters.Adapter )) {\n\t\t\tthrow new Error( 'DataSource must be an instance inheriting \"DiasporaAdapter\"' );\n\t\t}*/\n\t\tdataSource.name = name;\n\t\t_.merge( dataSources, {\n\t\t\t[name]: dataSource,\n\t\t});\n\t\treturn dataSource;\n\t},\n\n\t/**\n\t * Create a data source (usually, a database connection) that may be used by models.\n\t *\n\t * @author gerkin\n\t * @throws  {Error} Thrown if provided `adapter` label does not correspond to any adapter registered.\n\t * @param   {string} sourceName   - Name associated with this datasource.\n\t * @param   {string} adapterLabel - Label of the adapter used to create the data source.\n\t * @param   {Object} configHash   - Configuration hash. This configuration hash depends on the adapter we want to use.\n\t * @returns {Adapters.DiasporaAdapter} New adapter spawned.\n\t */\n\tcreateNamedDataSource( sourceName, adapterLabel, configHash ) {\n\t\tconst dataSource = Diaspora.createDataSource( adapterLabel, configHash );\n\t\treturn Diaspora.registerDataSource( sourceName, dataSource );\n\t},\n\n\t/**\n\t * Create a new Model with provided description.\n\t *\n\t * @author gerkin\n\t * @throws  {Error} Thrown if parameters are incorrect.\n\t * @param   {string} name      - Name associated with this datasource.\n\t * @param   {Object} modelDesc - Description of the model to define.\n\t * @returns {Model} Model created.\n\t */\n\tdeclareModel( name, modelDesc ) {\n\t\tif ( !_.isString( name ) && name.length > 0 ) {\n\t\t\trequireName( 'Model', name );\n\t\t}\n\t\tif ( !_.isObject( modelDesc )) {\n\t\t\tthrow new Error( '\"modelDesc\" must be an object' );\n\t\t}\n\t\tconst model = new Diaspora.components.Model( name, modelDesc );\n\t\t_.assign( models, {\n\t\t\t[name]: model,\n\t\t});\n\t\treturn model;\n\t},\n\n\t/**\n\t * Register a new adapter and make it available to use by models.\n\t *\n\t * @author gerkin\n\t * @throws  {Error} Thrown if an adapter already exists with same label.\n\t * @throws  {TypeError} Thrown if adapter does not extends {@link Adapters.DiasporaAdapter}.\n\t * @param   {string}                   label   - Label of the adapter to register.\n\t * @param   {Adapters.DiasporaAdapter} adapter - The adapter to register.\n\t * @returns {undefined} This function does not return anything.\n\t */\n\tregisterAdapter( label, adapter ) {\n\t\tif ( adapters.hasOwnProperty( label )) {\n\t\t\tthrow new Error( `Adapter with label \"${ label }\" already exists.` );\n\t\t}\n\t\t// Check inheritance of adapter\n\t\t/*if ( !( adapter.prototype instanceof Diaspora.components.Adapters.Adapter )) {\n\t\t\tthrow new TypeError( `Trying to register an adapter with label \"${ label }\", but it does not extends DiasporaAdapter.` );\n\t\t}*/\n\t\tadapters[label] = adapter;\n\t},\n\n\t/**\n\t * Hash containing all available models.\n\t *\n\t * @type {Object}\n\t * @property {Model} * - Model associated with that name.\n\t * @memberof Diaspora\n\t * @public\n\t * @author gerkin\n\t * @see Use {@link Diaspora.declareModel} to add models.\n\t */\n\tmodels,\n\n\t/**\n\t * Hash containing all available data sources.\n\t *\n\t * @type {Object}\n\t * @property {Adapters.DiasporaAdapter} * - Instances of adapters declared.\n\t * @memberof Diaspora\n\t * @private\n\t * @author gerkin\n\t * @see Use {@link Diaspora.createNamedDataSource} or {@link Diaspora.registerDataSource} to make data sources available for models.\n\t */\n\tdataSources,\n\n\t/**\n\t * Hash containing all available adapters. The only universal adapter is `inMemory`.\n\t *\n\t * @type {Object}\n\t * @property {Adapters.DiasporaAdapter}        *        - Adapter constructor. Those constructors must be subclasses of DiasporaAdapter.\n\t * @property {Adapters.InMemorDiasporaAdapter} inMemory - InMemoryDiasporaAdapter constructor.\n\t * @memberof Diaspora\n\t * @private\n\t * @author gerkin\n\t * @see Use {@link Diaspora.registerAdapter} to add adapters.\n\t */\n\tadapters,\n\n\t/**\n\t * Dependencies of Diaspora.\n\t *\n\t * @type {Object}\n\t * @property {Bluebird}        Promise          - Bluebird lib.\n\t * @property {Lodash}          _                - Lodash lib.\n\t * @property {SequentialEvent} sequential-event - SequentialEvent lib.\n\t * @memberof Diaspora\n\t * @private\n\t * @author gerkin\n\t */\n\tdependencies: dependencies,\n\n\t/**\n\t * Logger used by Diaspora and its adapters. You can use this property to configure winston. On brower environment, this is replaced by a reference to global {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/console Console}.\n\t *\n\t * @type {Winston|Console}\n\t * @memberof Diaspora\n\t * @public\n\t * @author gerkin\n\t */\n\tlogger,\n};\n\nmodule.exports = Diaspora;\n\n// Load components after export, so requires of Diaspora returns a complete object\n/**\n * Hash of components exposed by Diaspora.\n *\n * @type {Object}\n * @memberof Diaspora\n * @private\n * @author gerkin\n */\nDiaspora.components = {\n\tErrors: {\n\t\tExtendableError:       require( './errors/extendableError' ),\n\t\tValidationError:       require( './errors/validationError' ),\n\t\tEntityValidationError: require( './errors/entityValidationError' ),\n\t\tSetValidationError:    require( './errors/setValidationError' ),\n\t\tEntityStateError:      require( './errors/entityStateError' ),\n\t},\n};\n_.assign( Diaspora.components, {\n\tAdapters: {\n\t\tAdapter: require( './adapters/base/adapter' ),\n\t\tEntity:  require( './adapters/base/entity' ),\n\t},\n});\n_.assign( Diaspora.components, {\n\tModel:         require( './model' ),\n\tEntityFactory: require( './entityFactory' ),\n\tEntity:        require( './entityFactory' ).Entity,\n\tSet:           require( './set' ),\n\tValidator:     require( './validator' ),\n\tUtils:         require( './utils' ),\n});\n\n// Register available built-in adapters\nDiaspora.registerAdapter( 'inMemory', require( './adapters/inMemory/adapter' ));\nDiaspora.registerAdapter( 'webApi', require( './adapters/webApi/adapter' ));\n// Register webStorage only if in browser\nif ( process.browser ) {\n\tDiaspora.registerAdapter( 'webStorage', require( './adapters/webStorage/adapter' ));\n}\n\n}).call(this,require('_process'))\n},{\"./adapters/base/adapter\":3,\"./adapters/base/entity\":4,\"./adapters/inMemory/adapter\":5,\"./adapters/webApi/adapter\":7,\"./adapters/webStorage/adapter\":9,\"./dependencies\":11,\"./entityFactory\":13,\"./errors/entityStateError\":14,\"./errors/entityValidationError\":15,\"./errors/extendableError\":16,\"./errors/setValidationError\":17,\"./errors/validationError\":18,\"./model\":19,\"./set\":20,\"./utils\":21,\"./validator\":22,\"_process\":24,\"winston\":undefined}],13:[function(require,module,exports){\n'use strict';\n\nconst {\n\t_, Promise, SequentialEvent,\n} = require( './dependencies' );\nconst Diaspora = require( './diaspora' );\nconst DataStoreEntity = Diaspora.components.Adapters.Entity;\nconst EntityStateError = require( './errors/entityStateError' );\n\n/**\n * @module EntityFactory\n */\n\nconst DEFAULT_OPTIONS = { skipEvents: false };\nconst PRIVATE = Symbol( 'PRIVATE' );\n\nconst maybeEmit = ( entity, options, eventsArgs, events ) => {\n\tevents = _.castArray( events );\n\tif ( options.skipEvents ) {\n\t\treturn Promise.resolve( entity );\n\t} else {\n\t\treturn entity.emit( events[0], ...eventsArgs ).then(() => {\n\t\t\tif ( events.length > 1 ) {\n\t\t\t\treturn maybeEmit( entity, options, eventsArgs, _.slice( events, 1 ));\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve( entity );\n\t\t\t}\n\t\t});\n\t}\n};\nconst maybeThrowInvalidEntityState = ( entity, beforeState, dataSource, method ) => {\n\treturn () => {\n\t\t// Depending on state, we are going to perform a different operation\n\t\tif ( 'orphan' === beforeState ) {\n\t\t\treturn Promise.reject( new EntityStateError( 'Can\\'t fetch an orphan entity.' ));\n\t\t} else {\n\t\t\tentity[PRIVATE].lastDataSource = dataSource.name;\n\t\t\treturn dataSource[method]( entity.table( dataSource.name ), entity.uidQuery( dataSource ));\n\t\t}\n\t};\n};\n\nconst entityCtrSteps = {\n\tcastTypes( source, modelDesc ) {\n\t\tconst attrs = modelDesc.attributes;\n\t\t_.forEach( source, ( currentVal, attrName ) => {\n\t\t\tconst attrDesc = attrs[attrName];\n\t\t\tif ( _.isObject( attrDesc )) {\n\t\t\t\tswitch ( attrDesc.type ) {\n\t\t\t\t\tcase 'date': {\n\t\t\t\t\t\tif ( _.isString( currentVal ) || _.isInteger( currentVal )) {\n\t\t\t\t\t\t\tsource[attrName] = new Date( currentVal );\n\t\t\t\t\t\t}\n\t\t\t\t\t} break;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn source;\n\t},\n\tloadSource( entity, source ) {\n\t\t// If we construct our Entity from a datastore entity (that can happen internally in Diaspora), set it to `sync` state\n\t\tif ( source instanceof DataStoreEntity ) {\n\t\t\tconst _entity = entity[PRIVATE];\n\t\t\t_.assign( _entity, {\n\t\t\t\tstate:          'sync',\n\t\t\t\tlastDataSource: source.dataSource.name,\n\t\t\t});\n\t\t\t_entity.dataSources[_entity.lastDataSource] = source;\n\t\t\tsource = entity.deserialize( _.omit( source.toObject(), [ 'id' ]));\n\t\t}\n\t\treturn source;\n\t},\n\tbindLifecycleEvents( entity, modelDesc ) {\n\t\t// Bind lifecycle events\n\t\t_.forEach( modelDesc.lifecycleEvents, ( eventFunctions, eventName ) => {\n\t\t\t// Iterate on each event functions. `_.castArray` will ensure we iterate on an array if a single function is provided.\n\t\t\t_.forEach( _.castArray( eventFunctions ), eventFunction => {\n\t\t\t\tentity.on( eventName, eventFunction );\n\t\t\t});\n\t\t});\n\t},\n};\n\n/**\n * The entity is the class you use to manage a single document in all data sources managed by your model.\n * > Note that this class is proxied: you may try to access to undocumented class properties to get entity's data attributes\n *\n * @extends SequentialEvent\n */\nclass Entity extends SequentialEvent {\n\t/**\n\t * Create a new entity.\n\t *\n\t * @author gerkin\n\t * @param {string}                                   name        - Name of this model.\n\t * @param {ModelDescription}                         modelDesc   - Model configuration that generated the associated `model`.\n\t * @param {Model}                                    model       - Model that will spawn entities.\n\t * @param {Object|DataStoreEntities.DataStoreEntity} [source={}] - Hash with properties to copy on the new object.\n\t *        If provided object inherits DataStoreEntity, the constructed entity is built in `sync` state.\n\t */\n\tconstructor( name, modelDesc, model, source = {}) {\n\t\tconst modelAttrsKeys = _.keys( modelDesc.attributes );\n\t\tsuper();\n\n\t\t// ### Init defaults\n\t\tconst dataSources = Object.seal( _.mapValues( model.dataSources, () => undefined ));\n\t\tconst _this = {\n\t\t\tstate:          'orphan',\n\t\t\tlastDataSource: null,\n\t\t\tdataSources,\n\t\t\tname,\n\t\t\tmodelDesc,\n\t\t\tmodel,\n\t\t};\n\t\tthis[PRIVATE] = _this;\n\n\t\t// ### Cast types if required\n\t\tsource = entityCtrSteps.castTypes( source, modelDesc );\n\n\t\t// ### Load datas from source\n\t\tsource = entityCtrSteps.loadSource( this, source );\n\n\t\t// ### Final validation\n\t\t// Check keys provided in source\n\t\tconst sourceDModel = _.difference( source, modelAttrsKeys );\n\t\tif ( 0 !== sourceDModel.length ) { // Later, add a criteria for schemaless models\n\t\t\tthrow new Error( `Source has unknown keys: ${ JSON.stringify( sourceDModel ) } in ${ JSON.stringify( source ) }` );\n\t\t}\n\n\t\t// ### Generate prototype & attributes\n\t\t// Now we know that the source is valid. Deep clone to detach object values from entity then Default model attributes with our model desc\n\t\t_this.attributes = Diaspora.default( _.cloneDeep( source ), modelDesc.attributes );\n\t\tsource = null;\n\n\t\t// ### Load events\n\t\tentityCtrSteps.bindLifecycleEvents( this, modelDesc );\n\t}\n\n\t/**\n\t * Generate the query to get this unique entity in the desired data source.\n\t *\n\t * @author gerkin\n\t * @param   {Adapters.DiasporaAdapter} dataSource - Name of the data source to get query for.\n\t * @returns {Object} Query to find this entity.\n\t */\n\tuidQuery( dataSource ) {\n\t\treturn {\n\t\t\tid: this[PRIVATE].attributes.idHash[dataSource.name],\n\t\t};\n\t}\n\n\t/**\n\t * Return the table of this entity in the specified data source.\n\t *\n\t * @author gerkin\n\t * @returns {string} Name of the table.\n\t */\n\ttable( /*sourceName*/ ) {\n\t\t// Will be used later\n\t\treturn this[PRIVATE].name;\n\t}\n\n\t/**\n\t * Check if the entity matches model description.\n\t *\n\t * @author gerkin\n\t * @throws EntityValidationError Thrown if validation failed. This breaks event chain and prevent persistance.\n\t * @returns {undefined} This function does not return anything.\n\t * @see Validator.Validator#validate\n\t */\n\tvalidate() {\n\t\tthis.constructor.model.validator.validate( this[PRIVATE].attributes );\n\t}\n\n\t/**\n\t * Remove all editable properties & replace them with provided object.\n\t *\n\t * @author gerkin\n\t * @param   {Object} [newContent={}] - Replacement content.\n\t * @returns {module:EntityFactory~Entity} Returns `this`.\n\t */\n\treplaceAttributes( newContent = {}) {\n\t\tnewContent.idHash = this[PRIVATE].attributes.idHash;\n\t\tthis[PRIVATE].attributes = newContent;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Generate a diff update query by checking deltas with last source interaction.\n\t *\n\t * @author gerkin\n\t * @param   {Adapters.DiasporaAdapter} dataSource - Data source to diff with.\n\t * @returns {Object} Diff query.\n\t */\n\tgetDiff( dataSource ) {\n\t\tconst dataStoreEntity = this[PRIVATE].dataSources[dataSource.name];\n\t\tconst dataStoreObject = dataStoreEntity.toObject();\n\n\t\tconst keys = _( this[PRIVATE].attributes ).keys().concat( _.keys( dataStoreObject )).uniq().difference([ 'idHash' ]).value();\n\t\tconst values = _.map( keys, key => this[PRIVATE].attributes[key]);\n\t\tconst diff = _.omitBy( _.zipObject( keys, values ), ( val, key ) => _.isEqual( this[PRIVATE].attributes[key], dataStoreObject[key]));\n\t\treturn diff;\n\t}\n\n\t/**\n\t * Returns a copy of this entity attributes.\n\t *\n\t * @author gerkin\n\t * @returns {Object} Attributes of this entity.\n\t */\n\ttoObject() {\n\t\treturn this[PRIVATE].attributes;\n\t}\n\n\t/**\n\t * Applied before persisting the entity, this function is in charge to convert entity convinient attributes to a raw entity.\n\t *\n\t * @author gerkin\n\t * @param   {Object} data - Data to convert to primitive types.\n\t * @returns {Object} Object with Primitives-only types.\n\t */\n\tserialize( data ) {\n\t\treturn _.cloneDeep( data );\n\t}\n\n\t/**\n\t * Applied after retrieving the entity, this function is in charge to convert entity raw attributes to convinient types.\n\t *\n\t * @author gerkin\n\t * @param   {Object} data - Data to convert from primitive types.\n\t * @returns {Object} Object with Primitives & non primitives types.\n\t */\n\tdeserialize( data ) {\n\t\treturn _.cloneDeep( data );\n\t}\n\n\t/**\n\t * Save this entity in specified data source.\n\t *\n\t * @fires EntityFactory.Entity#beforeUpdate\n\t * @fires EntityFactory.Entity#afterUpdate\n\t * @author gerkin\n\t * @param   {string}  sourceName                 - Name of the data source to persist entity in.\n\t * @param   {Object}  [options]                  - Hash of options for this query. You should not use this parameter yourself: Diaspora uses it internally.\n\t * @param   {boolean} [options.skipEvents=false] - If true, won't trigger events `beforeUpdate` and `afterUpdate`.\n\t * @returns {Promise} Promise resolved once entity is saved. Resolved with `this`.\n\t */\n\tpersist( sourceName, options = {}) {\n\t\t_.defaults( options, DEFAULT_OPTIONS );\n\t\t// Change the state of the entity\n\t\tconst beforeState = this[PRIVATE].state;\n\t\tthis[PRIVATE].state = 'syncing';\n\t\t// Generate events args\n\t\tconst dataSource = this.constructor.model.getDataSource( sourceName );\n\t\tconst eventsArgs = [ dataSource.name ];\n\t\tconst _maybeEmit = _.partial( maybeEmit, this, options, eventsArgs );\n\n\t\t// Get suffix. If entity was orphan, we are creating. Otherwise, we are updating\n\t\tconst suffix = 'orphan' === beforeState ? 'Create' : 'Update';\n\t\treturn _maybeEmit([ 'beforePersist', 'beforeValidate' ])\n\t\t\t.then(() => this.validate())\n\t\t\t.then(() => _maybeEmit([ 'afterValidate', `beforePersist${ suffix }` ]))\n\t\t\t.then(() => {\n\t\t\t\tthis[PRIVATE].lastDataSource = dataSource.name;\n\t\t\t\t// Depending on state, we are going to perform a different operation\n\t\t\t\tif ( 'orphan' === beforeState ) {\n\t\t\t\t\treturn dataSource.insertOne( this.table( sourceName ), this.toObject());\n\t\t\t\t} else {\n\t\t\t\t\treturn dataSource.updateOne( this.table( sourceName ), this.uidQuery( dataSource ), this.getDiff( dataSource ));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then( dataStoreEntity => {\n\t\t\t\tentityCtrSteps.castTypes( dataStoreEntity, this[PRIVATE].modelDesc );\n\t\t\t\tthis[PRIVATE].state = 'sync';\n\t\t\t\tthis[PRIVATE].attributes = dataStoreEntity.toObject();\n\t\t\t\tthis[PRIVATE].dataSources[dataSource.name] = dataStoreEntity;\n\n\t\t\t\treturn _maybeEmit([ `afterPersist${ suffix }`, 'afterPersist' ]);\n\t\t\t});\n\t}\n\n\t/**\n\t * Reload this entity from specified data source.\n\t *\n\t * @fires EntityFactory.Entity#beforeFind\n\t * @fires EntityFactory.Entity#afterFind\n\t * @author gerkin\n\t * @param   {string}  sourceName                 - Name of the data source to fetch entity from.\n\t * @param   {Object}  [options]                  - Hash of options for this query. You should not use this parameter yourself: Diaspora uses it internally.\n\t * @param   {boolean} [options.skipEvents=false] - If true, won't trigger events `beforeFind` and `afterFind`.\n\t * @returns {Promise} Promise resolved once entity is reloaded. Resolved with `this`.\n\t */\n\tfetch( sourceName, options = {}) {\n\t\t_.defaults( options, DEFAULT_OPTIONS );\n\t\t// Change the state of the entity\n\t\tconst beforeState = this[PRIVATE].state;\n\t\tthis[PRIVATE].state = 'syncing';\n\t\t// Generate events args\n\t\tconst dataSource = this.constructor.model.getDataSource( sourceName );\n\t\tconst eventsArgs = [ dataSource.name, this.serialize( this[PRIVATE].attributes ) ];\n\t\tconst _maybeEmit = _.partial( maybeEmit, this, options, eventsArgs );\n\t\treturn _maybeEmit( 'beforeFetch' )\n\t\t\t.then( maybeThrowInvalidEntityState( this, beforeState, dataSource, 'findOne' ))\n\t\t\t.then( dataStoreEntity => {\n\t\t\t\tentityCtrSteps.castTypes( dataStoreEntity, this[PRIVATE].modelDesc );\n\t\t\t\tthis[PRIVATE].state = 'sync';\n\t\t\t\tthis[PRIVATE].attributes = dataStoreEntity.toObject();\n\t\t\t\tthis[PRIVATE].dataSources[dataSource.name] = dataStoreEntity;\n\n\t\t\t\treturn _maybeEmit( 'afterFetch' );\n\t\t\t});\n\t}\n\n\t/**\n\t * Delete this entity from the specified data source.\n\t *\n\t * @fires EntityFactory.Entity#beforeDelete\n\t * @fires EntityFactory.Entity#afterDelete\n\t * @author gerkin\n\t * @param   {string}  sourceName                 - Name of the data source to delete entity from.\n\t * @param   {Object}  [options]                  - Hash of options for this query. You should not use this parameter yourself: Diaspora uses it internally.\n\t * @param   {boolean} [options.skipEvents=false] - If true, won't trigger events `beforeDelete` and `afterDelete`.\n\t * @returns {Promise} Promise resolved once entity is destroyed. Resolved with `this`.\n\t */\n\tdestroy( sourceName, options = {}) {\n\t\t_.defaults( options, DEFAULT_OPTIONS );\n\t\t// Change the state of the entity\n\t\tconst beforeState = this[PRIVATE].state;\n\t\tthis[PRIVATE].state = 'syncing';\n\t\t// Generate events args\n\t\tconst dataSource = this.constructor.model.getDataSource( sourceName );\n\t\tconst eventsArgs = [ dataSource.name ];\n\t\tconst _maybeEmit = _.partial( maybeEmit, this, options, eventsArgs );\n\t\treturn _maybeEmit( 'beforeDestroy' )\n\t\t\t.then( maybeThrowInvalidEntityState( this, beforeState, dataSource, 'deleteOne' ))\n\t\t\t.then(() => {\n\t\t\t// If this was our only data source, then go back to orphan state\n\t\t\t\tif ( 0 === _.without( this[PRIVATE].model.dataSources, dataSource.name ).length ) {\n\t\t\t\t\tthis[PRIVATE].state = 'orphan';\n\t\t\t\t} else {\n\t\t\t\t\tthis[PRIVATE].state = 'sync';\n\t\t\t\t\tdelete this[PRIVATE].attributes.idHash[dataSource.name];\n\t\t\t\t}\n\t\t\t\tthis[PRIVATE].dataSources[dataSource.name] = undefined;\n\t\t\t\treturn _maybeEmit( 'afterDestroy' );\n\t\t\t});\n\t}\n\n\t/**\n\t * Get the ID for the given source name.\n\t * \n\t * @param   {string} sourceName - Name of the source to get ID from.\n\t * @returns {string} Id of this entity in requested data source.\n\t */\n\tgetId( sourceName ) {\n\t\tconst dataSource = this.constructor.model.getDataSource( sourceName );\n\t\treturn this[PRIVATE].dataSources[dataSource.name].id;\n\t}\n\n\t/**\n\t * Hash that links each data source with its name. This object is prepared with keys from model sources, and sealed.\n\t *\n\t * @type {Object}\n\t * @author gerkin\n\t */\n\tget dataSources() {\n\t\treturn this[PRIVATE].dataSources;\n\t}\n\n\t/**\n\t * TODO.\n\t *\n\t * @type {TODO}\n\t * @author gerkin\n\t */\n\tget attributes() {\n\t\treturn this[PRIVATE].attributes;\n\t}\n\n\t/**\n\t * Get entity's current state.\n\t *\n\t * @type {Entity.State}\n\t * @author gerkin\n\t */\n\tget state() {\n\t\treturn this[PRIVATE].state;\n\t}\n\n\t/**\n\t * Get entity's last data source.\n\t *\n\t * @type {null|string}\n\t * @author gerkin\n\t */\n\tget lastDataSource() {\n\t\treturn this[PRIVATE].lastDataSource;\n\t}\n}\n\n/**\n * This factory function generate a new class constructor, prepared for a specific model.\n *\n * @method EntityFactory\n * @public\n * @static\n * @param   {string}           name       - Name of this model.\n * @param   {ModelDescription} modelDesc  - Model configuration that generated the associated `model`.\n * @param   {Model}            model      - Model that will spawn entities.\n * @returns {module:EntityFactory~Entity} Entity constructor to use with this model.\n * @property {module:EntityFactory~Entity} Entity Entity constructor\n */\nconst EntityFactory = ( name, modelDesc, model ) => {\n\t/**\n\t * @ignore\n\t */\n\tclass SubEntity extends Entity {\n\t\t/**\n\t\t * Name of the class.\n\t\t *\n\t\t * @type {string}\n\t\t * @author gerkin\n\t\t */\n\t\tstatic get name() {\n\t\t\treturn `${ name  }Entity`;\n\t\t}\n\n\t\t/**\n\t\t * Reference to this entity's model.\n\t\t *\n\t\t * @type {Model}\n\t\t * @author gerkin\n\t\t */\n\t\tstatic get model() {\n\t\t\treturn model;\n\t\t}\n\t}\n\t// We use keys `methods` and not `functions` as explained in this [StackOverflow thread](https://stackoverflow.com/a/155655/4839162).\n\t// Extend prototype with methods in our model description\n\t_.forEach( modelDesc.methods, ( method, methodName ) => {\n\t\tSubEntity.prototype[methodName] = method;\n\t});\n\t// Add static methods\n\t_.forEach( modelDesc.staticMethods, ( staticMethodName, staticMethod ) => {\n\t\tSubEntity[staticMethodName] = staticMethod;\n\t});\n\treturn SubEntity.bind( SubEntity, name, modelDesc, model );\n};\nEntityFactory.Entity = Entity;\n// =====\n// ## Lifecycle Events\n\n// -----\n// ### Persist\n\n/**\n * @event EntityFactory.Entity#beforePersist\n * @type {String}\n */\n\n/**\n * @event EntityFactory.Entity#beforeValidate\n * @type {String}\n */\n\n/**\n * @event EntityFactory.Entity#afterValidate\n * @type {String}\n */\n\n/**\n * @event EntityFactory.Entity#beforePersistCreate\n * @type {String}\n */\n\n/**\n * @event EntityFactory.Entity#beforePersistUpdate\n * @type {String}\n */\n\n/**\n * @event EntityFactory.Entity#afterPersistCreate\n * @type {String}\n */\n\n/**\n * @event EntityFactory.Entity#afterPersistUpdate\n * @type {String}\n */\n\n/**\n * @event EntityFactory.Entity#afterPersist\n * @type {String}\n */\n\n// -----\n// ### Find\n\n/**\n * @event EntityFactory.Entity#beforeFind\n * @type {String}\n */\n\n/**\n * @event EntityFactory.Entity#afterFind\n * @type {String}\n */\n\n// -----\n// ### Destroy\n\n/**\n * @event EntityFactory.Entity#beforeDestroy\n * @type {String}\n */\n\n/**\n * @event EntityFactory.Entity#afterDestroy\n * @type {String}\n */\n\nmodule.exports = EntityFactory;\n\n},{\"./dependencies\":11,\"./diaspora\":12,\"./errors/entityStateError\":14}],14:[function(require,module,exports){\n'use strict';\n\nconst ExtendableError = require( './extendableError' );\n\n/**\n * @module Errors/EntityStateError\n */\n\n/**\n * This class represents an error related to validation.\n * @extends module:Errors/ExtendableError~ExtendableError\n */\nclass EntityStateError extends ExtendableError {\n\t/**\n\t * Construct a new error related to an invalide state of the entity.\n\t * \n\t * @author gerkin\n\t * @param {*}      errorArgs        - Arguments to transfer to parent Error.\n\t */\n\tconstructor( ...errorArgs ) {\n\t\tsuper( ...errorArgs );\n\t}\n}\n\nmodule.exports = EntityStateError;\n\n},{\"./extendableError\":16}],15:[function(require,module,exports){\n'use strict';\n\nconst {\n\t_,\n} = require( '../dependencies' );\nconst ValidationError = require( './validationError' );\n\nconst stringifyValidationObject = validationErrors => {\n\treturn _( validationErrors ).mapValues(( error, key ) => {\n\t\treturn `${ key } => ${ JSON.stringify( error.value ) }\n* ${ _( error ).omit([ 'value' ]).values().map( _.identity ).value() }`;\n\t}).values().join( '\\n* ' );\n};\n\n/**\n * @module Errors/EntityValidationError\n */\n\n/**\n * This class represents an error related to validation on an entity.\n *\n * @extends module:Errors/ValidationError~ValidationError\n */\nclass EntityValidationError extends ValidationError {\n\t/**\n\t * Construct a new validation error.\n\t *\n\t * @author gerkin\n\t * @param {Object} validationErrors - Object describing validation errors, usually returned by {@link Diaspora.Check}.\n\t * @param {string} message          - Message of this error.\n\t * @param {*}      errorArgs        - Arguments to transfer to parent Error.\n\t */\n\tconstructor( validationErrors, message, ...errorArgs ) {\n\t\tmessage += `\n${ stringifyValidationObject( validationErrors ) }`;\n\t\tsuper( message, ...errorArgs );\n\t\tthis.validationErrors = validationErrors;\n\t}\n}\n\nmodule.exports = EntityValidationError;\n\n},{\"../dependencies\":11,\"./validationError\":18}],16:[function(require,module,exports){\n'use strict';\n\n/**\n * @module Errors/ExtendableError\n */\n\n/**\n * This class is the base class for custom Diaspora errors\n *\n * @extends Error\n */\nclass ExtendableError extends Error {\n\t/**\n\t * Construct a new extendable error.\n\t *\n\t * @author gerkin\n\t * @param {string} message          - Message of this error.\n\t * @param {*}      errorArgs        - Arguments to transfer to parent Error.\n\t */\n\tconstructor( message, ...errorArgs ) {\n\t\tsuper( message, ...errorArgs );\n\t\tthis.name = this.constructor.name;\n\t\tthis.message = message;\n\t\tif ( 'function' === typeof Error.captureStackTrace ) {\n\t\t\tError.captureStackTrace( this, this.constructor );\n\t\t} else {\n\t\t\tthis.stack = ( new Error( message )).stack;\n\t\t}\n\t}\n}\n\nmodule.exports = ExtendableError;\n\n},{}],17:[function(require,module,exports){\n'use strict';\n\nconst {\n\t_,\n} = require( '../dependencies' );\nconst ValidationError = require( './validationError' );\n\n/**\n * @module Errors/SetValidationError\n */\n\n/**\n * This class represents an error related to validation on a set.\n *\n * @extends module:Errors/ValidationError~ValidationError\n */\nclass SetValidationError extends ValidationError {\n\t/**\n\t * Construct a new validation error.\n\t *\n\t * @author gerkin\n\t * @see Diaspora.check\n\t * @param {string}                                                      message          - Message of this error.\n\t * @param {module:Errors/EntityValidationError~EntityValidationError[]} validationErrors - Array of validation errors.\n\t * @param {*}                                                           errorArgs        - Arguments to transfer to parent Error.\n\t */\n\tconstructor( message, validationErrors, ...errorArgs ) {\n\t\tmessage += `[\\n${ _( validationErrors ).map(( error, index ) => {\n\t\t\tif ( _.isNil( error )) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn `${ index  }: ${  error.message.replace( /\\n/g, '\\n\t' ) }`;\n\t\t\t}\n\t\t}).filter( _.identity ).join( ',\\n' ) }\\n]`;\n\t\tsuper( message, ...errorArgs );\n\t\tthis.validationErrors = validationErrors;\n\t}\n}\n\nmodule.exports = SetValidationError;\n\n},{\"../dependencies\":11,\"./validationError\":18}],18:[function(require,module,exports){\n'use strict';\n\nconst ExtendableError = require( './extendableError' );\n\n/**\n * This class represents an error related to validation.\n *\n * @extends module:Errors/ExtendableError~ExtendableError\n */\nclass ValidationError extends ExtendableError {}\n\nmodule.exports = ValidationError;\n\n},{\"./extendableError\":16}],19:[function(require,module,exports){\n'use strict';\n\nconst {\n\t_, Promise,\n} = require( './dependencies' );\nconst EntityFactory = require( './entityFactory' );\nconst Diaspora = require( './diaspora' );\nconst Set = require( './set' );\nconst Validator = require( './validator' );\n\nconst {\n\tentityPrototypeProperties,\n} = EntityFactory;\n\n/**\n * @module Model\n */\n\n/**\n * Object describing a model.\n *\n * @typedef  {Object} ModelConfiguration.ModelDescription\n * @author gerkin\n * @property {ModelConfiguration.SourcesDescriptor}    sources         - List of sources to use with this model.\n * @property {ModelConfiguration.AttributesDescriptor} attributes      - Attributes of the model.\n * @property {Object<string, Function>}                methods         - Methods to add to entities prototype.\n * @property {Object<string, Function>}                staticMethods   - Static methods to add to entities.\n * @property {Object<string, Function|Function[]>}     lifecycleEvents - Events to bind on entities.\n */\n\nconst findArgs = ( model, queryFind = {}, options = {}, dataSourceName ) => {\n\tlet ret;\n\tif ( _.isString( options ) && _.isNil( dataSourceName )) {\n\t\tret = {\n\t\t\tdataSourceName: options,\n\t\t\toptions:        {},\n\t\t};\n\t} else if ( _.isString( queryFind ) && _.isNil( options ) && _.isNil( dataSourceName )) {\n\t\tret = {\n\t\t\tdataSourceName: queryFind,\n\t\t\tqueryFind:      {},\n\t\t\toptions:        {},\n\t\t};\n\t} else {\n\t\tret = {\n\t\t\tqueryFind,\n\t\t\toptions,\n\t\t\tdataSourceName,\n\t\t};\n\t}\n\tret.dataSource = model.getDataSource( ret.dataSourceName );\n\treturn ret;\n};\n\nconst makeSet = model => {\n\treturn dataSourceEntities => {\n\t\tconst newEntities = _.map( dataSourceEntities, dataSourceEntity => new model.entityFactory( dataSourceEntity ));\n\t\tconst set = new Set( model, newEntities );\n\t\treturn Promise.resolve( set );\n\t};\n};\nconst makeEntity = model => {\n\treturn dataSourceEntity => {\n\t\tif ( _.isNil( dataSourceEntity )) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst newEntity = new model.entityFactory( dataSourceEntity );\n\t\treturn Promise.resolve( newEntity );\n\t};\n};\n\nconst doDelete = ( methodName, model ) => {\n\treturn ( queryFind = {}, options = {}, dataSourceName ) => {\n\t\t// Sort arguments\n\t\tconst args = findArgs( model, queryFind, options, dataSourceName );\n\t\treturn args.dataSource[methodName]( model.name, args.queryFind, args.options );\n\t};\n};\n\nconst doFindUpdate = ( model, plural, queryFind, options, dataSourceName, update ) => {\n\t// Sort arguments\n\tconst queryComponents = findArgs( model, queryFind, options, dataSourceName );\n\tconst args = _([ model.name, queryComponents.queryFind ]).push( update ).push( queryComponents.options ).compact().value();\n\treturn queryComponents.dataSource[( update ? 'update' : 'find' ) + ( plural ? 'Many' : 'One' )]( ...args )\n\t\t.then(( plural ? makeSet : makeEntity )( model ));\n};\n\nconst normalizeRemaps = modelDesc => {\n\tlet sources = modelDesc.sources;\n\tif ( _.isString( sources )) {\n\t\tsources = {[modelDesc.sources]: true};\n\t} else if ( _.isArrayLike( sources )) {\n\t\tsources = _.zipObject( sources, _.times( sources.length, _.constant({})));\n\t} else {\n\t\tsources = _.mapValues( sources, ( remap, dataSourceName ) => {\n\t\t\tif ( true === remap ) {\n\t\t\t\treturn {};\n\t\t\t} else if ( _.isObject( remap )) {\n\t\t\t\treturn remap;\n\t\t\t} else {\n\t\t\t\tthrow new TypeError( `Datasource \"${ dataSourceName }\" value is invalid: expect \\`true\\` or a remap hash, but have ${ JSON.stringify( remap ) }` );\n\t\t\t}\n\t\t});\n\t}\n\treturn sources;\n};\n\n/**\n * The model class is used to interact with the population of all data of the same type.\n */\nclass Model {\n\t/**\n\t * Create a new Model that is allowed to interact with all entities of data sources tables selected.\n\t *\n\t * @author gerkin\n\t * @param {string}                              name      - Name of the model.\n\t * @param {ModelConfiguration.ModelDescription} modelDesc - Hash representing the configuration of the model.\n\t */\n\tconstructor( name, modelDesc ) {\n\t\t// Check model configuration\n\t\tconst reservedPropIntersect = _.intersection( entityPrototypeProperties, _.keys( modelDesc.attributes ));\n\t\tif ( 0 !== reservedPropIntersect.length ) {\n\t\t\tthrow new Error( `${ JSON.stringify( reservedPropIntersect ) } is/are reserved property names. To match those column names in data source, please use the data source mapper property` );\n\t\t} else if ( !modelDesc.hasOwnProperty( 'sources' ) || !( _.isArrayLike( modelDesc.sources ) || _.isObject( modelDesc.sources ) || _.isString( modelDesc.sources ))) {\n\t\t\tthrow new TypeError( `Expect model sources to be either a string, an array or an object, had ${ JSON.stringify( modelDesc.sources ) }.` );\n\t\t}\n\t\t// Normalize our sources: normalized form is an object with keys corresponding to source name, and key corresponding to remaps\n\t\tconst sourcesNormalized = normalizeRemaps( modelDesc );\n\t\t// List sources required by this model\n\t\tconst sourceNames = _.keys( sourcesNormalized );\n\t\tconst modelSources = _.pick( Diaspora.dataSources, sourceNames );\n\t\tconst missingSources = _.difference( sourceNames, _.keys( modelSources ));\n\t\tif ( 0 !== missingSources.length ) {\n\t\t\tthrow new Error( `Missing data sources ${ missingSources.map( v => `\"${ v }\"` ).join( ', ' ) }` );\n\t\t}\n\n\t\tif ( !_.isObject( modelDesc.attributes )) {\n\t\t\tthrow new TypeError( `Model attributes should be an object, have ${ JSON.stringify( modelDesc.attributes ) }` );\n\t\t}\n\t\t// Now, we are sure that config is valid. We can configure our datasources with model options, and set `this` properties.\n\t\t_.forEach( sourcesNormalized, ( remap, sourceName ) => modelSources[sourceName].configureCollection( name, remap ));\n\t\t_.assign( this, {\n\t\t\tdataSources:       modelSources,\n\t\t\tdefaultDataSource: _( modelSources ).keys().first(),\n\t\t\tname,\n\t\t\tentityFactory:     EntityFactory( name, modelDesc, this ),\n\t\t\tvalidator:         new Validator( modelDesc.attributes ),\n\t\t});\n\t}\n\n\t/**\n\t * Create a new Model that is allowed to interact with all entities of data sources tables selected.\n\t *\n\t * @author gerkin\n\t * @throws  {Error} Thrown if requested source name does not exists.\n\t * @param   {string} [sourceName=Model.defaultDataSource] - Name of the source to get. It corresponds to one of the sources you set in {@link Model#modelDesc}.Sources.\n\t * @returns {Adapters.DiasporaAdapter} Source adapter with requested name.\n\t */\n\tgetDataSource( sourceName ) {\n\t\tif ( _.isNil( sourceName )) {\n\t\t\tsourceName = this.defaultDataSource;\n\t\t} else if ( !this.dataSources.hasOwnProperty( sourceName )) {\n\t\t\tthrow new Error( `Unknown data source \"${ sourceName }\" in model \"${ this.name }\", available are ${ _.keys( this.dataSources ).map( v => `\"${ v }\"` ).join( ', ' ) }` );\n\t\t}\n\t\treturn this.dataSources[sourceName];\n\t}\n\n\t/**\n\t * Create a new *orphan* {@link Entity entity}.\n\t *\n\t * @author gerkin\n\t * @param   {Object} source - Object to copy attributes from.\n\t * @returns {Entity} New *orphan* entity.\n\t */\n\tspawn( source ) {\n\t\tconst newEntity = new this.entityFactory( source );\n\t\treturn newEntity;\n\t}\n\n\t/**\n\t * Create multiple new *orphan* {@link Entity entities}.\n\t *\n\t * @author gerkin\n\t * @param   {Object[]} sources - Array of objects to copy attributes from.\n\t * @returns {Set} Set with new *orphan* entities.\n\t */\n\tspawnMany( sources ) {\n\t\treturn new Set( this, _.map( sources, source => this.spawn( source )));\n\t}\n\n\t/**\n\t * Insert a raw source object in the data store.\n\t *\n\t * @author gerkin\n\t * @param   {Object} source                                   - Object to copy attributes from.\n\t * @param   {string} [dataSourceName=Model.defaultDataSource] - Name of the data source to insert in.\n\t * @returns {Promise} Promise resolved with new *sync* {@link Entity entity}.\n\t */\n\tinsert( source, dataSourceName ) {\n\t\tconst dataSource = this.getDataSource( dataSourceName );\n\t\treturn dataSource.insertOne( this.name, source ).then( entity => {\n\t\t\treturn Promise.resolve( new this.entityFactory( entity ));\n\t\t});\n\t}\n\n\t/**\n\t * Insert multiple raw source objects in the data store.\n\t *\n\t * @author gerkin\n\t * @param   {Object[]} sources                                  - Array of object to copy attributes from.\n\t * @param   {string}   [dataSourceName=Model.defaultDataSource] - Name of the data source to insert in.\n\t * @returns {Promise} Promise resolved with a {@link Set set} containing new *sync* entities.\n\t */\n\tinsertMany( sources, dataSourceName ) {\n\t\tconst dataSource = this.getDataSource( dataSourceName );\n\t\treturn dataSource.insertMany( this.name, sources ).then( makeSet( this ));\n\t}\n\n\t/**\n\t * Retrieve a single entity from specified data source that matches provided `queryFind` and `options`.\n\t *\n\t * @author gerkin\n\t * @param   {QueryLanguage#SelectQueryOrCondition} [queryFind={}]                           - Query to get desired entity.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}]                             - Options for this query.\n\t * @param   {string}                               [dataSourceName=Model.defaultDataSource] - Name of the data source to get entity from.\n\t * @returns {Promise} Promise resolved with the found {@link Entity entity} in *sync* state.\n\t */\n\tfind( queryFind, options, dataSourceName ) {\n\t\treturn doFindUpdate( this, false, queryFind, options, dataSourceName );\n\t}\n\n\t/**\n\t * Retrieve multiple entities from specified data source that matches provided `queryFind` and `options`.\n\t *\n\t * @author gerkin\n\t * @param   {QueryLanguage#SelectQueryOrCondition} [queryFind={}]                           - Query to get desired entities.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}]                             - Options for this query.\n\t * @param   {string}                               [dataSourceName=Model.defaultDataSource] - Name of the data source to get entities from.\n\t * @returns {Promise} Promise resolved with a {@link Set set} of found entities in *sync* state.\n\t */\n\tfindMany( queryFind, options, dataSourceName ) {\n\t\treturn doFindUpdate( this, true, queryFind, options, dataSourceName );\n\t}\n\n\t/**\n\t * Update a single entity from specified data source that matches provided `queryFind` and `options`.\n\t *\n\t * @author gerkin\n\t * @param   {QueryLanguage#SelectQueryOrCondition} [queryFind={}]                           - Query to get desired entity.\n\t * @param   {Object}                               update                                   - Attributes to update on matched set.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}]                             - Options for this query.\n\t * @param   {string}                               [dataSourceName=Model.defaultDataSource] - Name of the data source to get entity from.\n\t * @returns {Promise} Promise resolved with the updated {@link Entity entity} in *sync* state.\n\t */\n\tupdate( queryFind, update, options = {}, dataSourceName ) {\n\t\treturn doFindUpdate( this, false, queryFind, options, dataSourceName, update );\n\t}\n\n\t/**\n\t * Update multiple entities from specified data source that matches provided `queryFind` and `options`.\n\t *\n\t * @author gerkin\n\t * @param   {QueryLanguage#SelectQueryOrCondition} [queryFind={}]                           - Query to get desired entities.\n\t * @param   {Object}                               update                                   - Attributes to update on matched set.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}]                             - Options for this query.\n\t * @param   {string}                               [dataSourceName=Model.defaultDataSource] - Name of the data source to get entities from.\n\t * @returns {Promise} Promise resolved with the {@link Set set} of found entities in *sync* state.\n\t */\n\tupdateMany( queryFind, update, options = {}, dataSourceName ) {\n\t\treturn doFindUpdate( this, true, queryFind, options, dataSourceName, update );\n\t}\n\n\t/**\n\t * Delete a single entity from specified data source that matches provided `queryFind` and `options`.\n\t *\n\t * @author gerkin\n\t * @param   {QueryLanguage#SelectQueryOrCondition} [queryFind]                           - Query to get desired entity.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}]                             - Options for this query.\n\t * @param   {string}                               [dataSourceName=Model.defaultDataSource] - Name of the data source to get entity from.\n\t * @returns {Promise} Promise resolved with `undefined`.\n\t */\n\tdelete( queryFind, options = {}, dataSourceName ) {\n\t\treturn doDelete( 'deleteOne', this )( queryFind, options, dataSourceName );\n\t}\n\n\t/**\n\t * Delete multiple entities from specified data source that matches provided `queryFind` and `options`.\n\t *\n\t * @author gerkin\n\t * @param   {QueryLanguage#SelectQueryOrCondition} [queryFind={}]                           - Query to get desired entities.\n\t * @param   {QueryLanguage#QueryOptions}           [options={}]                             - Options for this query.\n\t * @param   {string}                               [dataSourceName=Model.defaultDataSource] - Name of the data source to get entities from.\n\t * @returns {Promise} Promise resolved with `undefined`.\n\t */\n\tdeleteMany( queryFind = {}, options = {}, dataSourceName ) {\n\t\treturn doDelete( 'deleteMany', this )( queryFind, options, dataSourceName );\n\t}\n}\n\nmodule.exports = Model;\n\n},{\"./dependencies\":11,\"./diaspora\":12,\"./entityFactory\":13,\"./set\":20,\"./validator\":22}],20:[function(require,module,exports){\n'use strict';\n\nconst {\n\t_, Promise,\n} = require( './dependencies' );\nconst Diaspora = require( './diaspora' );\nconst Utils = require( './utils' );\nconst SetValidationError = require( './errors/setValidationError' );\n\n/**\n * @module Set\n */\n\n/**\n * Emit events on each entities.\n *\n * @author Gerkin\n * @inner\n * @param   {SequentialEvent[]} entities - Items to iterate over.\n * @param   {string|string[]}   verb     - Verb of the action to emit.\n * @param   {string}            prefix   - Prefix to prepend to the verb.\n * @returns {Promise} Promise resolved once all promises are done.\n */\nconst allEmit = ( entities, verb, prefix ) => Promise.all( entities.map(( entity, index ) => entity.emit( `${ prefix }${ _.isArray( verb ) ? verb[index] : verb }` )));\n\n/**\n * Emit `before` & `after` events around the entity action. `this` must be bound to the calling {@link Set}.\n *\n * @author Gerkin\n * @inner\n * @this Set\n * @param   {string} sourceName    - Name of the data source to interact with.\n * @param   {string} action        - Name of the entity function to apply.\n * @param   {string|string[]} verb - String or array of strings to map for events suffix.\n * @returns {Promise} Promise resolved once events are finished.\n */\nasync function wrapEventsAction( sourceName, action, verb ) {\n\tconst _allEmit = _.partial( allEmit, this.entities, verb );\n\tawait _allEmit( 'before' );\n\tawait Promise.all( this.entities.map( entity => entity[action]( sourceName, {\n\t\tskipEvents: true,\n\t})));\n\tawait _allEmit( 'after' );\n}\n\nconst setProxyProps = {\n\tget( target, prop ) {\n\t\tif ( prop in target ) {\n\t\t\treturn target[prop];\n\t\t} else if ( prop in target.entities ) {\n\t\t\treturn target.entities[prop];\n\t\t} else if ( 'string' === typeof prop && prop.match( /^-?\\d+$/ ) && target.entities.nth( parseInt( prop ))) {\n\t\t\treturn target.entities.nth( parseInt( prop ));\n\t\t}\n\t},\n\tset( target, prop, val ) {\n\t\tif ( 'model' === prop ) {\n\t\t\treturn new Error( 'Can\\'t assign to read-only property \"model\".' );\n\t\t} else if ( 'entities' === prop ) {\n\t\t\tSet.checkEntitiesFromModel( val, target.model );\n\t\t\ttarget.entities = _( val );\n\t\t}\n\t},\n};\n\n/**\n * Collections are used to manage multiple entities at the same time. You may try to use this class as an array.\n */\nclass Set {\n\t/**\n\t * Create a new set, managing provided `entities` that must be generated from provided `model`.\n\t *\n\t * @param {Model}           model    - Model describing entities managed by this set.\n\t * @param {Entity|Entity[]} entities - Entities to manage with this set. Arguments are flattened, so you can provide as many nested arrays as you want.\n\t */\n\tconstructor( model, ...entities ) {\n\t\t// Flatten arguments\n\t\tentities = _( entities ).flatten();\n\t\t// Check if each entity is from the expected model\n\t\tSet.checkEntitiesFromModel( entities.value(), model );\n\n\t\tconst defined = Utils.defineEnumerableProperties( this, {\n\t\t\t/**\n\t\t\t * List entities of this set.\n\t\t\t *\n\t\t\t * @name entities\n\t\t\t * @readonly\n\t\t\t * @memberof Set\n\t\t\t * @instance\n\t\t\t * @type {LodashWrapper<Entity>}\n\t\t\t * @author Gerkin\n\t\t\t */\n\t\t\tentities: entities,\n\t\t\t/**\n\t\t\t * Model that generated this set.\n\t\t\t *\n\t\t\t * @name model\n\t\t\t * @readonly\n\t\t\t * @memberof Set\n\t\t\t * @instance\n\t\t\t * @type {Model}\n\t\t\t * @author Gerkin\n\t\t\t */\n\t\t\tmodel:    model,\n\t\t\t/**\n\t\t\t * Number of entities in this set.\n\t\t\t *\n\t\t\t * @name length\n\t\t\t * @readonly\n\t\t\t * @memberof Set\n\t\t\t * @instance\n\t\t\t * @type {Integer}\n\t\t\t * @author Gerkin\n\t\t\t */\n\t\t\tlength:   {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.entities.size();\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\treturn new Proxy( defined, setProxyProps );\n\t}\n\n\t/**\n\t * Check if all entities in the first argument are from the expected model.\n\t *\n\t * @author gerkin\n\t * @throws {TypeError} Thrown if one of the entity is not from provided `model`.\n\t * @param {Entity[]} entities - Array of entities to check.\n\t * @param {Model}    model    - Model expected to be the source of all entities.\n\t * @returns {undefined} This function does not return anything.\n\t */\n\tstatic checkEntitiesFromModel( entities, model ) {\n\t\tentities.forEach(( entity, index ) => {\n\t\t\tif ( entity.constructor.model !== model ) {\n\t\t\t\tthrow new TypeError( `Provided entity n°${ index } ${ entity } is not from model ${ model } (${ model.modelName })` );\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Persist all entities of this collection.\n\t *\n\t * @fires EntityFactory.Entity#beforeUpdate\n\t * @fires EntityFactory.Entity#afterUpdate\n\t * @author gerkin\n\t * @param {string} sourceName - Data source name to persist in.\n\t * @returns {Promise} Promise resolved once all items are persisted.\n\t * @see {@link EntityFactory.Entity#persist}\n\t */\n\tasync persist( sourceName ) {\n\t\tconst suffixes = this.entities.map( entity => 'orphan' === entity.state ? 'Create' : 'Update' ).value();\n\t\tconst _allEmit = _.partial( allEmit, this.entities );\n\t\tawait _allEmit( 'Persist', 'before' );\n\t\tawait _allEmit( 'Validate', 'before' );\n\t\tconst validationResults = this.entities.map( entity => {\n\t\t\ttry {\n\t\t\t\tentity.validate();\n\t\t\t} catch ( error ) {\n\t\t\t\tconsole.error( error );\n\t\t\t\tDiaspora.logger.error( 'Validation failed:', {\n\t\t\t\t\tentity,\n\t\t\t\t\terror,\n\t\t\t\t});\n\t\t\t\treturn error;\n\t\t\t}\n\t\t}).value();\n\t\tconst errors = _.compact( validationResults ).length;\n\t\tif ( errors > 0 ) {\n\t\t\tthrow new SetValidationError( `Set validation failed for ${ errors } elements (on ${ this.length }): `, validationResults );\n\t\t}\n\t\tawait _allEmit( 'Validate', 'after' );\n\t\tawait wrapEventsAction.call( this, sourceName, 'persist', _.map( suffixes, suffix => `Persist${ suffix }` ));\n\t\tawait _allEmit( 'Persist', 'after' );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Reload all entities of this collection.\n\t *\n\t * @fires EntityFactory.Entity#beforeFind\n\t * @fires EntityFactory.Entity#afterFind\n\t * @author gerkin\n\t * @param {string} sourceName - Data source name to reload entities from.\n\t * @returns {Promise} Promise resolved once all items are reloaded.\n\t * @see {@link EntityFactory.Entity#fetch}\n\t */\n\tasync fetch( sourceName ) {\n\t\tawait wrapEventsAction.call( this, sourceName, 'fetch', 'Fetch' );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Destroy all entities from this collection.\n\t *\n\t * @fires EntityFactory.Entity#beforeDelete\n\t * @fires EntityFactory.Entity#afterDelete\n\t * @author gerkin\n\t * @param {string} sourceName - Name of the data source to delete entities from.\n\t * @returns {Promise} Promise resolved once all items are destroyed.\n\t * @see {@link EntityFactory.Entity#destroy}\n\t */\n\tasync destroy( sourceName ) {\n\t\tawait wrapEventsAction.call( this, sourceName, 'destroy', 'Destroy' );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Update all entities in the set with given object.\n\t *\n\t * @author gerkin\n\t * @param   {Object} newData - Attributes to change in each entity of the collection.\n\t * @returns {Collection} `this`.\n\t */\n\tupdate( newData ) {\n\t\tthis.entities.forEach( entity => {\n\t\t\tUtils.applyUpdateEntity( newData, entity );\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a POJO representation of this set's data.\n\t *\n\t * @author gerkin\n\t * @returns {Object} POJO representation of set & children.\n\t */\n\ttoObject() {\n\t\treturn this.entities.map( entity => entity.toObject()).value();\n\t}\n}\n\nmodule.exports = Set;\n\n},{\"./dependencies\":11,\"./diaspora\":12,\"./errors/setValidationError\":17,\"./utils\":21}],21:[function(require,module,exports){\n(function (global){\n'use strict';\n\nconst {\n\t_,\n} = require( './dependencies' );\n\n/**\n * @module Utils\n */\n\nmodule.exports = {\n\tdefineEnumerableProperties( subject, handlers ) {\n\t\tconst remappedHandlers = _.mapValues( handlers, handler => {\n\t\t\tif ( _.isNil( handler ) || 'object' !== typeof handler || Object.getPrototypeOf( handler ) !== Object.prototype ) {\n\t\t\t\thandler = {\n\t\t\t\t\tvalue: handler,\n\t\t\t\t};\n\t\t\t}\n\t\t\tlet defaults = {\n\t\t\t\tenumerable: true,\n\t\t\t};\n\t\t\tif ( !handler.hasOwnProperty( 'get' )) {\n\t\t\t\tdefaults.writable = false;\n\t\t\t}\n\t\t\t_.defaults( handler, defaults );\n\t\t\treturn handler;\n\t\t});\n\t\treturn Object.defineProperties( subject, remappedHandlers );\n\t},\n\t/**\n\t * Merge update query with the entity. This operation allows to delete fields.\n\t *\n\t * @author gerkin\n\t * @param   {Object} update - Hash representing modified values. A field with an `undefined` value deletes this field from the entity.\n\t * @param   {Object} entity - Entity to update.\n\t * @returns {Object} Entity modified.\n\t */\n\tapplyUpdateEntity( update, entity ) {\n\t\t_.forEach( update, ( val, key ) => {\n\t\t\tif ( _.isUndefined( val )) {\n\t\t\t\tdelete entity[key];\n\t\t\t} else {\n\t\t\t\tentity[key] = val;\n\t\t\t}\n\t\t});\n\t\treturn entity;\n\t},\n\n\t/**\n\t * Create a new unique id for this store's entity.\n\t * \n\t * @author gerkin\n\t * @returns {string} Generated unique id.\n\t */\n\tgenerateUUID() {\n\t\tlet d = new Date().getTime();\n\t\t// Use high-precision timer if available\n\t\tif ( global.performance && 'function' === typeof global.performance.now ) {\n\t\t\td += global.performance.now();\n\t\t}\n\t\tconst uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace( /[xy]/g, c => {\n\t\t\tconst r = ( d + Math.random() * 16 ) % 16 | 0;\n\t\t\td = Math.floor( d / 16 );\n\t\t\treturn ( 'x' === c ? r : ( r & 0x3 | 0x8 )).toString( 16 );\n\t\t});\n\t\treturn uuid;\n\t},\n\n\t/**\n\t * Reduce, offset or sort provided set.\n\t * \n\t * @author gerkin\n\t * @param   {Object[]} set     - Objects retrieved from memory store.\n\t * @param   {Object}   options - Options to apply to the set.\n\t * @returns {Object[]} Set with options applied.\n\t */\n\tapplyOptionsToSet( set, options ) {\n\t\t_.defaults( options, {\n\t\t\tlimit: Infinity,\n\t\t\tskip:  0,\n\t\t});\n\t\tset = set.slice( options.skip );\n\t\tif ( set.length > options.limit ) {\n\t\t\tset = set.slice( 0, options.limit );\n\t\t}\n\t\treturn set;\n\t},\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./dependencies\":11}],22:[function(require,module,exports){\n'use strict';\n\nconst dependencies = require( './dependencies' );\nconst Diaspora = require( './diaspora' );\nconst {EntityValidationError} = Diaspora.components.Errors;\nconst { _ } = dependencies;\n\n/**\n * @module Validator\n */\n\n/**\n * Execute the simple tester and return an error component if it returns falsey.\n *\n * @param   {Function} tester - The test function to invoke.\n * @returns {module:Validator~Checker} Function to execute to validate the type.\n */\nconst validateWrongType = tester => {\n\treturn ( keys, fieldDesc, value ) => {\n\t\tif ( !tester( value )) {\n\t\t\treturn {type: `${ keys.toValidatePath() } expected to be a \"${ fieldDesc.type }\"`};\n\t\t}\n\t};\n};\n\n/**\n * Prepare the check of each items in the array.\n *\n * @param   {module:Validator~Validator} validator - Validator instance that do this call.\n * @param   {Object}                     fieldDesc - Description of the field to check.\n * @param   {module:Validator~PathStack} keys      - Keys so far.\n * @returns {Function} Function to execute to validate array items.\n */\nconst validateArrayItems = ( validator, fieldDesc, keys ) => {\n\treturn ( propVal, index ) => {\n\t\tif ( fieldDesc.hasOwnProperty( 'of' )) {\n\t\t\tconst ofArray = _.castArray( fieldDesc.of );\n\t\t\tconst subErrors = _( ofArray ).map(( desc, subIndex ) => validator.check(\n\t\t\t\tpropVal,\n\t\t\t\tkeys.clone().pushValidationProp( 'of', _.isArray( fieldDesc.of ) ? subIndex : undefined ).pushEntityProp( index ),\n\t\t\t\t{getProps: false}\n\t\t\t));\n\t\t\tif ( !_.isArray( fieldDesc.of )) {\n\t\t\t\treturn subErrors.get( 0 );\n\t\t\t} else if ( subErrors.compact().value().length === ofArray.length ) {\n\t\t\t\treturn subErrors.toPlainObject().omitBy( _.isNil ).value();\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t};\n};\n\n/**\n * A checker is a function that can return an error component with provided standard args.\n *\n * @callback Checker\n * @param   {module:Validator~PathStack} keys      - Pathstack so far.\n * @param   {Object}                     fieldDesc - Description of the field.\n * @param   {Any}                        value     - Value to check.\n * @returns {Object} Error component.\n */\n\n/**\n * Store for validation functions.\n *\n * @type {object}\n * @property {object<string, module:Validator~Checker>} TYPE - Type checkers.\n * @property {module:Validator~Checker} TYPE.string - String type checker.\n * @property {module:Validator~Checker} TYPE.integer - Integer type checker.\n * @property {module:Validator~Checker} TYPE.float - Float type checker.\n * @property {module:Validator~Checker} TYPE.date - Date type checker.\n * @property {module:Validator~Checker} TYPE.object - Object type checker.\n * @property {module:Validator~Checker} TYPE.array - Array type checker.\n * @property {module:Validator~Checker} TYPE.any - Type checker for type 'any'.\n * @property {module:Validator~Checker} TYPE._ - Default function for unhandled type.\n */\nconst VALIDATIONS = {\n\tTYPE: {\n\t\tstring:  validateWrongType( _.isString ),\n\t\tinteger: validateWrongType( _.isInteger ),\n\t\tfloat:   validateWrongType( _.isNumber ),\n\t\tdate:    validateWrongType( _.isDate ),\n\t\tboolean: validateWrongType( _.isBoolean ),\n\t\tobject( keys, fieldDesc, value ) {\n\t\t\tif ( !_.isObject( value )) {\n\t\t\t\treturn {type: `${ keys.toValidatePath() } expected to be a \"${ fieldDesc.type }\"`};\n\t\t\t} else {\n\t\t\t\tconst deepTest = _.isObject(\n\t\t\t\t\tfieldDesc.attributes\n\t\t\t\t) ? _( _.assign({}, fieldDesc.attributes, value )).mapValues(\n\t\t\t\t\t\t( pv, propName ) => {\n\t\t\t\t\t\t\tconst propVal = value[propName];\n\t\t\t\t\t\t\treturn this.check(\n\t\t\t\t\t\t\t\tpropVal,\n\t\t\t\t\t\t\t\tkeys.clone().pushValidationProp( 'attributes' ).pushProp( propName ),\n\t\t\t\t\t\t\t\t{getProps: false}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t\t\t.omitBy( _.isEmpty )\n\t\t\t\t\t\t.value() : {};\n\t\t\t\tif ( !_.isEmpty( deepTest )) {\n\t\t\t\t\treturn {children: deepTest};\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tarray( keys, fieldDesc, value ) {\n\t\t\tif ( !_.isArray( value )) {\n\t\t\t\treturn {type: `${ keys.toValidatePath() } expected to be a \"${ fieldDesc.type }\"`};\n\t\t\t} else {\n\t\t\t\tconst deepTest = _.isObject(\n\t\t\t\t\tfieldDesc.of\n\t\t\t\t) ? _( value ).map( validateArrayItems( this, fieldDesc, keys ))\n\t\t\t\t\t\t.omitBy( _.isEmpty )\n\t\t\t\t\t\t.value() : {};\n\t\t\t\tif ( !_.isEmpty( deepTest )) {\n\t\t\t\t\treturn {children: deepTest};\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tany( keys, fieldDesc, value ) {\n\t\t\tif ( !_.stubTrue( value )) {\n\t\t\t\treturn {type: `${ keys.toValidatePath() } expected to be assigned with any type`};\n\t\t\t}\n\t\t},\n\t\t_( keys, fieldDesc ) {\n\t\t\treturn {type: `${ keys.toValidatePath() } requires to be unhandled type \"${ fieldDesc.type }\"`};\n\t\t},\n\t},\n};\n// Add aliases\n_.assign( VALIDATIONS.TYPE, {\n\tbool: VALIDATIONS.TYPE.boolean,\n\tint:  VALIDATIONS.TYPE.integer,\n\tstr:  VALIDATIONS.TYPE.string,\n\ttext: VALIDATIONS.TYPE.string,\n});\n\n/**\n * Standard function that can be used to add steps to the validation process..\n *\n * @callback ValidationStep\n * @param   {module:Validator~ValidationStepsArgs} validationArgs - Object of arguments.\n * @returns {undefined} This function returns nothing.\n */\n\n/**\n * This object can be passed through each validation steps.\n *\n * @typedef  {Object} ValidationStepsArgs\n * @property {Object}                     error     - Error object to extend.\n * @property {Object}                     fieldDesc - Description of the field.\n * @property {module:Validator~PathStack} keys      - Pathstack representing keys so far.\n * @property {*}                          value     - Value to check.\n */\n\n\nconst VALIDATION_STEPS = ([\n\t/**\n\t * Apply the custom `validate` function or function array, if it exists.\n\t *\n\t * @function module:Validator~checkCustoms\n\t * @type {module:Validator~ValidationStep}\n\t * @param   {module:Validator~ValidationStepsArgs} validationArgs - Validation step argument.\n\t * @returns {undefined} This function returns nothing.\n\t */\n\tfunction checkCustoms( validationArgs ) {\n\t\tconst {\n\t\t\terror, fieldDesc, keys, value,\n\t\t} = validationArgs;\n\t\t// It the field has a `validate` property, try to use it\n\t\tconst validateFcts = _( fieldDesc.validate ).castArray().compact();\n\t\tvalidateFcts.forEach( validateFct => {\n\t\t\tif ( !validateFct.call( this, value, fieldDesc )) {\n\t\t\t\terror.validate = `${ keys.toValidatePath() } custom validation failed`;\n\t\t\t}\n\t\t});\n\t},\n\t/**\n\t * Check if the type & the existence matches the `type` & `required` specifications.\n\t *\n\t * @function module:Validator~checkTypeRequired\n\t * @type {module:Validator~ValidationStep}\n\t * @param   {module:Validator~ValidationStepsArgs} validationArgs - Validation step argument.\n\t * @returns {undefined} This function returns nothing.\n\t */\n\tfunction checkTypeRequired( validationArgs ) {\n\t\tconst {\n\t\t\terror, fieldDesc, keys, value,\n\t\t} = validationArgs;\n\t\t// Check the type and the required status\n\t\tif ( !_.isNil( fieldDesc.type ) && !_.isNil( fieldDesc.model )) {\n\t\t\terror.spec =  `${ keys.toValidatePath() } spec can't have both a type and a model`;\n\t\t\t// Apply the `required` modifier\n\t\t} else if ( true === fieldDesc.required && _.isNil( value )) {\n\t\t\terror.required = `${ keys.toValidatePath() } is a required property of type \"${ fieldDesc.type }\"`;\n\t\t} else if ( !_.isNil( value )) {\n\t\t\tif ( _.isString( fieldDesc.type )) {\n\t\t\t\t_.assign(\n\t\t\t\t\terror,\n\t\t\t\t\t// Get the validator. Default to unhandled type\n\t\t\t\t\t_.get(\n\t\t\t\t\t\tVALIDATIONS,\n\t\t\t\t\t\t[ 'TYPE', fieldDesc.type ],\n\t\t\t\t\t\tVALIDATIONS.TYPE._\n\t\t\t\t\t).call( this, keys, fieldDesc, value ));\n\t\t\t} else {\n\t\t\t\terror.spec =  `${ keys.toValidatePath() } spec \"type\" must be a string`;\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Verify if the value correspond to a value in the `enum` property.\n\t *\n\t * @function module:Validator~checkEnum\n\t * @type {module:Validator~ValidationStep}\n\t * @param   {module:Validator~ValidationStepsArgs} validationArgs - Validation step argument.\n\t * @returns {undefined} This function returns nothing.\n\t */\n\tfunction checkEnum( validationArgs ) {\n\t\tconst {\n\t\t\terror, fieldDesc, keys, value,\n\t\t} = validationArgs;\n\t\t// Check enum values\n\t\tif ( !_.isNil( value ) && !_.isNil( fieldDesc.enum )) {\n\t\t\tconst result = _.some( fieldDesc.enum, enumVal => {\n\t\t\t\tif ( enumVal instanceof RegExp ) {\n\t\t\t\t\treturn null !== value.match( enumVal );\n\t\t\t\t} else {\n\t\t\t\t\treturn value === enumVal;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif ( false === result ) {\n\t\t\t\terror.enum = `${ keys.toValidatePath() } expected to have one of enumerated values \"${ JSON.stringify( fieldDesc.enum ) }\"`;\n\t\t\t}\n\t\t}\n\t},\n]);\n/**\n * Those validation steps are called one after one during the validation of a single field.\n *\n * @const VALIDATION_STEPS\n * @type {module:Validator~ValidationStep[]}\n * @property {module:Validator~checkCustoms}      '0' - Check for `validate` field.\n * @property {module:Validator~checkTypeRequired} '1' - Check for `type` & `required` fields.\n * @property {module:Validator~checkEnum}         '2' - Check for `enum` field.\n */\n\nconst PRIVATE = Symbol( 'PRIVATE' );\n\n/**\n * The PathStack class allows model validation to follow different paths in model description & entity.\n */\nclass PathStack {\n\t/**\n\t * Constructs a pathstack.\n\t *\n\t * @author gerkin\n\t * @param {string[]} [segmentsEntity=[]]     - Keys to follow in entity.\n\t * @param {string[]} [segmentsValidation=[]] - Keys to follow in model description.\n\t */\n\tconstructor( segmentsEntity = [], segmentsValidation = []) {\n\t\t_.assign( this, {\n\t\t\tsegmentsEntity,\n\t\t\tsegmentsValidation,\n\t\t});\n\t}\n\n\t/**\n\t * Add a path segment for entity navigation.\n\t *\n\t * @param   {...string} prop - Properties to add.\n\t * @returns {module:Validator~PathStack} Returns `this`.\n\t */\n\tpushEntityProp( ...prop ) {\n\t\tthis.segmentsEntity = _( this.segmentsEntity ).concat( prop ).filter( _.isNil ).value();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a path segment for model description navigation.\n\t *\n\t * @param   {...string} prop - Properties to add.\n\t * @returns {module:Validator~PathStack} Returns `this`.\n\t */\n\tpushValidationProp( ...prop ) {\n\t\tthis.segmentsValidation = _( this.segmentsValidation ).concat( prop ).filter( val => !_.isNil( val )).value();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a path segment for both entity & model description navigation.\n\t *\n\t * @param   {...string} prop - Properties to add.\n\t * @returns {module:Validator~PathStack} Returns `this`.\n\t */\n\tpushProp( ...prop ) {\n\t\treturn this.pushEntityProp( ...prop ).pushValidationProp( ...prop );\n\t}\n\n\t/**\n\t * Get a string version of entity segments.\n\t *\n\t * @returns {string} String representation of path in entity.\n\t */\n\ttoValidatePath() {\n\t\treturn this.segmentsEntity.join( '.' );\n\t}\n\n\t/**\n\t * Cast this PathStack to its representing arrays.\n\t *\n\t * @returns {Array<Array<string>>} Array of paths. The first path represents the entity segments, second represents model description segments.\n\t */\n\ttoArray() {\n\t\treturn [\n\t\t\tthis.segmentsEntity.slice(),\n\t\t\tthis.segmentsValidation.slice(),\n\t\t];\n\t}\n\n\t/**\n\t * Duplicate this PathStack, detaching its state from the new.\n\t *\n\t * @returns {module:Validator~PathStack} Clone of caller PathStack.\n\t */\n\tclone() {\n\t\treturn new PathStack( ...this.toArray());\n\t}\n}\n\n/**\n * The Validator class is used to check an entity or its fields against a model description.\n */\nclass Validator {\n\t/**\n\t * Construct a Validator configured for the provided model.\n\t *\n\t * @param {ModelConfiguration.AttributesDescriptor} modelDesc - Model description to validate.\n\t */\n\tconstructor( modelDesc ) {\n\t\tconst _this = {modelDesc};\n\t\tthis[PRIVATE] = _this;\n\t}\n\n\t/**\n\t * Check if the value matches the field description provided, thus verify if it is valid.\n\t *\n\t * @author gerkin\n\t * @param   {Object} entity - Entity to check.\n\t * @returns {Error[]} Array of errors.\n\t */\n\tvalidate( entity ) {\n\t\t// Apply method `checkField` on each field described\n\t\tconst checkResults = _( this[PRIVATE].modelDesc )\n\t\t\t.mapValues(( fieldDesc, field ) => this.check( entity[field], new PathStack().pushProp( field ), {getProps: false}))\n\t\t\t.omitBy( _.isEmpty )\n\t\t\t.value();\n\t\tif ( !_.isNil( checkResults ) && !_.isEmpty( checkResults )) {\n\t\t\tthrow new EntityValidationError( checkResults, 'Validation failed' );\n\t\t}\n\t}\n\n\t/**\n\t * Check if the value matches the field description provided, thus verify if it is valid.\n\t *\n\t * @author gerkin\n\t * @param   {Any}                        value                  - Value to check.\n\t * @param   {module:Validator~PathStack} keys                   - Pathstack representing path to this validation.\n\t * @param   {Object}                     [options=(})]          - Hash of options.\n\t * @param   {boolean}                    options.getProps=false - If `false`, it will use the value directly. If `true`, will try to get the property from value, as if it was an entity.\n\t * @returns {Object} Hash describing errors.\n\t */\n\tcheck( value, keys, options = {}) {\n\t\t_.defaults( options, { getProps: true });\n\t\tif ( !( keys instanceof PathStack )) {\n\t\t\tkeys = new PathStack( keys );\n\t\t}\n\n\t\tconst val = options.getProps ? _.get( value, keys.segmentsEntity ) : value;\n\t\tconst fieldDesc = _.get( this[PRIVATE].modelDesc, keys.segmentsValidation );\n\t\tif ( !_.isObject( fieldDesc )) {\n\t\t\treturn;\n\t\t}\n\t\t_.defaults( fieldDesc, { required: false });\n\n\t\tconst error = {};\n\n\t\tconst stepsArgs = {\n\t\t\terror,\n\t\t\tfieldDesc,\n\t\t\tkeys,\n\t\t\tvalue: val,\n\t\t};\n\n\t\t_.forEach( VALIDATION_STEPS, validationStep => validationStep.call( this, stepsArgs ));\n\n\t\tif ( !_.isEmpty( error )) {\n\t\t\terror.value = value;\n\t\t\treturn error;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Get the model description provided in constructor.\n\t *\n\t * @readonly\n\t * @type {ModelConfiguration.AttributesDescriptor}\n\t */\n\tget modelDesc() {\n\t\treturn _.cloneDeep( this[PRIVATE].modelDesc );\n\t}\n\n\t/**\n\t * Get the PathStack constructor.\n\t *\n\t * @readonly\n\t * @type {module:Validator~PathStack}\n\t */\n\tstatic get PathStack() {\n\t\treturn PathStack;\n\t}\n}\n\nmodule.exports = Validator;\n\n},{\"./dependencies\":11,\"./diaspora\":12}],23:[function(require,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n}).call(this,require('_process'))\n},{\"_process\":24}],24:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],25:[function(require,module,exports){\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n},{}]},{},[1])(1)\n});"]}