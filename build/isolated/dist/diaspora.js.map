{"version":3,"sources":["../src/diaspora.js"],"names":["f","exports","module","define","amd","g","window","global","self","Diaspora","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","SequentialEvent","_","Promise","DiasporaAdapter","classEntity","remaps","remapsInverted","filters","on","state","error","err","tableName","invert","query","keysMap","isNil","mapKeys","value","key","hasOwnProperty","resolve","reject","table","filtered","mapValues","input","remaped","output","entity","propName","idHash","assign","name","matchResult","every","toPairs","desc","isObject","entityVal","val","operation","isUndefined","update","forEach","opts","cloneDeep","limitOpt","limit","isString","parseInt","isInteger","Infinity","TypeError","skipOpt","skip","isFinite","ReferenceError","pageOpt","page","defaults","remapInput","remapOutput","originalQuery","options","canonicalOperations","normalizedQuery","attrSearch","attrName","Object","$equal","$exists","canon","alias","isNumber","JSON","stringify","insertMany","then","first","entities","mapSeries","insertOne","queryFind","findMany","foundEntities","normalizeOptions","foundCount","origSkip","loopFind","found","push","findOne","updateMany","updateOne","deleteMany","count","deleteOne","InMemoryEntity","InMemoryDiasporaAdapter","config","store","remap","ensureCollectionExists","d","Date","getTime","performance","now","uuid","replace","Math","random","floor","c","toString","items","storeTable","id","generateUUID","setIdHash","matches","filter","partial","matchEntity","reducedMatches","constructor","applyOptionsToSet","undefined","map","firstMatch","applyUpdateEntity","match","entityToDelete","entitiesIds","entitiesToDelete","get","includes","set","slice","LocalStorageEntity","LocalStorageDiasporaAdapter","session","source","sessionStorage","localStorage","index","getItem","setItem","parse","tableIndex","getItemName","item","findOneById","isEqual","keys","returnedItem","matched","each","itemId","pull","removeItem","pullAll","ModelExtension","log","warn","DataStoreEntity","dataSource","defineProperties","enumerable","configurable","omit","adapters","dataSources","models","cloneKeysAdd","newKey","newKeys","clone","wrapDataSourceAction","callback","queryType","adapter","args","filterResults","remapFields","optIndex","upd","indexOf","normalizeQuery","number","insertion","queryPromise","isArrayLike","results","check","modelDesc","fieldDesc","field","checkField","values","flatten","compact","required","errors","validate","join","type","model","tester","maybe","instance","modelName","string","integer","date","object","deepTest","attributes","propVal","concat","array","of","subErrors","find","v","assigned","enum","result","some","enumVal","RegExp","exec","default","defaultField","out","isFunction","createDataSource","baseAdapter","newDataSource","Proxy","target","method","toLowerCase","registerDataSource","moduleName","merge","declareModel","Model","dependencies","lodash","bluebird","entityPrototype","writable","toObject","persist","fetch","destroy","getState","getLastDataSource","getUidQuery","getTable","entityPrototypeProperties","EntityFactory","modelAttrs","modelAttrsKeys","Entity","lastDataSource","seal","sourceKeys","sourceUReserved","intersection","sourceDModel","difference","entityDefined","extend","sourceName","getDataSource","promise","dataStoreEntity","without","entityProxied","obj","console","enumerate","ownKeys","has","EntityWrapped","namespace","reservedPropIntersect","sources","sourcesNormalized","zipObject","times","constant","dataSourceName","sourceNames","scopeAvailableSources","modelSources","pick","missingSources","sourceConfiguring","configureCollection","defaultDataSource","entityFactory","newEntity","spawn","dataSourceEntity","dataSourceEntities"],"mappings":"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","file":"diaspora.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Diaspora = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nconst Diaspora = require( './lib/diaspora' );\n\nmodule.exports = Diaspora;\n\n},{\"./lib/diaspora\":8}],2:[function(require,module,exports){\n'use strict';\n\nconst SequentialEvent = require( 'sequential-event' );\nconst _ = require( 'lodash' );\nconst Promise = require( 'bluebird' );\n\n\n/**\n * @namespace ConstrainedTypes\n * @description Namespace for types with constraints, like <code>[0, Infinity]</code>, <code>]0, Infinity[</code>, etc etc\n */\n\n/**\n * @typedef {Integer} AbsInt0\n * @memberof ConstrainedTypes\n * @description Integer equal or above 0\n */\n\n/**\n * @typedef {Integer} AbsInt\n * @memberof ConstrainedTypes\n * @description Integer above 0\n */\n\n/**\n * @typedef {Integer} AbsIntInf\n * @memberof ConstrainedTypes\n * @description Integer above 0, may be integer\n */\n\n/**\n * @typedef {Integer} AbsIntInf0\n * @memberof ConstrainedTypes\n * @description Integer equal or above 0, may be integer\n */\n\n/**\n * @namespace QueryLanguage\n */\n\n/**\n * @typedef {Object} QueryOptions\n * @description All properties are optional\n * @memberof QueryLanguage\n * @public\n * @instance\n * @author gerkin\n * @property {ConstrainedTypes.AbsInt0} skip=0 Number of items to skip\n * @property {ConstrainedTypes.AbsIntInf0} limit=Infinity Number of items to get\n * @property {ConstrainedTypes.AbsInt0} page To use with {@link QueryOptions.limit `limit`} and without {@link QueryOptions.skip `skip`}. Skips `page` pages of `limit` elements\n * @property {Boolean} remapInput=true Flag indicating if adapter input should be remapped or not. TODO Remapping doc\n * @property {Boolean} remapOutput=true Flag indicating if adapter output should be remapped or not. TODO Remapping doc\n */\n\n/**\n * @typedef {Object} SelectQuery\n * @memberof QueryLanguage\n * @public\n * @instance\n * @author gerkin\n * @property {Any|SelectQueryCondition} * Fields to search. If not providing an object, find items with a property value that equals this value\n */\n\n/**\n * @typedef {Object} SelectQueryCondition\n * @description By default, all conditions in a single SelectQueryCondition are combined with an `AND` operator\n * @memberof QueryLanguage\n * @public\n * @instance\n * @author gerkin\n * @property {Any} $equals Match if item value is equal to this. Objects and array are compared deeply. **Alias: `==`**\n * @property {Any} $diff Match if item value is different to this. Objects and array are compared deeply. **Alias: `!=`** **NOT IMPLEMENTED YET**\n * @property {Boolean} $exists If `true`, match items where this prop is defined. If `false`, match when prop is null or not set. **Alias: `~`** **NOT IMPLEMENTED YET**\n * @property {Integer} $less Match if item value is less than this. **Alias: `<`** **NOT IMPLEMENTED YET**\n * @property {Integer} $lessEqual Match if item value is less than this or equals to this. **Alias: `<=`** **NOT IMPLEMENTED YET**\n * @property {Integer} $greater Match if item value is greater than this. **Alias: `>`** **NOT IMPLEMENTED YET**\n * @property {Integer} $greaterEqual Match if item value is greater than this or equals to this. **Alias: `>=`** **NOT IMPLEMENTED YET** \n * @property {QueryLanguage#SelectQueryOrCondition[]} $or Match if *one of* the conditions in the array is true. **Alias: `||`** **NOT IMPLEMENTED YET**\n * @property {QueryLanguage#SelectQueryOrCondition[]} $and Match if *all* the conditions in the array are true. Optional, because several conditions in a single SelectQueryCondition are combined with an `AND` operator. **Alias: `&&`** **NOT IMPLEMENTED YET**\n * @property {QueryLanguage#SelectQueryOrCondition[]} $xor Match if *a single* of the conditions in the array is true. **Alias: `^^`** **NOT IMPLEMENTED YET**\n * @property {QueryLanguage#SelectQueryOrCondition} $not Invert the condition **Alias: `!`** **NOT IMPLEMENTED YET**\n * @property {String} $contains On *string*, it will check if query is included in item using GLOB. **NOT IMPLEMENTED YET**\n * @property {QueryLanguage#SelectQueryOrCondition|Any} $contains On *array*, it will check if item contains the query. **NOT IMPLEMENTED YET**\n * @property {Any[]} $in Check if item value is contained (using deep comparaison) in query. **NOT IMPLEMENTED YET**\n */\n\n/**\n * @typedef {QueryLanguage#SelectQuery|QueryLanguage#SelectQueryCondition} SelectQueryOrCondition\n * @memberof QueryLanguage\n * @public\n * @instance\n * @author gerkin\n */\n\n/**\n * @namespace Adapters\n */\n\n/**\n * @class DiasporaAdapter\n * @classdesc DiasporaAdapter is the base class of adapters. Adapters are components that are in charge to interact with data sources (files, databases, etc etc) with standardized methods. You should not use this class directly: extend this class and re-implement some methods to build an adapter. See the (upcoming) tutorial section.\n * @memberof Adapters\n * @public\n * @author gerkin\n * @param {DataStoreEntity} classEntity Class used to spawn source entities\n */\nclass DiasporaAdapter extends SequentialEvent {\n\tconstructor( classEntity ) {\n\t\tsuper();\n\t\tthis.remaps = {};\n\t\tthis.remapsInverted = {};\n\t\tthis.filters = {};\n\t\tthis.classEntity = classEntity;\n\t\tthis.on( 'ready', () => {\n\t\t\tthis.state = 'ready';\n\t\t}).on( 'error', err => {\n\t\t\tthis.state = 'error';\n\t\t\tthis.error = err;\n\t\t});\n\t}\n\n\tconfigureCollection( tableName, remaps, filters ) {\n\t\tthis.remaps[tableName] = remaps;\n\t\tthis.remapsInverted[tableName] = _.invert( remaps );\n\t\tthis.filters = filters || {};\n\t}\n\n\t// -----\n\t// ### Utils\n\n\tremapFields( tableName, query, invert = false ) {\n\t\tconst keysMap = ( invert ? this.remapsInverted : this.remaps )[tableName];\n\t\tif ( _.isNil( keysMap )) {\n\t\t\treturn query;\n\t\t}\n\t\treturn _.mapKeys( query, ( value, key ) => {\n\t\t\tif ( keysMap.hasOwnProperty( key )) {\n\t\t\t\treturn keysMap[key];\n\t\t\t}\n\t\t\treturn key;\n\t\t});\n\t}\n\n\t/**\n\t * @method waitReady\n\t * @description Returns a promise resolved once adapter state is ready\n\t * @memberof Adapters.DiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @returns {Promise} Promise resolved when adapter is ready, and rejected if an error occured\n\t */\n\twaitReady() {\n\t\treturn new Promise(( resolve, reject ) => {\n\t\t\tif ( 'ready' === this.state ) {\n\t\t\t\treturn resolve( this );\n\t\t\t} else if ( 'error' === this.state ) {\n\t\t\t\treturn reject( this.error );\n\t\t\t}\n\t\t\tthis.on( 'ready', () => {\n\t\t\t\treturn resolve( this );\n\t\t\t}).on( 'error', err => {\n\t\t\t\treturn reject( err );\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @method remapInput\n\t * @description TODO\n\t * @memberof Adapters.DiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @see TODO remapping\n\t * @param   {String} table  Name of the table for which we remap\n\t * @param   {Object} query Hash representing the entity to remap\n\t * @returns {Object} Remapped object\n\t */\n\tremapInput( table, query ) {\n\t\tif ( _.isNil( query )) {\n\t\t\treturn query;\n\t\t}\n\t\tconst filtered = _.mapValues( query, ( value, key ) => {\n\t\t\tif ( this.filters.input.hasOwnProperty( key )) {\n\t\t\t\treturn this.filters.input[key]( value );\n\t\t\t}\n\t\t\treturn value;\n\t\t});\n\t\tconst remaped = _.mapKeys( filtered, ( value, key ) => {\n\t\t\tif ( this.remaps.hasOwnProperty( key )) {\n\t\t\t\treturn this.remaps[key];\n\t\t\t}\n\t\t\treturn key;\n\t\t});\n\t\treturn remaped;\n\t}\n\n\t/**\n\t * @method remapOutput\n\t * @description TODO\n\t * @memberof Adapters.DiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @see TODO remapping\n\t * @param   {String} table  Name of the table for which we remap\n\t * @param   {Object} query Hash representing the entity to remap\n\t * @returns {Object} Remapped object\n\t */\n\tremapOutput( table, query ) {\n\t\tif ( _.isNil( query )) {\n\t\t\treturn query;\n\t\t}\n\t\tconst filtered = _.mapValues( query, ( value, key ) => {\n\t\t\tif ( this.filters.output.hasOwnProperty( key )) {\n\t\t\t\treturn this.filters.output[key]( value );\n\t\t\t}\n\t\t\treturn value;\n\t\t});\n\t\tconst remaped = _.mapKeys( filtered, ( value, key ) => {\n\t\t\tif ( this.remapsInverted.hasOwnProperty( key )) {\n\t\t\t\treturn this.remapsInverted[key];\n\t\t\t}\n\t\t\treturn key;\n\t\t});\n\t\treturn remaped;\n\t}\n\n\t/**\n\t * Refresh the `idHash` with current adapter's `id` injected\n\t * @param   {Object}   entity          Object containing attributes of the entity\n\t * @param   {String} propName = 'id' Name of the `id` field\n\t * @returns {Object} Modified entity (for chaining)\n\t */\n\tsetIdHash( entity, propName = 'id' ) {\n\t\tentity.idHash = _.assign({}, entity.idHash, {\n\t\t\t[this.name]: entity[propName],\n\t\t});\n\t\treturn entity;\n\t}\n\n\t/**\n\t * Check if provided `entity` is matched by the query. Query must be in its canonical form before using this function\n\t * @param   {QueryLanguage.SelectQuery} query  Query to match against\n\t * @param   {Object} entity Entity to test\n\t * @returns {Boolean}  `true` if query matches, `false` otherwise\n\t */\n\tmatchEntity( query, entity ) {\n\t\tconst matchResult = _.every( _.toPairs( query ), ([ key, desc ]) => {\n\t\t\tif ( _.isObject( desc )) {\n\t\t\t\tconst entityVal = entity[key];\n\t\t\t\treturn _.every( desc, ( val, operation ) => {\n\t\t\t\t\tswitch ( operation ) {\n\t\t\t\t\t\tcase '$exists': {\n\t\t\t\t\t\t\treturn val === !_.isUndefined( entityVal );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase '$equal': {\n\t\t\t\t\t\t\treturn !_.isUndefined( entityVal ) && entityVal === val;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase '$diff': {\n\t\t\t\t\t\t\treturn !_.isUndefined( entityVal ) && entityVal !== val;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase '$less': {\n\t\t\t\t\t\t\treturn !_.isUndefined( entityVal ) && entityVal < val;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase '$lessEqual': {\n\t\t\t\t\t\t\treturn !_.isUndefined( entityVal ) && entityVal <= val;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase '$greater': {\n\t\t\t\t\t\t\treturn !_.isUndefined( entityVal ) && entityVal > val;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase '$greaterEqual': {\n\t\t\t\t\t\t\treturn !_.isUndefined( entityVal ) && entityVal >= val;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t\treturn matchResult;\n\t}\n\n\tapplyUpdateEntity( update, entity ) {\n\t\t_.forEach( update, ( val, key ) => {\n\t\t\tif ( _.isUndefined( val )) {\n\t\t\t\tdelete entity[key];\n\t\t\t} else {\n\t\t\t\tentity[key] = val;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @method normalizeOptions\n\t * @description Transform options to their canonical form. This function must be applied before calling adapters' methods\n\t * @throws {TypeError} Thrown if an option does not have an acceptable type\n\t * @throws {ReferenceError} Thrown if a required option is not present\n\t * @throws {Error} Thrown when there isn't more precise description of the error is available (eg. when conflicts occurs) \n\t * @param   {Object}   [opts={}] Options to transform\n\t * @returns {Object} Transformed options (also called `canonical options`)\n\t */\n\tnormalizeOptions( opts = {}) {\n\t\topts = _.cloneDeep( opts );\n\t\tif ( opts.hasOwnProperty( 'limit' )) {\n\t\t\tlet limitOpt = opts.limit;\n\t\t\tif ( _.isString( limitOpt )) {\n\t\t\t\tlimitOpt = parseInt( limitOpt );\n\t\t\t}\n\t\t\tif ( !( _.isInteger( limitOpt ) || Infinity === limitOpt ) || limitOpt < 0 ) {\n\t\t\t\tthrow new TypeError( `Expect \"options.limit\" to be an integer equal to or above 0, have ${ limitOpt }` );\n\t\t\t}\n\t\t\topts.limit = limitOpt;\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'skip' )) {\n\t\t\tlet skipOpt = opts.skip;\n\t\t\tif ( _.isString( skipOpt )) {\n\t\t\t\tskipOpt = parseInt( skipOpt );\n\t\t\t}\n\t\t\tif ( !_.isInteger( skipOpt ) || skipOpt < 0 || !isFinite( skipOpt )) {\n\t\t\t\tthrow new TypeError( `Expect \"options.skip\" to be a finite integer equal to or above 0, have ${ skipOpt }` );\n\t\t\t}\n\t\t\topts.skip = skipOpt;\n\t\t}\n\t\tif ( opts.hasOwnProperty( 'page' )) {\n\t\t\tif ( !opts.hasOwnProperty( 'limit' )) {\n\t\t\t\tthrow new ReferenceError( 'Usage of \"options.page\" requires \"options.limit\" to be defined.' );\n\t\t\t}\n\t\t\tif ( !isFinite( opts.limit )) {\n\t\t\t\tthrow new ReferenceError( 'Usage of \"options.page\" requires \"options.limit\" to not be infinite' );\n\t\t\t}\n\t\t\tif ( opts.hasOwnProperty( 'skip' )) {\n\t\t\t\tthrow new Error( 'Use either \"options.page\" or \"options.skip\"' );\n\t\t\t}\n\t\t\tlet pageOpt = opts.page;\n\t\t\tif ( _.isString( pageOpt )) {\n\t\t\t\tpageOpt = parseInt( pageOpt );\n\t\t\t}\n\t\t\tif ( !_.isInteger( pageOpt ) || pageOpt < 0 ) {\n\t\t\t\tthrow new TypeError( `Expect \"options.page\" to be an integer equal to or above 0, have ${ pageOpt }` );\n\t\t\t}\n\t\t\topts.skip = pageOpt * opts.limit;\n\t\t\tdelete opts.page;\n\t\t}\n\t\t_.defaults( opts, {\n\t\t\tskip:        0,\n\t\t\tremapInput:  true,\n\t\t\tremapOutput: true,\n\t\t});\n\t\treturn opts;\n\t}\n\n\tnormalizeQuery( originalQuery, options ) {\n\t\tconst canonicalOperations = {\n\t\t\t'~':  '$exists',\n\t\t\t'==': '$equal',\n\t\t\t'!=': '$diff',\n\t\t\t'<':  '$less',\n\t\t\t'<=': '$lessEqual',\n\t\t\t'>':  '$greater',\n\t\t\t'>=': '$greaterEqual',\n\t\t};\n\t\tconst normalizedQuery = true === options.remapInput ? _( _.cloneDeep( originalQuery )).mapValues(( attrSearch, attrName ) => {\n\t\t\tif ( !( !_.isNil( attrSearch ) && attrSearch instanceof Object )) {\n\t\t\t\tif ( !_.isNil( attrSearch )) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t$equal: attrSearch,\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t$exists: false,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Replace operations alias by canonical expressions\n\t\t\t\t_.forEach( canonicalOperations, ( canon, alias ) => {\n\t\t\t\t\t// If the currently checked alias is in the search hash...\n\t\t\t\t\tif ( attrSearch.hasOwnProperty( alias )) {\n\t\t\t\t\t\t// ... check for conflict with canonical operation name...\n\t\t\t\t\t\tif ( attrSearch.hasOwnProperty( canon )) {\n\t\t\t\t\t\t\tthrow new Error( `Search can't have both \"${ alias }\" and \"${ canon }\" keys, as they are synonyms` );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// ... and replace alias by canonical\n\t\t\t\t\t\t\tattrSearch[canon] = attrSearch[alias];\n\t\t\t\t\t\t\tdelete attrSearch[alias];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// For arithmetic comparison, check if values are numeric (TODO later: support date)\n\t\t\t\t_.forEach([ '$less', '$lessEqual', '$greater', '$greaterEqual' ], operation => {\n\t\t\t\t\tif ( attrSearch.hasOwnProperty( operation ) && !_.isNumber( attrSearch[operation])) {\n\t\t\t\t\t\tthrow new TypeError( `Expect \"${ operation }\" in ${ JSON.stringify( attrSearch ) } to be a numeric value` );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn attrSearch;\n\t\t\t}\n\t\t}).value() : _.cloneDeep( originalQuery );\n\t\treturn normalizedQuery;\n\t}\n\n\t// -----\n\t// ### Insert\n\n\t/**\n\t * @method insertOne\n\t * @summary At least one of {@link insertOne} or {@link insertMany} must be reimplemented by adapter\n\t * @description Insert a single entity in the data store. This function is a default polyfill if the inheriting adapter does not provide `insertOne` itself\n\t * @memberof Adapters.DiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to insert data in\n\t * @param   {Object} entity Hash representing the entity to insert\n\t * @returns {Promise} Promise resolved once insertion is done. Called with (*{@link DataStoreEntity}* entity)\n\t */\n\tinsertOne( table, entity ) {\n\t\treturn this.insertMany( table, [ entity ]).then( entities => Promise.resolve( _.first( entities )));\n\t}\n\n\t/**\n\t * @method insertMany\n\t * @summary At least one of {@link insertOne} or {@link insertMany} must be reimplemented by adapter\n\t * @description Insert several entities in the data store. This function is a default polyfill if the inheriting adapter does not provide `insertMany` itself\n\t * @memberof Adapters.DiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to insert data in\n\t * @param   {Object[]} entities Array of hashs representing the entities to insert\n\t * @returns {Promise} Promise resolved once insertion is done. Called with (*{@link DataStoreEntity}[]* entities)\n\t */\n\tinsertMany( table, entities ) {\n\t\treturn Promise.mapSeries( entities, entity => this.insertOne( table, entity || {}));\n\t}\n\n\t// -----\n\t// ### Find\n\n\t/**\n\t * @method findOne\n\t * @summary At least one of {@link findOne} or {@link findMany} must be reimplemented by adapter\n\t * @description Retrieve a single entity from the data store. This function is a default polyfill if the inheriting adapter does not provide `findOne` itself\n\t * @memberof Adapters.DiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to retrieve data from\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing the entity to find\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link DataStoreEntity}* `entity`)\n\t */\n\tfindOne( table, queryFind, options = {}) {\n\t\toptions.limit = 1;\n\t\treturn this.findMany( table, queryFind, options ).then( entities => Promise.resolve( _.first( entities )));\n\t}\n\n\t/**\n\t * @method findMany\n\t * @summary At least one of {@link findOne} or {@link findMany} must be reimplemented by adapter\n\t * @description Retrieve several entities from the data store. This function is a default polyfill if the inheriting adapter does not provide `findMany` itself\n\t * @memberof Adapters.DiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to retrieve data from\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing entities to find\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link DataStoreEntity}[]* `entities`)\n\t */\n\tfindMany( table, queryFind, options = {}) {\n\t\tconst foundEntities = [];\n\t\toptions = this.normalizeOptions( options );\n\t\tlet foundCount = 0;\n\t\tlet origSkip = options.skip;\n\n\t\t// We are going to loop until we find enough items\n\t\tconst loopFind = found => {\n\t\t\t// If the search returned nothing, then just finish the findMany\n\t\t\tif ( _.isNil( found )) {\n\t\t\t\treturn Promise.resolve( foundEntities );\n\t\t\t\t// Else, if this is a value and not the initial `true`, add it to the list\n\t\t\t} else if ( found !== true ) {\n\t\t\t\tfoundEntities.push( found );\n\t\t\t}\n\t\t\t// If we found enough items, return them\n\t\t\tif ( foundCount === options.limit ) {\n\t\t\t\treturn Promise.resolve( foundEntities );\n\t\t\t}\n\t\t\toptions.skip = origSkip + foundCount;\n\t\t\t// Next time we'll skip 1 more item\n\t\t\tfoundCount++;\n\t\t\t// Do the query & loop\n\t\t\treturn this.findOne( table, queryFind, options ).then( loopFind );\n\t\t};\n\t\treturn loopFind( true );\n\t}\n\n\t// -----\n\t// ### Update\n\n\t/**\n\t * @method updateOne\n\t * @summary At least one of {@link updateOne} or {@link updateMany} must be reimplemented by adapter\n\t * @description Update a single entity from the data store. This function is a default polyfill if the inheriting adapter does not provide `updateOne` itself\n\t * @memberof Adapters.DiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to retrieve data from\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing the entity to find\n\t * @param   {Object} update Object properties to set\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link DataStoreEntity}* `entity`)\n\t */\n\tupdateOne( table, queryFind, update, options = {}) {\n\t\toptions.limit = 1;\n\t\treturn this.updateMany( table, queryFind, update, options ).then( entities => Promise.resolve( _.first( entities )));\n\t}\n\n\t/**\n\t * @method updateMany\n\t * @summary At least one of {@link updateOne} or {@link updateMany} must be reimplemented by adapter\n\t * @description Update several entities from the data store. This function is a default polyfill if the inheriting adapter does not provide `updateMany` itself\n\t * @memberof Adapters.DiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to retrieve data from\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing entities to find\n\t * @param   {Object} update Object properties to set\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link DataStoreEntity}[]* `entities`)\n\t */\n\tupdateMany( table, queryFind, update, options = {}) {\n\t\tconst foundEntities = [];\n\t\tlet skip = 0;\n\n\t\t// We are going to loop until we find enough items\n\t\tconst loopFind = found => {\n\t\t\t// If the search returned nothing, then just finish the findMany\n\t\t\tif ( _.isNil( found )) {\n\t\t\t\treturn Promise.resolve( foundEntities );\n\t\t\t\t// Else, if this is a value and not the initial `true`, add it to the list\n\t\t\t} else if ( found !== true ) {\n\t\t\t\tfoundEntities.push( found );\n\t\t\t}\n\t\t\t// If we found enough items, return them\n\t\t\tif ( skip === options.limit ) {\n\t\t\t\treturn Promise.resolve( foundEntities );\n\t\t\t}\n\t\t\toptions.skip = skip;\n\t\t\t// Next time we'll skip 1 more item\n\t\t\tskip++;\n\t\t\t// Do the query & loop\n\t\t\treturn this.updateOne( table, queryFind, update, options ).then( loopFind );\n\t\t};\n\t\treturn loopFind( true );\n\t}\n\n\t// -----\n\t// ### Delete\n\n\t/**\n\t * @method deleteOne\n\t * @summary At least one of {@link deleteOne} or {@link deleteMany} must be reimplemented by adapter\n\t * @description Update a single entity from the data store. This function is a default polyfill if the inheriting adapter does not provide `deleteOne` itself\n\t * @memberof Adapters.DiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to delete data from\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing the entities to find\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link DataStoreEntity}* `entity`)\n\t */\n\tdeleteOne( table, queryFind, options = {}) {\n\t\toptions.limit = 1;\n\t\treturn this.deleteMany( table, queryFind, options );\n\t}\n\n\t/**\n\t * @method deleteMany\n\t * @summary At least one of {@link deleteOne} or {@link deleteMany} must be reimplemented by adapter\n\t * @description Update several entities from the data store. This function is a default polyfill if the inheriting adapter does not provide `deleteMany` itself\n\t * @memberof Adapters.DiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to delete data from\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing the entities to find\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link DataStoreEntity}[]* `entities`)\n\t */\n\tdeleteMany( table, queryFind, options = {}) {\n\t\tlet count = 0;\n\n\t\t// We are going to loop until we find enough items\n\t\tconst loopFind = () => {\n\t\t\t// First, search for the item.\n\t\t\treturn this.findOne( table, queryFind, options ).then( found => {\n\t\t\t\t// If the search returned nothing, then just finish the findMany\n\t\t\t\tif ( _.isNil( found )) {\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t// Else, if this is a value and not the initial `true`, add it to the list\n\t\t\t\t}\n\t\t\t\t// If we found enough items, return them\n\t\t\t\tif ( count === options.limit ) {\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t}\n\t\t\t\t// Increase our counter\n\t\t\t\tcount++;\n\t\t\t\t// Do the deletion & loop\n\t\t\t\treturn this.deleteOne( table, queryFind, options ).then( loopFind );\n\t\t\t});\n\t\t};\n\t\treturn loopFind( true );\n\t}\n}\n\nmodule.exports = DiasporaAdapter;\n\n},{\"bluebird\":\"bluebird\",\"lodash\":\"lodash\",\"sequential-event\":\"sequential-event\"}],3:[function(require,module,exports){\n'use strict';\n\nconst _ = require( 'lodash' );\nconst Promise = require( 'bluebird' );\nconst DiasporaAdapter = require( './baseAdapter.js' );\nconst InMemoryEntity = require( '../dataStoreEntities/inMemoryEntity.js' );\n\n/**\n * @class InMemoryDiasporaAdapter\n * @classdesc This class is used to use the memory as a data store. Every data you insert are stored in an array contained by this class. This adapter can be used by both the browser & Node.JS\n * @extends Adapters.DiasporaAdapter\n * @description Create a new In Memory data store\n * @memberof Adapters\n * @public\n * @author gerkin\n * @param {Object} [config] Options hash. Currently, this adapter does not have any options\n */\nclass InMemoryDiasporaAdapter extends DiasporaAdapter {\n\tconstructor( config ) {\n\t\tsuper( InMemoryEntity );\n\t\tthis.state = 'ready';\n\t\tthis.store = {};\n\t}\n\t\n\tconfigureCollection( name, remap ) {\n\t\tsuper.configureCollection( name, remap );\n\t\tthis.ensureCollectionExists( name );\n\t}\n\n\t// -----\n\t// ### Utils\n\n\t/**\n\t * @method generateUUID\n\t * @description Create a new unique id for this store's entity\n\t * @memberof Adapters.InMemoryDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @returns {String} Generated unique id\n\t */\n\tgenerateUUID() {\n\t\tvar d = new Date().getTime();\n\t\t// Use high-precision timer if available\n\t\tif ( 'undefined' !== typeof window && window.performance && 'function' === typeof window.performance.now ) {\n\t\t\td += performance.now();\n\t\t}\n\t\tconst uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace( /[xy]/g, c => {\n\t\t\tconst r = ( d + Math.random() * 16 ) % 16 | 0;\n\t\t\td = Math.floor( d / 16 );\n\t\t\treturn ( 'x' === c ? r : ( r & 0x3 | 0x8 )).toString( 16 );\n\t\t});\n\t\treturn uuid;\n\t}\n\n\t/**\n\t * @method ensureCollectionExists\n\t * @description Get or create the store hash\n\t * @memberof Adapters.InMemoryDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table\n\t * @returns {DataStoreTable} In memory table to use\n\t */\n\tensureCollectionExists( table ) {\n\t\tif ( this.store.hasOwnProperty( table )) {\n\t\t\treturn this.store[table];\n\t\t} else {\n\t\t\treturn this.store[table] = {\n\t\t\t\titems: [],\n\t\t\t};\n\t\t} \n\t}\n\n\t/**\n\t * @method applyOptionsToSet\n\t * @description Reduce, offset or sort provided set\n\t * @memberof Adapters.InMemoryDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {Object[]} set  Objects retrieved from memory store\n\t * @param   {Object} options Options to apply to the set\n\t * @returns {Object[]} Set with options applied\n\t */\n\tstatic applyOptionsToSet( set, options ) {\n\t\t_.defaults( options, {\n\t\t\tlimit: Infinity,\n\t\t\tskip:  0,\n\t\t});\n\t\tset = set.slice( options.skip );\n\t\tif ( set.length > options.limit ) {\n\t\t\tset = set.slice( 0, options.limit );\n\t\t}\n\t\treturn set;\n\t}\n\n\t// -----\n\t// ### Insert\n\n\t/**\n\t * @method insertOne\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#insertOne}, modified for in-memory interactions.\n\t * @description Insert a single entity in the memory store.\n\t * @memberof Adapters.InMemoryDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to insert data in\n\t * @param   {Object} entity Hash representing the entity to insert\n\t * @returns {Promise} Promise resolved once insertion is done. Called with (*{@link InMemoryEntity}* `entity`)\n\t */\n\tinsertOne( table, entity ) {\n\t\tentity = _.cloneDeep( entity );\n\t\tconst storeTable = this.ensureCollectionExists( table );\n\t\tentity.id = this.generateUUID();\n\t\tthis.setIdHash( entity );\n\t\tstoreTable.items.push( entity );\n\t\treturn Promise.resolve( new this.classEntity( entity, this ));\n\t}\n\n\t// -----\n\t// ### Find\n\n\t/**\n\t * @method findOne\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#findOne}, modified for in-memory interactions.\n\t * @description Retrieve a single entity from the memory.\n\t * @memberof Adapters.InMemoryDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to retrieve data from\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing the entity to find\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link InMemoryEntity}* `entity`)\n\t */\n\tfindOne( table, queryFind, options = {}) {\n\t\tconst storeTable = this.ensureCollectionExists( table );\n\t\tconst matches = _.filter( storeTable.items, _.partial( this.matchEntity, queryFind ));\n\t\tconst reducedMatches = this.constructor.applyOptionsToSet( matches, options );\n\t\treturn Promise.resolve( reducedMatches.length > 0 ? new this.classEntity( _.first( reducedMatches ), this ) : undefined );\n\t}\n\n\t/**\n\t * @method findMany\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#findMany}, modified for in-memory interactions.\n\t * @description Retrieve several entities from the memory.\n\t * @memberof Adapters.InMemoryDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to retrieve data from\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing entities to find\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once items are found. Called with (*{@link InMemoryEntity}[]* `entities`)\n\t */\n\tfindMany( table, queryFind, options = {}) {\n\t\tconst storeTable = this.ensureCollectionExists( table );\n\t\tconst matches = _.filter( storeTable.items, _.partial( this.matchEntity, queryFind ));\n\t\tconst reducedMatches = this.constructor.applyOptionsToSet( matches, options );\n\t\treturn Promise.resolve( _.map( reducedMatches, entity => new this.classEntity( entity, this )));\n\t}\n\n\t// -----\n\t// ### Update\n\n\t/**\n\t * @method updateOne\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#updateOne}, modified for in-memory interactions.\n\t * @description Update a single entity in the memory.\n\t * @memberof Adapters.InMemoryDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to update data in\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing the entity to find\n\t * @param   {Object} update Object properties to set\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once update is done. Called with (*{@link InMemoryEntity}* `entity`)\n\t */\n\tupdateOne( table, queryFind, update, options = {}) {\n\t\tconst storeTable = this.ensureCollectionExists( table );\n\t\tconst matches = _.filter( storeTable.items, _.partial( this.matchEntity, queryFind ));\n\t\tconst firstMatch = _.first( matches );\n\t\tthis.applyUpdateEntity( update, firstMatch );\n\t\treturn Promise.resolve( new this.classEntity( firstMatch ));\n\t}\n\n\t/**\n\t * @method updateMany\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#updateMany}, modified for in-memory interactions.\n\t * @description Update several entities in the memory.\n\t * @memberof Adapters.InMemoryDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to update data in\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing entities to find\n\t * @param   {Object} update Object properties to set\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once update is done. Called with (*{@link InMemoryEntity}[]* `entities`)\n\t */\n\tupdateMany( table, queryFind, update, options = {}) {\n\t\tconst storeTable = this.ensureCollectionExists( table );\n\t\tconst matches = _.filter( storeTable.items, _.partial( this.matchEntity, queryFind ));\n\t\tconst reducedMatches = this.constructor.applyOptionsToSet( matches, options );\n\t\t_.forEach( reducedMatches, match => {\n\t\t\tthis.applyUpdateEntity( update, match );\n\t\t});\n\t\treturn Promise.resolve( _.map( reducedMatches, entity => new this.classEntity( entity, this )));\n\t}\n\n\t// -----\n\t// ### Delete\n\n\t/**\n\t * @method deleteOne\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#deleteOne}, modified for in-memory interactions.\n\t * @description Delete a single entity from the memory.\n\t * @memberof Adapters.InMemoryDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to delete data from\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing the entity to find\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*undefined*)\n\t */\n\tdeleteOne( table, queryFind, options = {}) {\n\t\tconst storeTable = this.ensureCollectionExists( table );\n\t\treturn this.findOne( table, queryFind, options ).then( entityToDelete => {\n\t\t\tstoreTable.items = _.reject( storeTable.items, entity => entity.id === entityToDelete.idHash[this.name]);\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n\n\t/**\n\t * @method deleteMany\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#deleteMany}, modified for in-memory interactions.\n\t * @description Delete several entities from the memory.\n\t * @memberof Adapters.InMemoryDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to delete data from\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing entities to find\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once items are deleted. Called with (*undefined*)\n\t */\n\tdeleteMany( table, queryFind, options = {}) {\n\t\tconst storeTable = this.ensureCollectionExists( table );\n\t\treturn this.findMany( table, queryFind, options ).then( entitiesToDelete => {\n\t\t\tconst entitiesIds = _.map( entitiesToDelete, entity => _.get( entity, `idHash.${ this.name }` ));\n\t\t\tstoreTable.items = _.reject( storeTable.items, entity => {\n\t\t\t\treturn _.includes( entitiesIds, entity.id );\n\t\t\t});\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n}\n\nmodule.exports = InMemoryDiasporaAdapter;\n\n},{\"../dataStoreEntities/inMemoryEntity.js\":6,\"./baseAdapter.js\":2,\"bluebird\":\"bluebird\",\"lodash\":\"lodash\"}],4:[function(require,module,exports){\n'use strict';\n\nconst _ = require( 'lodash' );\nconst Promise = require( 'bluebird' );\nconst DiasporaAdapter = require( './baseAdapter.js' );\nconst LocalStorageEntity = require( '../dataStoreEntities/localStorageEntity.js' );\n\n/**\n * @class LocalStorageDiasporaAdapter\n * @classdesc This class is used to use local storage or session storage as a data store. This adapter should be used only by the browser\n * @extends Adapters.DiasporaAdapter\n * @description Create a new LocalStorage data store\n * @memberof Adapters\n * @public\n * @author gerkin\n * @param {Object} [config] Options hash.\n * @param {Boolean} config.session=false If `false`, data source will use local storage. If `true`, it will use session storage.\n */\nclass LocalStorageDiasporaAdapter extends DiasporaAdapter {\n\tconstructor( config ) {\n\t\tsuper( LocalStorageEntity );\n\t\t_.defaults( config, {\n\t\t\tsession: false,\n\t\t});\n\t\tthis.state = 'ready';\n\t\tthis.source = ( true === config.session ? sessionStorage : localStorage );\n\t}\n\n\tconfigureCollection( name, remap ) {\n\t\tsuper.configureCollection( name, remap );\n\t\tthis.ensureCollectionExists( name );\n\t}\n\n\t// -----\n\t// ### Utils\n\n\t/**\n\t * @method generateUUID\n\t * @description Create a new unique id for this store's entity\n\t * @memberof Adapters.LocalStorageDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @returns {String} Generated unique id\n\t */\n\tgenerateUUID() {\n\t\tvar d = new Date().getTime();\n\t\tif ( 'undefined' !== typeof window && window.performance && 'function' === typeof window.performance.now ) {\n\t\t\td += performance.now(); //use high-precision timer if available\n\t\t}\n\t\tconst uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace( /[xy]/g, c => {\n\t\t\tconst r = ( d + Math.random() * 16 ) % 16 | 0;\n\t\t\td = Math.floor( d / 16 );\n\t\t\treturn ( 'x' === c ? r : ( r & 0x3 | 0x8 )).toString( 16 );\n\t\t});\n\t\treturn uuid;\n\t}\n\n\t/**\n\t * @method ensureCollectionExists\n\t * @description Create the table key if it does not exist\n\t * @memberof Adapters.LocalStorageDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table\n\t */\n\tensureCollectionExists( table ) {\n\t\tlet index = this.source.getItem( table );\n\t\tif ( _.isNil( index )) {\n\t\t\tindex = [];\n\t\t\tthis.source.setItem( table, JSON.stringify( index ));\n\t\t} else {\n\t\t\tindex = JSON.parse( index );\n\t\t}\n\t\treturn index;\n\t}\n\n\t/**\n\t * @method applyOptionsToSet\n\t * @description Reduce, offset or sort provided set\n\t * @memberof Adapters.LocalStorageDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {Object[]} set  Objects retrieved from memory store\n\t * @param   {Object} options Options to apply to the set\n\t * @returns {Object[]} Set with options applied\n\t */\n\tstatic applyOptionsToSet( set, options ) {\n\t\tif ( options.hasOwnProperty( 'limit' )) {\n\t\t\tif ( _.isInteger( options.limit )) {\n\t\t\t\tset = set.slice( 0, options.limit );\n\t\t\t} else {\n\t\t\t\tModelExtension.log.warn( `Trying to apply a non-integer limit \"${ options.limit }\".` );\n\t\t\t}\n\t\t}\n\t\treturn set;\n\t}\n\n\t/**\n\t * @method getItemName\n\t * @description Deduce the item name from table name and item ID\n\t * @memberof Adapters.LocalStorageDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to construct name for\n\t * @param   {String} id Id of the item to find\n\t * @returns {String} Name of the item\n\t */\n\tgetItemName( table, id ) {\n\t\treturn `${ table }.id=${ id }`;\n\t}\n\n\t// -----\n\t// ### Insert\n\n\t/**\n\t * @method insertOne\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#insertOne}, modified for local storage or session storage interactions.\n\t * @description Insert a single entity in the local storage.\n\t * @memberof Adapters.LocalStorageDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to insert data in\n\t * @param   {Object} entity Hash representing the entity to insert\n\t * @returns {Promise} Promise resolved once insertion is done. Called with (*{@link LocalStorageEntity}* `entity`)\n\t */\n\tinsertOne( table, entity ) {\n\t\tentity = _.cloneDeep( entity || {});\n\t\tentity.id = this.generateUUID();\n\t\tthis.setIdHash( entity );\n\t\ttry {\n\t\t\tconst tableIndex = this.ensureCollectionExists( table );\n\t\t\ttableIndex.push( entity.id );\n\t\t\tthis.source.setItem( table, JSON.stringify( tableIndex ));\n\t\t\tthis.source.setItem( this.getItemName( table, entity.id ), JSON.stringify( entity ));\n\t\t} catch ( error ) {\n\t\t\treturn Promise.reject( error );\n\t\t}\n\t\treturn Promise.resolve( new this.classEntity( entity, this ));\n\t}\n\n\t/**\n\t * @method insertMany\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#insertMany}, modified for local storage or session storage interactions.\n\t * @description Insert several entities in the local storage.\n\t * @memberof Adapters.LocalStorageDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to insert data in\n\t * @param   {Object[]} entities Array of hashes representing entities to insert\n\t * @returns {Promise} Promise resolved once insertion is done. Called with (*{@link LocalStorageEntity[Ø]}* `entities`)\n\t */\n\tinsertMany( table, entities ) {\n\t\tentities = _.cloneDeep( entities );\n\t\ttry {\n\t\t\tconst tableIndex = this.ensureCollectionExists( table );\n\t\t\tentities = entities.map(( entity = {}, i ) => {\n\t\t\t\tentity.id = this.generateUUID();\n\t\t\t\tthis.setIdHash( entity );\n\t\t\t\ttableIndex.push( entity.id );\n\t\t\t\tthis.source.setItem( this.getItemName( table, entity.id ), JSON.stringify( entity ));\n\t\t\t\treturn new this.classEntity( entity, this );\n\t\t\t});\n\t\t\tthis.source.setItem( table, JSON.stringify( tableIndex ));\n\t\t} catch ( error ) {\n\t\t\treturn Promise.reject( error );\n\t\t}\n\t\treturn Promise.resolve( entities );\n\t}\n\n\t// -----\n\t// ### Find\n\n\tfindOneById( table, id ) {\n\t\tconst item = this.source.getItem( this.getItemName( table, id ));\n\t\tif ( !_.isNil( item )) {\n\t\t\treturn Promise.resolve( new this.classEntity( JSON.parse( item ), this ));\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @method findOne\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#findOne}, modified for local storage or session storage interactions.\n\t * @description Retrieve a single entity from the local storage.\n\t * @memberof Adapters.LocalStorageDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the model to retrieve data from\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing the entity to find\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once item is found. Called with (*{@link InMemoryEntity}* `entity`)\n\t */\n\tfindOne( table, queryFind, options = {}) {\n\t\t_.defaults( options, {\n\t\t\tskip: 0,\n\t\t});\n\t\tif ( !_.isObject( queryFind )) {\n\t\t\treturn this.findOneById( table, queryFind );\n\t\t} else if ( _.isEqual( _.keys( queryFind ), [ 'id' ]) && _.isEqual( _.keys( queryFind.id ), [ '$equal' ])) {\n\t\t\treturn this.findOneById( table, queryFind.id.$equal );\n\t\t}\n\t\tconst items = this.ensureCollectionExists( table );\n\t\tlet returnedItem;\n\t\tlet matched = 0;\n\t\t_.each( items, itemId => {\n\t\t\tconst item = JSON.parse( this.source.getItem( this.getItemName( table, itemId )));\n\t\t\tif ( this.matchEntity( queryFind, item )) {\n\t\t\t\tmatched++;\n\t\t\t\t// If we matched enough items\n\t\t\t\tif ( matched > options.skip ) {\n\t\t\t\t\treturnedItem = item;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn Promise.resolve( !_.isNil( returnedItem ) ? new this.classEntity( returnedItem, this ) : undefined );\n\t}\n\n\n\t/*\tfindMany( table, queryFind, options = {}) {\n\t\tthis.ensureCollectionExists( table );\n\t\tconst matches = _.filter( storeTable.items, queryFind );\n\t\tconst reducedMatches = this.constructor.applyOptionsToSet( matches, options );\n\t\treturn Promise.resolve( _.map( reducedMatches, entity => new this.classEntity(entity, this )));\n\t}*/\n\n\t// -----\n\t// ### Update\n\n\t/**\n\t * @method updateOne\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#updateOne}, modified for local storage or session storage interactions.\n\t * @description Update a single entity in the memory.\n\t * @memberof Adapters.LocalStorageDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to update data in\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing the entity to find\n\t * @param   {Object} update Object properties to set\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once update is done. Called with (*{@link LocalStorageEntity}* `entity`)\n\t */\n\tupdateOne( table, queryFind, update, options ) {\n\t\t_.defaults( options, {\n\t\t\tskip: 0,\n\t\t});\n\t\treturn this.findOne( table, queryFind, options ).then( entity => {\n\t\t\tif ( _.isNil( entity )) {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t\tthis.applyUpdateEntity( update, entity );\n\t\t\ttry {\n\t\t\t\tthis.source.setItem( this.getItemName( table, entity.id ), JSON.stringify( entity ));\n\t\t\t\treturn Promise.resolve( entity );\n\t\t\t} catch ( error ) {\n\t\t\t\treturn Promise.reject( error );\n\t\t\t}\n\t\t});\n\t}\n\n\t/* updateMany( table, queryFind, update, options ) {\n\t\tthis.ensureCollectionExists( table );\n\t\tconst matches = _.filter( storeTable.items, queryFind );\n\t\tconst reducedMatches = this.constructor.applyOptionsToSet( matches, options );\n\t\t_.forEach( reducedMatches, match => {\n\t\t\t_.assign( match, update );\n\t\t});\n\t\treturn Promise.resolve( _.map( reducedMatches, entity => new this.classEntity(entity, this )));\n\t}*/\n\n\t// -----\n\t// ### Delete\n\n\t/**\n\t * @method deleteOne\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#deleteOne}, modified for local storage or session storage interactions.\n\t * @description Delete a single entity from the local storage.\n\t * @memberof Adapters.LocalStorageDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to delete data from\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing the entity to find\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once item is deleted. Called with (*undefined*)\n\t */\n\tdeleteOne( table, queryFind, options = {}) {\n\t\treturn this.findOne( table, queryFind, options ).then( entityToDelete => {\n\t\t\ttry {\n\t\t\t\tconst tableIndex = this.ensureCollectionExists( table );\n\t\t\t\t_.pull( tableIndex, entityToDelete.id );\n\t\t\t\tthis.source.setItem( table, JSON.stringify( tableIndex ));\n\t\t\t\tthis.source.removeItem( this.getItemName( table, entityToDelete.id ));\n\t\t\t} catch ( error ) {\n\t\t\t\treturn Promise.reject( error );\n\t\t\t}\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n\n\t/**\n\t * @method deleteMany\n\t * @summary This reimplements {@link Adapters.DiasporaAdapter#deleteMany}, modified for local storage or session storage interactions.\n\t * @description Delete several entities from the local storage.\n\t * @memberof Adapters.LocalStorageDiasporaAdapter\n\t * @public\n\t * @instance\n\t * @author gerkin\n\t * @param   {String} table  Name of the table to delete data from\n\t * @param   {SelectQueryOrCondition} queryFind Hash representing entities to find\n\t * @param   {QueryOptions} [options={}] Hash of options.\n\t * @returns {Promise} Promise resolved once items are deleted. Called with (*undefined*)\n\t */\n\tdeleteMany( table, queryFind, options = {}) {\n\t\ttry {\n\t\t\treturn this.findMany( table, queryFind, options ).then( entitiesToDelete => {\n\t\t\t\tconst tableIndex = this.ensureCollectionExists( table );\n\t\t\t\t_.pullAll( tableIndex, _.map( entitiesToDelete, 'id' ));\n\t\t\t\tthis.source.setItem( table, JSON.stringify( tableIndex ));\n\t\t\t\t_.forEach( entitiesToDelete, entityToDelete => {\n\t\t\t\t\tthis.source.removeItem( this.getItemName( table, entityToDelete.id ));\n\t\t\t\t});\n\t\t\t\treturn Promise.resolve();\n\t\t\t});\n\t\t} catch ( error ) {\n\t\t\treturn Promise.reject( error );\n\t\t}\n\t}\n}\n\nmodule.exports = LocalStorageDiasporaAdapter;\n\n},{\"../dataStoreEntities/localStorageEntity.js\":7,\"./baseAdapter.js\":2,\"bluebird\":\"bluebird\",\"lodash\":\"lodash\"}],5:[function(require,module,exports){\n'use strict';\n\nconst _ = require( 'lodash' );\n\n/**\n * @namespace DataStoreEntities\n */\n\n/**\n * @class DataStoreEntity\n * @classdesc DataStoreEntity is the sub-entity reflecting a single source content. Values may differ from the Entity itself\n * @memberof DataStoreEntities\n * @public\n * @author gerkin\n * @param {Object} source Hash containing properties to copy in this entity\n */\nclass DataStoreEntity {\n\tconstructor( entity, dataSource ) {\n\t\tif ( _.isNil( entity )) {\n\t\t\treturn undefined;\n\t\t}\n\t\tObject.defineProperties( this, {\n\t\t\tdataSource: {\n\t\t\t\tvalue:        dataSource,\n\t\t\t\tenumerable:   false,\n\t\t\t\tconfigurable: false,\n\t\t\t},\n\t\t});\n\t\t_.assign( this, entity );\n\t}\n\ttoObject() {\n\t\treturn _.omit( this, [ 'dataSource', 'id' ]);\n\t}\n}\n\nmodule.exports = DataStoreEntity;\n\n},{\"lodash\":\"lodash\"}],6:[function(require,module,exports){\n'use strict';\n\nconst DataStoreEntity = require( './baseEntity.js' );\n\n/**\n * @class InMemoryEntity\n * @classdesc Entity stored in {@link InMemoryDiasporaAdapter the in-memory adapter}.\n * @extends DataStoreEntity\n * @memberof DataStoreEntities\n * @public\n * @author gerkin\n * @param {Object} source Hash containing properties to copy in this entity\n */\nclass InMemoryEntity extends DataStoreEntity {\n\tconstructor( entity, dataSource ) {\n\t\tsuper( entity, dataSource );\n\t}\n}\n\nmodule.exports = InMemoryEntity;\n\n},{\"./baseEntity.js\":5}],7:[function(require,module,exports){\n'use strict';\n\nconst DataStoreEntity = require( './baseEntity.js' );\n\n/**\n * @class LocalStorageEntity\n * @classdesc Entity stored in {@link LocalStorageDiasporaAdapter the local storage adapter}.\n * @extends DataStoreEntity\n * @memberof DataStoreEntities\n * @public\n * @author gerkin\n * @param {Object} source Hash containing properties to copy in this entity\n */\nclass LocalStorageEntity extends DataStoreEntity {\n\tconstructor( entity, dataSource ) {\n\t\tsuper( entity, dataSource );\n\t}\n}\n\nmodule.exports = LocalStorageEntity;\n\n},{\"./baseEntity.js\":5}],8:[function(require,module,exports){\n'use strict';\n\nconst _ = require( 'lodash' );\nconst Promise = require( 'bluebird' );\nconst SequentialEvent = require( 'sequential-event' );\nconst DiasporaAdapter = require( './adapters/baseAdapter.js' );\n\nconst adapters = {\n\t'in-memory':    require( './adapters/inMemoryAdapter' ),\n\t'localstorage': require( './adapters/localStorageAdapter' ),\n};\nconst dataSources = {};\nconst models = {};\n\n/**\n * @function cloneKeysAdd\n * @description Clone keys array and add the provided value\n * @memberof Diaspora\n * @private\n * @inner\n * @author gerkin\n * @param   {String[]}\tkeys\tArray of keys to this point.\n * @param   {String}\tnewKey\tNew key value.\n * @returns {String[]} Clone of `keys` with `newKey` added at the end\n */\nfunction cloneKeysAdd( keys, newKey ) {\n\tconst newKeys = _.clone( keys );\n\tnewKeys.push( newKey );\n\treturn newKeys;\n}\n\nconst wrapDataSourceAction = ( callback, queryType, adapter ) => {\n\treturn ( table, ...args ) => {\n\t\t// Filter our results\n\t\tconst filterResults = entity => {\n\t\t\t// Remap fields\n\t\t\tentity = adapter.remapFields( table, entity, true );\n\t\t\t// Force results to be class instances\n\t\t\tif ( !( entity instanceof adapter.classEntity ) && !_.isNil( entity )) {\n\t\t\t\treturn new adapter.classEntity( entity, adapter );\n\t\t\t}\n\t\t\treturn entity;\n\t\t};\n\n\t\t// Transform arguments for find, update & delete\n\t\tlet optIndex = false;\n\t\tlet upd = false;\n\t\tif ([ 'find', 'delete' ].indexOf( queryType.query ) >= 0 ) {\n\t\t\t// For find & delete, options are 3rd argument (so 2nd item in `args`)\n\t\t\toptIndex = 1;\n\t\t} else if ( 'update' === queryType.query ) {\n\t\t\t// For update, options are 4th argument (so 3nd item in `args`), and `upd` flag is toggled on.\n\t\t\toptIndex = 2;\n\t\t\tupd = true;\n\t\t}\n\t\ttry {\n\t\t\t//console.log('Before query transformed', args[0]);\n\t\t\tif ( false !== optIndex ) {\n\t\t\t\t// Options to canonical\n\t\t\t\targs[optIndex] = adapter.normalizeOptions( args[optIndex]);\n\t\t\t\t// Query search to cannonical\n\t\t\t\tif ( true === args[optIndex].remapInput ) {\n\t\t\t\t\targs[0] = adapter.remapFields( table, args[0], false );\n\n\t\t\t\t\tif ( true === upd ) {\n\t\t\t\t\t\targs[1] = adapter.remapFields( table, args[1], false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\targs[0] = adapter.normalizeQuery( args[0], args[optIndex]);\n\t\t\t\targs[optIndex].remapInput = false;\n\t\t\t} else if ( 'insert' === queryType.query ) {\n\t\t\t\tif ( 'many' === queryType.number ) {\n\t\t\t\t\targs[0] = _.map( args[0], insertion => adapter.remapFields( table, insertion, false ));\n\t\t\t\t} else {\n\t\t\t\t\targs[0] = adapter.remapFields( table, args[0], false );\n\t\t\t\t}\n\t\t\t}\n\t\t\t//console.log('Query transformed:', args[0]);\n\t\t} catch ( err ) {\n\t\t\treturn Promise.reject( err );\n\t\t}\n\n\t\t// Hook after promise resolution\n\t\tconst queryPromise = callback.call( adapter, table, ...args );\n\t\treturn queryPromise.then( results => {\n\t\t\tif ( _.isArrayLike( results )) {\n\t\t\t\tresults = _.map( results, filterResults );\n\t\t\t} else if ( !_.isNil( results )) {\n\t\t\t\tresults = filterResults( results );\n\t\t\t}\n\t\t\treturn Promise.resolve( results );\n\t\t});\n\t};\n};\n/**\n * Diaspora main namespace\n * @namespace Diaspora\n * @public\n * @author gerkin\n */\nconst Diaspora = {\n\t/**\n\t * @function check\n\t * @description Check if the value matches the field description provided, thus verify if it is valid\n\t * @memberof Diaspora\n\t * @public\n\t * @author gerkin\n\t * @param   {Object} entity    Entity to check\n\t * @param   {module:ModelExtension.ModelPrototype} modelDesc Model description\n\t * @returns {Error[]} Array of errors\n\t */\n\tcheck( entity, modelDesc ) {\n\t\t// Apply method `checkField` on each field described\n\t\treturn _( modelDesc )\n\t\t\t.mapValues(( fieldDesc, field ) => this.checkField.call( this, entity[field], fieldDesc, [ field ]))\n\t\t\t.values()\n\t\t\t.flatten()\n\t\t\t.compact()\n\t\t\t.value();\n\t},\n\n\t/**\n\t * @function checkField\n\t * @description Check if the value matches the field description provided, thus verify if it is valid\n\t * @memberof Diaspora\n\t * @public\n\t * @author gerkin\n\t * @param {Any} value   Value to check\n\t * @param {module:ModelExtension.FieldDescriptor} fieldDesc Description of the field to check with\n\t * @param {String[]} keys Array of keys from highest ancestor to this property\n\t * @returns {Error[]} Array of errors\n\t */\n\tcheckField( value, fieldDesc, keys ) {\n\t\tif ( !_.isObject( fieldDesc )) {\n\t\t\treturn;\n\t\t}\n\t\t_.defaults( fieldDesc, {\n\t\t\trequired: false,\n\t\t});\n\n\t\tvar errors = [];\n\n\t\t// It the field has a `validate` property, try to use it\n\t\tif ( fieldDesc.validate ) {\n\t\t\tif ( !fieldDesc.validate.call( this, value, fieldDesc )) {\n\t\t\t\terrors.push( `${ keys.join( '.' ) } custom validation failed` );\n\t\t\t}\n\t\t}\n\n\t\t// Check the type and the required status\n\t\tif ( !_.isNil( fieldDesc.type ) && !_.isNil( fieldDesc.model )) {\n\t\t\terrors.push( `${ keys.join( '.' ) } spec can't have both a type and a model` );\n\t\t} else {\n\t\t\t// Apply the `required` modifier\n\t\t\tlet tester = c;\n\t\t\tif ( fieldDesc.required !== true ) {\n\t\t\t\ttester = c.maybe;\n\t\t\t}\n\t\t\tif ( !_.isNil( fieldDesc.model )) {\n\t\t\t\tlet model = false;\n\t\t\t\tif ( _.isString( fieldDesc.model )) {\n\t\t\t\t\t/*if ( _.has( collections, fieldDesc.model )) {\n\t\t\t\t\t\tmodel = collections[fieldDesc.model].model;\n\t\t\t\t\t} else {*/\n\t\t\t\t\terrors.push( `${ keys.join( '.' ) } spec \"model\" string does not match with any registered model` );\n\t\t\t\t\t//\t\t\t\t\t}\n\t\t\t\t\t//\t\t\t\t} else if ( c.instance( Backbone.RelationalModel, fieldDesc.model )) {\n\t\t\t\t\t//\t\t\t\t\tmodel = fieldDesc.model;\n\t\t\t\t} else {\n\t\t\t\t\terrors.push( `${ keys.join( '.' ) } spec \"model\" must be either a string or a Backbone.RelationalModel instance` );\n\t\t\t\t}\n\t\t\t\tif ( model ) {\n\t\t\t\t\tif ( !tester.instance( value, model )) {\n\t\t\t\t\t\terrors.push( `${ keys.join( '.' ) } expected to be a ${ model.modelName }` );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( _.isString( fieldDesc.type )) {\n\t\t\t\tswitch ( fieldDesc.type ) {\n\t\t\t\t\tcase 'string': {\n\t\t\t\t\t\tif ( !tester.string( value )) {\n\t\t\t\t\t\t\terrors.push( `${ keys.join( '.' ) } expected to be a ${ fieldDesc.type }` );\n\t\t\t\t\t\t}\n\t\t\t\t\t} break;\n\n\t\t\t\t\tcase 'integer': {\n\t\t\t\t\t\tif ( !tester.integer( value )) {\n\t\t\t\t\t\t\terrors.push( `${ keys.join( '.' ) } expected to be a ${ fieldDesc.type }` );\n\t\t\t\t\t\t}\n\t\t\t\t\t} break;\n\n\t\t\t\t\tcase 'float': {\n\t\t\t\t\t\tif ( !tester.number( value )) {\n\t\t\t\t\t\t\terrors.push( `${ keys.join( '.' ) } expected to be a ${ fieldDesc.type }` );\n\t\t\t\t\t\t}\n\t\t\t\t\t} break;\n\n\t\t\t\t\tcase 'date': {\n\t\t\t\t\t\tif ( !tester.date( value )) {\n\t\t\t\t\t\t\terrors.push( `${ keys.join( '.' ) } expected to be a ${ fieldDesc.type }` );\n\t\t\t\t\t\t}\n\t\t\t\t\t} break;\n\n\t\t\t\t\tcase 'object': {\n\t\t\t\t\t\tif ( !tester.object( value )) {\n\t\t\t\t\t\t\terrors.push( `${ keys.join( '.' ) } expected to be a ${ fieldDesc.type }` );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst deepTest = _.isObject(\n\t\t\t\t\t\t\t\tfieldDesc.attributes\n\t\t\t\t\t\t\t) ? _( value ).mapValues(\n\t\t\t\t\t\t\t\t\t( propVal, propName ) => this.checkField(\n\t\t\t\t\t\t\t\t\t\tpropVal,\n\t\t\t\t\t\t\t\t\t\tfieldDesc.attributes[propName],\n\t\t\t\t\t\t\t\t\t\tcloneKeysAdd( keys, propName )\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t).values().flatten().compact().value() : [];\n\t\t\t\t\t\t\tif ( deepTest.length !== 0 ) {\n\t\t\t\t\t\t\t\terrors = errors.concat( deepTest );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} break;\n\n\t\t\t\t\tcase 'array': {\n\t\t\t\t\t\tif ( !tester.array( value )) {\n\t\t\t\t\t\t\terrors.push( `${ keys.join( '.' ) } expected to be a ${ fieldDesc.type }` );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst deepTest = _.isObject(\n\t\t\t\t\t\t\t\tfieldDesc.of\n\t\t\t\t\t\t\t) ? _( value ).map(\n\t\t\t\t\t\t\t\t\t( propVal, propName ) => {\n\t\t\t\t\t\t\t\t\t\tif ( _.isArrayLike( fieldDesc.of )) {\n\t\t\t\t\t\t\t\t\t\t\tconst subErrors = _( fieldDesc.of ).map( desc => this.checkField( propVal, desc, cloneKeysAdd( keys, propName )));\n\t\t\t\t\t\t\t\t\t\t\tif ( !_.find( subErrors, v => 0 === v.length )) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn subErrors;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn this.checkField( propVal, fieldDesc.of, cloneKeysAdd( keys, propName ));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t).flatten().compact().value() : [];\n\t\t\t\t\t\t\tif ( deepTest.length !== 0 ) {\n\t\t\t\t\t\t\t\terrors = errors.concat( deepTest );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} break;\n\n\t\t\t\t\tcase 'any': {\n\t\t\t\t\t\tif ( !tester.assigned( value )) {\n\t\t\t\t\t\t\terrors.push( `${ keys.join( '.' ) } expected to be assigned with any type` );\n\t\t\t\t\t\t}\n\t\t\t\t\t} break;\n\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\terrors.push( `${ keys.join( '.' ) } requires to be unhandled type ${ fieldDesc.type }` );\n\t\t\t\t\t} break;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\terrors.push( `${ keys.join( '.' ) } spec \"type\" must be a string` );\n\t\t\t}\n\t\t}\n\t\tif ( !_.isNil( fieldDesc.enum )) {\n\t\t\tconst result = _.some( fieldDesc.enum, enumVal => {\n\t\t\t\tif ( c.instance( enumVal, RegExp )) {\n\t\t\t\t\treturn null !== enumVal.exec( value );\n\t\t\t\t} else {\n\t\t\t\t\treturn value === enumVal;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif ( false === result ) {\n\t\t\t\terrors.push( `${ keys.join( '.' ) } expected to have a value` );\n\t\t\t}\n\t\t}\n\t\treturn errors;\n\t},\n\n\t/**\n\t * @function default\n\t * @description Set default values if required\n\t * @memberof Diaspora\n\t * @public\n\t * @author gerkin\n\t * @param   {Object} entity    Entity to set defaults in\n\t * @param   {module:ModelExtension.ModelPrototype} modelDesc Model description\n\t * @returns {Object} Entity merged with default values\n\t */\n\tdefault( entity, modelDesc ) {\n\t\t// Apply method `defaultField` on each field described\n\t\treturn _.defaults(\n\t\t\tentity,\n\t\t\t_.mapValues(\n\t\t\t\tmodelDesc,\n\t\t\t\t( fieldDesc, field ) => this.defaultField(\n\t\t\t\t\tentity[field],\n\t\t\t\t\tfieldDesc\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t},\n\n\t/**\n\t * @function defaultField\n\t * @description Set the default on a single field according to its description\n\t * @memberof Diaspora\n\t * @public\n\t * @author gerkin\n\t * @param {Any} value   Value to default\n\t * @param {module:ModelExtension.FieldDescriptor} fieldDesc Description of the field to default\n\t * @returns {Any} Defaulted value\n\t */\n\tdefaultField( value, fieldDesc ) {\n\t\tlet out;\n\t\tif ( !_.isUndefined( value )) {\n\t\t\tout = value;\n\t\t} else {\n\t\t\tout = _.isFunction( fieldDesc.default ) ? fieldDesc.default() : fieldDesc.default;\n\t\t}\n\t\tif ( 'object' === fieldDesc.type && _.isObject( fieldDesc.attributes ) && _.keys( fieldDesc.attributes ).length > 0 && !_.isNil( out )) {\n\t\t\treturn this.default( out, fieldDesc.attributes );\n\t\t} else {\n\t\t\treturn out;\n\t\t}\n\t},\n\n\tcreateDataSource( adapter, config ) {\n\t\tif ( !adapters.hasOwnProperty( adapter )) {\n\t\t\tthrow new Error( `Unknown adapter \"${ adapter }\". Available currently are ${ Object.keys( adapters ).join( ', ' ) }` );\n\t\t}\n\t\tconst baseAdapter = new adapters[adapter]( config );\n\t\tconst newDataSource = new Proxy( baseAdapter, {\n\t\t\tget: function( target, key ) {\n\t\t\t\t// If this is an adapter action method, wrap it with filters. Our method keys are only string, not tags\n\t\t\t\tif ( _.isString( key )) {\n\t\t\t\t\tlet method;\n\t\t\t\t\tif ( method = key.match( /^(find|update|insert|delete)(Many|One)$/ )) {\n\t\t\t\t\t\tmethod[2] = method[2].toLowerCase();\n\t\t\t\t\t\tmethod = _.mapKeys( method.slice( 0, 3 ), ( val, key ) => {\n\t\t\t\t\t\t\treturn [ 'full', 'query', 'number' ][key];\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn wrapDataSourceAction( target[key], method, target );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn target[key];\n\t\t\t},\n\t\t});\n\t\treturn newDataSource;\n\t},\n\n\t/**\n\t * @method registerDataSource\n\t * @description Stores the data source with provided label\n\t * @memberof Diaspora\n\t * @public\n\t * @author gerkin\n\t * @throws {Error} Error is thrown if parameters are incorrect or the name is already used or `dataSource` is not an adapter.\n\t * @param {String}          moduleName Module declaring this datasource. Modules requiring the provided dataSource will be able to use this dataSource using the `name` provided\n\t * @param {String}          name       Name associated with this datasource\n\t * @param {DiasporaAdapter} dataSource Datasource itself\n\t */\n\tregisterDataSource( moduleName, name, dataSource ) {\n\t\tif ( !_.isString( moduleName ) && moduleName.length > 0 ) {\n\t\t\tthrow new Error( `Module name must be a non empty string, had \"${ moduleName }\"` );\n\t\t}\n\t\tif ( !_.isString( name ) && name.length > 0 ) {\n\t\t\tthrow new Error( `DataSource name must be a non empty string, had \"${ name }\"` );\n\t\t}\n\t\tif ( dataSources.hasOwnProperty( name )) {\n\t\t\tthrow new Error( `DataSource name already used, had \"${ name }\"` );\n\t\t}\n\t\tif ( !( dataSource instanceof DiasporaAdapter )) {\n\t\t\tthrow new Error( 'DataSource must be an instance inheriting \"DiasporaAdapter\"' );\n\t\t}\n\t\tdataSource.name = name;\n\t\t_.merge( dataSources, {\n\t\t\t[moduleName]: {\n\t\t\t\t[name]: dataSource,\n\t\t\t},\n\t\t});\n\t},\n\n\t/**\n\t * @method declareModel\n\t * @description Create a new Model with provided description\n\t * @memberof Diaspora\n\t * @public\n\t * @author gerkin\n\t * @throws {Error} Thrown if parameters are incorrect\n\t * @param {String} moduleName       Module declaring this datasource. Modules requiring the provided dataSource will be able to use this dataSource using the `name` provided\n\t * @param {String} name       Name associated with this datasource\n\t * @param {Object} modelDesc Description of the model to define\n\t */\n\tdeclareModel( moduleName, name, modelDesc ) {\n\t\tif ( !_.isString( moduleName ) && moduleName.length > 0 ) {\n\t\t\tthrow new Error( `Module name must be a non empty string, had \"${ moduleName }\"` );\n\t\t}\n\t\tif ( !_.isString( name ) && name.length > 0 ) {\n\t\t\tthrow new Error( `DataSource name must be a non empty string, had \"${ name }\"` );\n\t\t}\n\t\tif ( !_.isObject( modelDesc )) {\n\t\t\tthrow new Error( '\"modelDesc\" must be an object' );\n\t\t}\n\t\tconst model = new Model( moduleName, name, modelDesc );\n\t\t_.assign( models, {\n\t\t\t[moduleName]: {},\n\t\t});\n\t\tmodels[moduleName][name] = model;\n\t\treturn model;\n\t},\n\n\tmodels,\n\tdataSources,\n\tadapters,\n\tdependencies: {\n\t\tlodash:             _,\n\t\tbluebird:           Promise,\n\t\t'sequential-event': SequentialEvent,\n\t},\n};\n\nmodule.exports = Diaspora;\n\n// Load Model class after, so that Model requires Diaspora once it is declared\nconst Model = require( './model' );\n\n},{\"./adapters/baseAdapter.js\":2,\"./adapters/inMemoryAdapter\":3,\"./adapters/localStorageAdapter\":4,\"./model\":10,\"bluebird\":\"bluebird\",\"lodash\":\"lodash\",\"sequential-event\":\"sequential-event\"}],9:[function(require,module,exports){\n'use strict';\n\nconst _ = require( 'lodash' );\nconst Promise = require( 'bluebird' );\nconst Diaspora = require( './diaspora' );\nconst DataStoreEntity = require( './dataStoreEntities/baseEntity' );\n\nconst entityPrototype = {\n\tmodel: {\n\t\twritable:   false,\n\t\tenumerable: true, \n\t},\n\tdataSources: {\n\t\twritable:   false,\n\t\tenumerable: true, \n\t},\n\ttoObject: {\n\t\twritable:   false,\n\t\tenumerable: true, \n\t},\n\tpersist: {\n\t\twritable:   false,\n\t\tenumerable: true, \n\t},\n\tfetch: {\n\t\twritable:   false,\n\t\tenumerable: true, \n\t},\n\tdestroy: {\n\t\twritable:   false,\n\t\tenumerable: true, \n\t},\n\tgetState: {\n\t\twritable:   false,\n\t\tenumerable: true, \n\t},\n\tgetLastDataSource: {\n\t\twritable:   false,\n\t\tenumerable: true, \n\t},\n\tgetUidQuery: {\n\t\twritable:   false,\n\t\tenumerable: true, \n\t},\n\tgetTable: {\n\t\twritable:   false,\n\t\tenumerable: true, \n\t},\n};\nconst entityPrototypeProperties = _.keys( entityPrototype );\n\nfunction EntityFactory( name, modelAttrs, model ) {\n\tconst modelAttrsKeys = _.keys( modelAttrs );\n\n\t/**\n\t * @class Entity\n\t * @classdesc An entity is a document in the population of all your datas of the same type\n\t * @description Create a new entity\n\t * @public\n\t * @author gerkin\n\t * @param {Object} source Hash with properties to copy on the new object\n\t */\n\tfunction Entity( source = {}) {\n\t\t// Stores the object state\n\t\tlet state = 'orphan';\n\t\tlet lastDataSource = null;\n\t\tconst dataSources = Object.seal( _.mapValues( model.dataSources, () => undefined ));\n\n\t\tif ( source instanceof DataStoreEntity ) {\n\t\t\tstate = 'sync';\n\t\t\tlastDataSource = source.dataSource.name;\n\t\t\tdataSources[lastDataSource] = source;\n\t\t\tsource = _.omit( source.toObject(), [ 'id' ]);\n\t\t}\n\t\t// Check keys provided in source\n\t\tconst sourceKeys = _.keys( source );\n\t\t// Check if there is an intersection with reserved, and have differences with model attributes\n\t\tconst sourceUReserved = _.intersection( source, entityPrototypeProperties );\n\t\tif ( 0 !== sourceUReserved.length ) {\n\t\t\tthrow new Error( `Source has reserved keys: ${ JSON.stringify( sourceUReserved ) } in ${ JSON.stringify( source ) }` );\n\t\t}\n\t\tconst sourceDModel = _.difference( source, modelAttrsKeys );\n\t\tif ( 0 !== sourceDModel.length ) { // Later, add a criteria for schemaless models\n\t\t\tthrow new Error( `Source has unknown keys: ${ JSON.stringify( sourceDModel ) } in ${ JSON.stringify( source ) }` );\n\t\t}\n\t\t// Now we know that the source is valid. First, deeply clone to detach object values from entity\n\t\tlet attributes = _.cloneDeep( source );\n\t\t// Free the source\n\t\tsource = null;\n\t\t// Default model attributes with our model desc\n\t\tDiaspora.default( attributes, modelAttrs );\n\t\t// Define getters & setters\n\t\tconst entityDefined = Object.defineProperties( this, _.extend({\n\t\t\tmodel: {\n\t\t\t\tvalue: model, \n\t\t\t},\n\t\t\tdataSources: {\n\t\t\t\tvalue: dataSources, \n\t\t\t},\n\t\t\ttoObject: {\n\t\t\t\tvalue: function toObject() {\n\t\t\t\t\treturn _.omit( attributes, entityPrototypeProperties ); \n\t\t\t\t}, \n\t\t\t},\n\t\t\tpersist: {\n\t\t\t\tvalue: function persist( sourceName ) {\n\t\t\t\t\tconst dataSource = this.model.getDataSource( sourceName );\n\t\t\t\t\tlet promise;\n\t\t\t\t\t// Depending on state, we are going to perform a different operation\n\t\t\t\t\tif ( 'orphan' === state ) {\n\t\t\t\t\t\tpromise = dataSource.insertOne( this.getTable( sourceName ), this.toObject());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpromise = dataSource.updateOne( this.getTable( sourceName ), this.getUidQuery( dataSource ), this.toObject());\n\t\t\t\t\t}\n\t\t\t\t\tstate = 'syncing';\n\t\t\t\t\tlastDataSource = dataSource.name;\n\t\t\t\t\treturn promise.then( dataStoreEntity => {\n\t\t\t\t\t\tstate = 'sync';\n\t\t\t\t\t\tentityDefined.dataSources[dataSource.name] = dataStoreEntity;\n\t\t\t\t\t\tattributes = dataStoreEntity.toObject();\n\t\t\t\t\t\treturn Promise.resolve( this );\n\t\t\t\t\t});\n\t\t\t\t}, \n\t\t\t},\n\t\t\tfetch: {\n\t\t\t\tvalue: function fetch( sourceName ) {\n\t\t\t\t\tconst dataSource = this.model.getDataSource( sourceName );\n\t\t\t\t\tlet promise;\n\t\t\t\t\t// Depending on state, we are going to perform a different operation\n\t\t\t\t\tif ( 'orphan' === state ) {\n\t\t\t\t\t\tpromise = Promise.reject( 'Can\\'t fetch an orphan entity' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpromise = dataSource.findOne( this.getTable( sourceName ), this.getUidQuery( dataSource ));\n\t\t\t\t\t}\n\t\t\t\t\tstate = 'syncing';\n\t\t\t\t\tlastDataSource = dataSource.name;\n\t\t\t\t\treturn promise.then( dataStoreEntity => {\n\t\t\t\t\t\tstate = 'sync';\n\t\t\t\t\t\tentityDefined.dataSources[dataSource.name] = dataStoreEntity;\n\t\t\t\t\t\tattributes = dataStoreEntity.toObject();\n\t\t\t\t\t\treturn Promise.resolve( this );\n\t\t\t\t\t});\n\t\t\t\t}, \n\t\t\t},\n\t\t\tdestroy: {\n\t\t\t\tvalue: function destroy( sourceName ) {\n\t\t\t\t\tconst dataSource = this.model.getDataSource( sourceName );\n\t\t\t\t\tlet promise;\n\t\t\t\t\tif ( 'orphan' === state ) {\n\t\t\t\t\t\tpromise = Promise.reject( new Error( 'Can\\'t destroy an orphan entity' ));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpromise = dataSource.deleteOne( this.getTable( sourceName ), this.getUidQuery( dataSource ));\n\t\t\t\t\t}\n\t\t\t\t\tstate = 'syncing';\n\t\t\t\t\tlastDataSource = dataSource.name;\n\t\t\t\t\treturn promise.then( dataStoreEntity => {\n\t\t\t\t\t\t// If this was our only data source, then go back to orphan state\n\t\t\t\t\t\tif ( 0 === _.without( model.dataSources, dataSource.name ).length ) {\n\t\t\t\t\t\t\tstate = 'orphan';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate = 'sync';\n\t\t\t\t\t\t\tdelete attributes.idHash[dataSource.name];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tentityDefined.dataSources[dataSource.name] = undefined;\n\t\t\t\t\t\tdataStoreEntity = null;\n\t\t\t\t\t\treturn Promise.resolve( this );\n\t\t\t\t\t});\n\t\t\t\t}, \n\t\t\t},\n\t\t\tgetState: {\n\t\t\t\tvalue: function getState() {\n\t\t\t\t\treturn state; \n\t\t\t\t}, \n\t\t\t},\n\t\t\tgetLastDataSource: {\n\t\t\t\tvalue: function getLastDataSource() {\n\t\t\t\t\treturn lastDataSource; \n\t\t\t\t}, \n\t\t\t},\n\t\t\tgetUidQuery: {\n\t\t\t\tvalue: function getUidQuery( dataSource ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: attributes.idHash[dataSource.name],\n\t\t\t\t\t};\n\t\t\t\t}, \n\t\t\t},\n\t\t\tgetTable: {\n\t\t\t\tvalue: function getTable( sourceName ) {\n\t\t\t\t\treturn name;\n\t\t\t\t}, \n\t\t\t},\n\t\t}));\n\t\tconst entityProxied = new Proxy( entityDefined, {\n\t\t\tget: ( obj, key ) => {\n\t\t\t\tif ( 'constructor' === key ) {\n\t\t\t\t\treturn entityDefined[key];\n\t\t\t\t}\n\t\t\t\tif ( entityDefined.hasOwnProperty( key )) {\n\t\t\t\t\treturn entityDefined[key];\n\t\t\t\t}\n\t\t\t\treturn attributes[key];\n\t\t\t},\n\t\t\tset: ( obj, key, value ) => {\n\t\t\t\tif ( entityDefined.hasOwnProperty( key )) {\n\t\t\t\t\tconsole.warn( `Trying to define read-only key ${ key }.` );\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\treturn attributes[key] = value;\n\t\t\t},\n\t\t\tenumerate: obj => {\n\t\t\t\treturn _.keys( attributes );\n\t\t\t},\n\t\t\townKeys: obj => {\n\t\t\t\treturn _( attributes ).keys().concat( entityPrototypeProperties ).value();\n\t\t\t},\n\t\t\thas: ( obj, key ) => {\n\t\t\t\treturn attributes.hasOwnProperty( key );\n\t\t\t},\n\t\t});\n\t\treturn entityProxied;\n\t}\n\tconst EntityWrapped = Object.defineProperties( Entity, {\n\t\t/**\n\t\t * @property {String} name Name of the class\n\t\t * @memberof Entity\n\t\t * @static\n\t\t * @public\n\t\t * @author gerkin\n\t\t */\n\t\tname: {\n\t\t\tvalue:      `${ name  }Entity`,\n\t\t\twritable:   false,\n\t\t\tenumerable: true, \n\t\t},\n\t\t/**\n\t\t * @property {Model} model Reference to this entity's model\n\t\t * @memberof Entity\n\t\t * @static\n\t\t * @public\n\t\t * @author gerkin\n\t\t */\n\t\tmodel: {\n\t\t\tvalue:      model,\n\t\t\twritable:   false,\n\t\t\tenumerable: true, \n\t\t},\n\t});\n\treturn EntityWrapped;\n}\n\n// Add prototype infos to the function, so users can know which props are used.\n_.assign( EntityFactory, {\n\tentityPrototype,\n\tentityPrototypeProperties,\n});\n\nmodule.exports = EntityFactory;\n\n},{\"./dataStoreEntities/baseEntity\":5,\"./diaspora\":8,\"bluebird\":\"bluebird\",\"lodash\":\"lodash\"}],10:[function(require,module,exports){\n'use strict';\n\nconst _ = require( 'lodash' );\nconst Promise = require( 'bluebird' );\nconst EntityFactory = require( './entityFactory' );\nconst Diaspora = require( './diaspora' );\n\nconst {\n\tentityPrototypeProperties,\n} = EntityFactory;\n\n/**\n * @class Model\n * @classdesc The model class is used to interact with the population of all data of the same type.\n * @description Construct a new model.\n * @public\n * @author gerkin\n * @param {String} namespace Namespace of the model. This may be used for scope or inheriting mechanisms\n * @param {String} namespace Name of the model\n * @param {ModelDescription} modelDesc Hash representing the configuration of the model\n */\nclass Model {\n\tconstructor( namespace, name, modelDesc ) {\n\t\tconst reservedPropIntersect = _.intersection( entityPrototypeProperties, _.keys( modelDesc.attributes ));\n\t\tif ( 0 !== reservedPropIntersect.length ) {\n\t\t\tthrow new Error( `${ JSON.stringify( reservedPropIntersect ) } is/are reserved property names. To match those column names in data source, please use the data source mapper property` );\n\t\t}\n\t\tif ( !modelDesc.hasOwnProperty( 'sources' ) || !( _.isArrayLike( modelDesc.sources ) || _.isObject( modelDesc.sources ))) {\n\t\t\tthrow new TypeError( `Expect model sources to be either an array or an object, had ${ JSON.stringify( modelDesc.sources ) }.` );\n\t\t}\n\t\t// Normalize our sources: normalized form is an object with keys corresponding to source name, and key corresponding to remaps\n\t\tconst sourcesNormalized = _.isArrayLike( modelDesc.sources ) ? _.zipObject( modelDesc.sources, _.times( modelDesc.sources.length, _.constant({}))) : _.mapValues( modelDesc.sources, ( remap, dataSourceName ) => {\n\t\t\tif ( true === remap ) {\n\t\t\t\treturn {};\n\t\t\t} else if ( _.isObject( remap )) {\n\t\t\t\treturn remap;\n\t\t\t} else {\n\t\t\t\tthrow new TypeError( `Datasource \"${ dataSourceName }\" value is invalid: expect \\`true\\` or a remap hash, but have ${ JSON.stringify( remap ) }` );\n\t\t\t}\n\t\t});\n\t\t// List sources required by this model\n\t\tconst sourceNames = _.keys( sourcesNormalized );\n\t\t// Get sources. Later, implement scoping so that modules A requiring module B can access dataSources from module B\n\t\tconst scopeAvailableSources = Diaspora.dataSources[namespace];\n\t\tconst modelSources = _.pick( scopeAvailableSources, sourceNames );\n\t\tconst missingSources = _.difference( sourceNames, _.keys( modelSources ));\n\t\tif ( 0 !== missingSources.length ) {\n\t\t\tthrow new Error( `Missing data sources ${ missingSources.map( v => `\"${ v }\"` ).join( ', ' ) }` );\n\t\t}\n\n\t\t// Now, we are sure that config is valid. We can configure our datasources with model options, and set `this` properties.\n\t\t_.forEach( sourcesNormalized, ( remap, sourceName ) => {\n\t\t\tconst sourceConfiguring = modelSources[sourceName];\n\t\t\tsourceConfiguring.configureCollection( name, remap );\n\t\t});\n\t\tthis.dataSources = modelSources;\n\t\tthis.defaultDataSource = sourceNames[0];\n\t\tthis.name = name;\n\t\tthis.entityFactory = EntityFactory( name, modelDesc.attributes, this );\n\t}\n\n\tgetDataSource( sourceName ) {\n\t\tif ( _.isNil( sourceName )) {\n\t\t\tsourceName = this.defaultDataSource;\n\t\t} else if ( !this.dataSources.hasOwnProperty( sourceName )) {\n\t\t\tthrow new Error( `Unknown data source \"${ sourceName }\" in model \"${ this.name }\", available are ${ _.keys( this.dataSources ).map( v => `\"${ v }\"` ).join( ', ' ) }` );\n\t\t}\n\t\treturn this.dataSources[sourceName];\n\t}\n\n\tspawn( source ) {\n\t\tconst newEntity = new this.entityFactory( source );\n\t\treturn newEntity;\n\t}\n\n\tspawnMulti( sources ) {\n\t\treturn _.map( sources, source => this.spawn( source ));\n\t}\n\n\tinsert( source, dataSourceName ) {\n\t\tconst dataSource = this.getDataSource( dataSourceName );\n\t\treturn dataSource.insertOne( this.name, source ).then( entity => {\n\t\t\treturn Promise.resolve( new this.entityFactory( entity ));\n\t\t});\n\t}\n\n\tinsertMany( sources, dataSourceName ) {\n\t\tconst dataSource = this.getDataSource( dataSourceName );\n\t\treturn dataSource.insertMany( this.name, sources ).then( entities => {\n\t\t\treturn Promise.resolve( _.map( entities, entity => new this.entityFactory( entity )));\n\t\t});\n\t}\n\n\tfind( queryFind = {}, options = {}, dataSourceName ) {\n\t\tif ( _.isString( options ) && !!_.isNil( dataSourceName )) {\n\t\t\tdataSourceName = options;\n\t\t\toptions = {};\n\t\t} else if ( _.isString( queryFind ) && !!_.isNil( options ) && !!_.isNil( dataSourceName )) {\n\t\t\tdataSourceName = queryFind;\n\t\t\tqueryFind = {};\n\t\t\toptions = {};\n\t\t}\n\t\tconst dataSource = this.getDataSource( dataSourceName );\n\t\treturn dataSource.findOne( this.name, queryFind, options ).then( dataSourceEntity => {\n\t\t\tif ( _.isNil( dataSourceEntity )) {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t\tconst newEntity = new this.entityFactory( dataSourceEntity );\n\t\t\tnewEntity.dataSources[dataSource.name] = dataSourceEntity;\n\t\t\treturn Promise.resolve( newEntity );\n\t\t});\n\t}\n\n\tfindMany( queryFind = {}, options = {}, dataSourceName ) {\n\t\tif ( _.isString( options ) && !!_.isNil( dataSourceName )) {\n\t\t\tdataSourceName = options;\n\t\t\toptions = {};\n\t\t} else if ( _.isString( queryFind ) && !!_.isNil( options ) && !!_.isNil( dataSourceName )) {\n\t\t\tdataSourceName = queryFind;\n\t\t\tqueryFind = {};\n\t\t\toptions = {};\n\t\t}\n\t\tconst dataSource = this.getDataSource( dataSourceName );\n\t\treturn dataSource.findMany( this.name, queryFind, options ).then( dataSourceEntities => {\n\t\t\tconst entities = _.map( dataSourceEntities, dataSourceEntity => {\n\t\t\t\tconst newEntity = new this.entityFactory( dataSourceEntity );\n\t\t\t\tnewEntity.dataSources[dataSource.name] = dataSourceEntity;\n\t\t\t\treturn newEntity;\n\t\t\t});\n\t\t\treturn Promise.resolve( entities );\n\t\t});\n\t}\n\n\tupdate( queryFind, update, options = {}, dataSourceName ) {\n\t\tif ( _.isString( options ) && !!_.isNil( dataSourceName )) {\n\t\t\tdataSourceName = options;\n\t\t\toptions = {};\n\t\t}\n\t\tconst dataSource = this.getDataSource( dataSourceName );\n\t\treturn dataSource.updateOne( this.name, queryFind, update, options ).then( dataSourceEntity => {\n\t\t\tif ( _.isNil( dataSourceEntity )) {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t\tconst newEntity = new this.entityFactory( dataSourceEntity );\n\t\t\treturn Promise.resolve( newEntity );\n\t\t});\n\t}\n\n\tupdateMany( queryFind, update, options = {}, dataSourceName ) {\n\t\tif ( _.isString( options ) && !!_.isNil( dataSourceName )) {\n\t\t\tdataSourceName = options;\n\t\t\toptions = {};\n\t\t}\n\t\tconst dataSource = this.getDataSource( dataSourceName );\n\t\treturn dataSource.updateMany( this.name, queryFind, update, options ).then( dataSourceEntities => {\n\t\t\tconst entities = _.map( dataSourceEntities, dataSourceEntity => {\n\t\t\t\tconst newEntity = new this.entityFactory( dataSourceEntity );\n\t\t\t\treturn newEntity;\n\t\t\t});\n\t\t\treturn Promise.resolve( entities );\n\t\t});\n\t}\n\n\tdelete( queryFind = {}, options = {}, dataSourceName ) {\n\t\tif ( _.isString( options ) && !!_.isNil( dataSourceName )) {\n\t\t\tdataSourceName = options;\n\t\t\toptions = {};\n\t\t}\n\t\tconst dataSource = this.getDataSource( dataSourceName );\n\t\treturn dataSource.deleteOne( this.name, queryFind, options );\n\t}\n\n\tdeleteMany( queryFind = {}, options = {}, dataSourceName ) {\n\t\tif ( _.isString( options ) && !!_.isNil( dataSourceName )) {\n\t\t\tdataSourceName = options;\n\t\t\toptions = {};\n\t\t}\n\t\tconst dataSource = this.getDataSource( dataSourceName );\n\t\treturn dataSource.deleteMany( this.name, queryFind, options );\n\t}\n}\n\nmodule.exports = Model;\n\n},{\"./diaspora\":8,\"./entityFactory\":9,\"bluebird\":\"bluebird\",\"lodash\":\"lodash\"}]},{},[1])(1)\n});"]}