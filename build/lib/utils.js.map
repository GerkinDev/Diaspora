{"version":3,"sources":["../../lib/utils.js"],"names":["require","_","module","exports","defineEnumerableProperties","subject","handlers","remappedHandlers","mapValues","isNil","handler","Object","getPrototypeOf","prototype","value","defaults","enumerable","hasOwnProperty","writable","defineProperties","applyUpdateEntity","update","entity","forEach","val","key","isUndefined","generateUUID","d","Date","getTime","global","performance","now","uuid","replace","r","Math","random","floor","c","toString","applyOptionsToSet","set","options","limit","Infinity","skip","slice","length"],"mappings":";;;;;;;;;;;;;AAAA;;iBAIIA,QAAS,gBAAT,C;MADHC,C,YAAAA,C;AAGD;;;;;AAIAC,SAAOC,OAAP,GAAiB;AAChBC,8BADgB,sCACYC,OADZ,EACqBC,QADrB,EACgC;AAC/C,UAAMC,mBAAmBN,EAAEO,SAAF,CAAaF,QAAb,EAAuB,mBAAW;AAC1D,YAAKL,EAAEQ,KAAF,CAASC,OAAT,KAAsB,aAAa,OAAOA,OAA1C,IAAqDC,OAAOC,cAAP,CAAuBF,OAAvB,MAAqCC,OAAOE,SAAtG,EAAkH;AACjHH,oBAAU;AACTI,mBAAOJ;AADE,WAAV;AAGA;;AACD,YAAIK,WAAW;AACdC,sBAAY;AADE,SAAf;;AAGA,YAAK,CAACN,QAAQO,cAAR,CAAwB,KAAxB,CAAN,EAAuC;AACtCF,mBAASG,QAAT,GAAoB,KAApB;AACA;;AACDjB,UAAEc,QAAF,CAAYL,OAAZ,EAAqBK,QAArB;;AACA,eAAOL,OAAP;AACA,OAdwB,CAAzB;;AAeA,aAAOC,OAAOQ,gBAAP,CAAyBd,OAAzB,EAAkCE,gBAAlC,CAAP;AACA,KAlBe;;AAmBhB;;;;;;;;AAQAa,qBA3BgB,6BA2BGC,MA3BH,EA2BWC,MA3BX,EA2BoB;AACnCrB,QAAEsB,OAAF,CAAWF,MAAX,EAAmB,UAAEG,GAAF,EAAOC,GAAP,EAAgB;AAClC,YAAKxB,EAAEyB,WAAF,CAAeF,GAAf,CAAL,EAA2B;AAC1B,iBAAOF,OAAOG,GAAP,CAAP;AACA,SAFD,MAEO;AACNH,iBAAOG,GAAP,IAAcD,GAAd;AACA;AACD,OAND;;AAOA,aAAOF,MAAP;AACA,KApCe;;AAsChB;;;;;;AAMAK,gBA5CgB,0BA4CD;AACd,UAAIC,IAAI,IAAIC,IAAJ,GAAWC,OAAX,EAAR,CADc,CAEd;;AACA,UAAKC,OAAOC,WAAP,IAAsB,eAAe,OAAOD,OAAOC,WAAP,CAAmBC,GAApE,EAA0E;AACzEL,aAAKG,OAAOC,WAAP,CAAmBC,GAAnB,EAAL;AACA;;AACD,UAAMC,OAAO,uCAAuCC,OAAvC,CAAgD,OAAhD,EAAyD,aAAK;AAC1E,YAAMC,IAAI,CAAER,IAAIS,KAAKC,MAAL,KAAgB,EAAtB,IAA6B,EAA7B,GAAkC,CAA5C;AACAV,YAAIS,KAAKE,KAAL,CAAYX,IAAI,EAAhB,CAAJ;AACA,eAAO,CAAE,QAAQY,CAAR,GAAYJ,CAAZ,GAAkBA,IAAI,GAAJ,GAAU,GAA9B,EAAqCK,QAArC,CAA+C,EAA/C,CAAP;AACA,OAJY,CAAb;AAKA,aAAOP,IAAP;AACA,KAxDe;;AA0DhB;;;;;;;;AAQAQ,qBAlEgB,6BAkEGC,GAlEH,EAkEQC,OAlER,EAkEkB;AACjC3C,QAAEc,QAAF,CAAY6B,OAAZ,EAAqB;AACpBC,eAAOC,QADa;AAEpBC,cAAO;AAFa,OAArB;;AAIAJ,YAAMA,IAAIK,KAAJ,CAAWJ,QAAQG,IAAnB,CAAN;;AACA,UAAKJ,IAAIM,MAAJ,GAAaL,QAAQC,KAA1B,EAAkC;AACjCF,cAAMA,IAAIK,KAAJ,CAAW,CAAX,EAAcJ,QAAQC,KAAtB,CAAN;AACA;;AACD,aAAOF,GAAP;AACA;AA5Ee,GAAjB","file":"utils.js","sourcesContent":["'use strict';\n\nconst {\n\t_,\n} = require( './dependencies' );\n\n/**\n * @module Utils\n */\n\nmodule.exports = {\n\tdefineEnumerableProperties( subject, handlers ) {\n\t\tconst remappedHandlers = _.mapValues( handlers, handler => {\n\t\t\tif ( _.isNil( handler ) || 'object' !== typeof handler || Object.getPrototypeOf( handler ) !== Object.prototype ) {\n\t\t\t\thandler = {\n\t\t\t\t\tvalue: handler,\n\t\t\t\t};\n\t\t\t}\n\t\t\tlet defaults = {\n\t\t\t\tenumerable: true,\n\t\t\t};\n\t\t\tif ( !handler.hasOwnProperty( 'get' )) {\n\t\t\t\tdefaults.writable = false;\n\t\t\t}\n\t\t\t_.defaults( handler, defaults );\n\t\t\treturn handler;\n\t\t});\n\t\treturn Object.defineProperties( subject, remappedHandlers );\n\t},\n\t/**\n\t * Merge update query with the entity. This operation allows to delete fields.\n\t *\n\t * @author gerkin\n\t * @param   {Object} update - Hash representing modified values. A field with an `undefined` value deletes this field from the entity.\n\t * @param   {Object} entity - Entity to update.\n\t * @returns {Object} Entity modified.\n\t */\n\tapplyUpdateEntity( update, entity ) {\n\t\t_.forEach( update, ( val, key ) => {\n\t\t\tif ( _.isUndefined( val )) {\n\t\t\t\tdelete entity[key];\n\t\t\t} else {\n\t\t\t\tentity[key] = val;\n\t\t\t}\n\t\t});\n\t\treturn entity;\n\t},\n\n\t/**\n\t * Create a new unique id for this store's entity.\n\t * \n\t * @author gerkin\n\t * @returns {string} Generated unique id.\n\t */\n\tgenerateUUID() {\n\t\tlet d = new Date().getTime();\n\t\t// Use high-precision timer if available\n\t\tif ( global.performance && 'function' === typeof global.performance.now ) {\n\t\t\td += global.performance.now();\n\t\t}\n\t\tconst uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace( /[xy]/g, c => {\n\t\t\tconst r = ( d + Math.random() * 16 ) % 16 | 0;\n\t\t\td = Math.floor( d / 16 );\n\t\t\treturn ( 'x' === c ? r : ( r & 0x3 | 0x8 )).toString( 16 );\n\t\t});\n\t\treturn uuid;\n\t},\n\n\t/**\n\t * Reduce, offset or sort provided set.\n\t * \n\t * @author gerkin\n\t * @param   {Object[]} set     - Objects retrieved from memory store.\n\t * @param   {Object}   options - Options to apply to the set.\n\t * @returns {Object[]} Set with options applied.\n\t */\n\tapplyOptionsToSet( set, options ) {\n\t\t_.defaults( options, {\n\t\t\tlimit: Infinity,\n\t\t\tskip:  0,\n\t\t});\n\t\tset = set.slice( options.skip );\n\t\tif ( set.length > options.limit ) {\n\t\t\tset = set.slice( 0, options.limit );\n\t\t}\n\t\treturn set;\n\t},\n};\n"]}