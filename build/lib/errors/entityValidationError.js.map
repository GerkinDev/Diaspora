{"version":3,"sources":["../../../lib/errors/entityValidationError.js"],"names":["require","_","ValidationError","stringifyValidationObject","validationErrors","mapValues","error","key","JSON","stringify","value","omit","values","map","identity","join","EntityValidationError","message","errorArgs","module","exports"],"mappings":";;;;;;;;;;;;;AAAA;;;;iBAIIA,QAAS,iBAAT,C;MADHC,C,YAAAA,C;;AAED,MAAMC,kBAAkBF,QAAS,mBAAT,CAAxB;;AAEA,MAAMG,4BAA4B,SAA5BA,yBAA4B,mBAAoB;AACrD,WAAOF,EAAGG,gBAAH,EAAsBC,SAAtB,CAAgC,UAAEC,KAAF,EAASC,GAAT,EAAkB;AACxD,aAAWA,GAAX,YAAuBC,KAAKC,SAAL,CAAgBH,MAAMI,KAAtB,CAAvB,YACGT,EAAGK,KAAH,EAAWK,IAAX,CAAgB,CAAE,OAAF,CAAhB,EAA6BC,MAA7B,GAAsCC,GAAtC,CAA2CZ,EAAEa,QAA7C,EAAwDJ,KAAxD,EADH;AAEA,KAHM,EAGJE,MAHI,GAGKG,IAHL,CAGW,MAHX,CAAP;AAIA,GALD;AAOA;;;;AAIA;;;;;;;MAKMC,qB;;;;;AACL;;;;;;;;AAQA,mCAAaZ,gBAAb,EAA+Ba,OAA/B,EAAuD;AAAA;;AACtDA,wBACCd,0BAA2BC,gBAA3B,CADD;;AADsD,wCAAZc,SAAY;AAAZA,iBAAY;AAAA;;AAGtD,mEAAOD,OAAP,SAAmBC,SAAnB;AACA,YAAKd,gBAAL,GAAwBA,gBAAxB;AAJsD;AAKtD;;;IAdkCF,e;;AAiBpCiB,SAAOC,OAAP,GAAiBJ,qBAAjB","file":"entityValidationError.js","sourcesContent":["'use strict';\n\nconst {\n\t_,\n} = require( '../dependencies' );\nconst ValidationError = require( './validationError' );\n\nconst stringifyValidationObject = validationErrors => {\n\treturn _( validationErrors ).mapValues(( error, key ) => {\n\t\treturn `${ key } => ${ JSON.stringify( error.value ) }\n* ${ _( error ).omit([ 'value' ]).values().map( _.identity ).value() }`;\n\t}).values().join( '\\n* ' );\n};\n\n/**\n * @module Errors/EntityValidationError\n */\n\n/**\n * This class represents an error related to validation on an entity.\n *\n * @extends module:Errors/ValidationError~ValidationError\n */\nclass EntityValidationError extends ValidationError {\n\t/**\n\t * Construct a new validation error.\n\t *\n\t * @author gerkin\n\t * @param {Object} validationErrors - Object describing validation errors, usually returned by {@link Diaspora.Check}.\n\t * @param {string} message          - Message of this error.\n\t * @param {*}      errorArgs        - Arguments to transfer to parent Error.\n\t */\n\tconstructor( validationErrors, message, ...errorArgs ) {\n\t\tmessage += `\n${ stringifyValidationObject( validationErrors ) }`;\n\t\tsuper( message, ...errorArgs );\n\t\tthis.validationErrors = validationErrors;\n\t}\n}\n\nmodule.exports = EntityValidationError;\n"]}