{"version":3,"sources":["../../../lib/errors/setValidationError.js"],"names":["require","_","ValidationError","SetValidationError","message","validationErrors","map","error","index","isNil","replace","filter","identity","join","errorArgs","module","exports"],"mappings":";;;;;;;;;;;;;AAAA;;;;iBAIIA,QAAS,iBAAT,C;MADHC,C,YAAAA,C;;AAED,MAAMC,kBAAkBF,QAAS,mBAAT,CAAxB;AAEA;;;;AAIA;;;;;;;MAKMG,kB;;;;;AACL;;;;;;;;;AASA,gCAAaC,OAAb,EAAsBC,gBAAtB,EAAuD;AAAA;;AACtDD,yBAAkBH,EAAGI,gBAAH,EAAsBC,GAAtB,CAA0B,UAAEC,KAAF,EAASC,KAAT,EAAoB;AAC/D,YAAKP,EAAEQ,KAAF,CAASF,KAAT,CAAL,EAAuB;AACtB,iBAAO,KAAP;AACA,SAFD,MAEO;AACN,iBAAWC,KAAX,UAAyBD,MAAMH,OAAN,CAAcM,OAAd,CAAuB,KAAvB,EAA8B,KAA9B,CAAzB;AACA;AACD,OANiB,EAMfC,MANe,CAMPV,EAAEW,QANK,EAMMC,IANN,CAMY,KANZ,CAAlB;;AADsD,wCAAZC,SAAY;AAAZA,iBAAY;AAAA;;AAQtD,mEAAOV,OAAP,SAAmBU,SAAnB;AACA,YAAKT,gBAAL,GAAwBA,gBAAxB;AATsD;AAUtD;;;IApB+BH,e;;AAuBjCa,SAAOC,OAAP,GAAiBb,kBAAjB","file":"setValidationError.js","sourcesContent":["'use strict';\n\nconst {\n\t_,\n} = require( '../dependencies' );\nconst ValidationError = require( './validationError' );\n\n/**\n * @module Errors/SetValidationError\n */\n\n/**\n * This class represents an error related to validation on a set.\n *\n * @extends module:Errors/ValidationError~ValidationError\n */\nclass SetValidationError extends ValidationError {\n\t/**\n\t * Construct a new validation error.\n\t *\n\t * @author gerkin\n\t * @see Diaspora.check\n\t * @param {string}                                                      message          - Message of this error.\n\t * @param {module:Errors/EntityValidationError~EntityValidationError[]} validationErrors - Array of validation errors.\n\t * @param {*}                                                           errorArgs        - Arguments to transfer to parent Error.\n\t */\n\tconstructor( message, validationErrors, ...errorArgs ) {\n\t\tmessage += `[\\n${ _( validationErrors ).map(( error, index ) => {\n\t\t\tif ( _.isNil( error )) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn `${ index  }: ${  error.message.replace( /\\n/g, '\\n\t' ) }`;\n\t\t\t}\n\t\t}).filter( _.identity ).join( ',\\n' ) }\\n]`;\n\t\tsuper( message, ...errorArgs );\n\t\tthis.validationErrors = validationErrors;\n\t}\n}\n\nmodule.exports = SetValidationError;\n"]}