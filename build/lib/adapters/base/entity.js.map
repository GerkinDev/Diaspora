{"version":3,"sources":["../../../../lib/adapters/base/entity.js"],"names":["require","_","DataStoreEntity","entity","dataSource","isNil","undefined","TypeError","Object","defineProperties","value","enumerable","configurable","assign","toObject","omit","module","exports"],"mappings":";;;;;;;;;;;;;AAAA;;iBAIIA,QAAS,oBAAT,C;MADHC,C,YAAAA,C;AAGD;;;;AAIA;;;;;;MAIMC,e;;;AACL;;;;;;;AAOA,6BAAaC,MAAb,EAAqBC,UAArB,EAAkC;AACjC,UAAKH,EAAEI,KAAF,CAASF,MAAT,CAAL,EAAwB;AACvB,eAAOG,SAAP;AACA;;AACD,UAAKL,EAAEI,KAAF,CAASD,UAAT,CAAL,EAA4B;AAC3B,cAAM,IAAIG,SAAJ,kEAA8EH,UAA9E,QAAN;AACA;;AACDI,aAAOC,gBAAP,CAAyB,IAAzB,EAA+B;AAC9BL,oBAAY;AACXM,iBAAcN,UADH;AAEXO,sBAAc,KAFH;AAGXC,wBAAc;AAHH;AADkB,OAA/B;;AAOAX,QAAEY,MAAF,CAAU,IAAV,EAAgBV,MAAhB;AACA;AAED;;;;;;;;;;WAMAW,Q,uBAAW;AACV,aAAOb,EAAEc,IAAF,CAAQ,IAAR,EAAc,CAAE,YAAF,EAAgB,IAAhB,CAAd,CAAP;AACA,K;;;;;AAGFC,SAAOC,OAAP,GAAiBf,eAAjB","file":"entity.js","sourcesContent":["'use strict';\n\nconst {\n\t_,\n} = require( '../../dependencies' );\n\n/**\n * @namespace DataStoreEntities\n */\n\n/**\n * DataStoreEntity is the sub-entity reflecting a single source content. Values may differ from the Entity itself.\n * @memberof DataStoreEntities\n */\nclass DataStoreEntity {\n\t/**\n\t * Construct a new data source entity with specified content & parent.\n\t * \n\t * @author gerkin\n\t * @param {Object}                   entity     - Object containing attributes to inject in this entity. The only **reserved key** is `dataSource`.\n\t * @param {Adapters.DiasporaAdapter} dataSource - Adapter that spawn this entity.\n\t */\n\tconstructor( entity, dataSource ) {\n\t\tif ( _.isNil( entity )) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif ( _.isNil( dataSource )) {\n\t\t\tthrow new TypeError( `Expect 2nd argument to be the parent of this entity, have \"${ dataSource }\"` );\n\t\t}\n\t\tObject.defineProperties( this, {\n\t\t\tdataSource: {\n\t\t\t\tvalue:        dataSource,\n\t\t\t\tenumerable:   false,\n\t\t\t\tconfigurable: false,\n\t\t\t},\n\t\t});\n\t\t_.assign( this, entity );\n\t}\n\t\n\t/**\n\t * Returns a plain object corresponding to this entity attributes.\n\t * \n\t * @author gerkin\n\t * @returns {Object} Plain object representing this entity.\n\t */\n\ttoObject() {\n\t\treturn _.omit( this, [ 'dataSource', 'id' ]);\n\t}\n}\n\nmodule.exports = DataStoreEntity;\n"]}